---title: "「新年会だよ！JUSO Jelly!+家族ラボ vol.6」に参加してきました！"date: 2012-01-28category: ['Tech']tags: ['meetup']published: trueslug: juso_coworking--- JUSO Coworking - 大阪・十三のコワーキングスペース JUSO Coworkingに参加してきました！  @saiutに誘っていただき、@LHnaoと参加してきました！楽しかったです！！    コワーキング(Coworking)って JUSO CoWorkingについて | JUSO Coworking - 大阪・十三のコワーキングスペース インターネットをはじめとする情報網の高度化・Twitterなど情報シェアのためのサービスの発達・そしてハードのモバイル化は、人々のはたらき方に大きな変化をもたらしました。必ず企業体に属せずとも高いパフ ... コワーキングとは     家族ラボということで、お子さん連れの方が多かったです。   お父さん、お母さんが仕事で作業してるときに、お子さんがその姿を見てる、近寄って、じゃれてる姿は、なんだかいい雰囲気だなっと。実際にお子さんがいらっしゃる方は、そんなこと言ってる場合じゃないぐらい忙しいんだろうですけど。    その中で自分はLokkaと、GoogleAppEngineいじりに没頭。家でだらだらやってたら、ネットサーフィンだけで終わっていただろうけど、いろんな人と関わることができ、自分も作業が進められて有意義な時間を過ごすことが出来ました。また参加させてくださいー        一日の成果       自己紹介LT      RSS生成      Lokkaいじり      参考       JUSO Coworking - 大阪・十三のコワーキングスペース      コワーキングスペースまとめ - NAVER まとめ   
---title: 学びの螺旋にはっと気づくdate: 2012-02-01category: ['Tech']tags: ['学び','Study']published: trueslug: learn---プログラマが知るべき、たったひとつの大事なことがら -DeveloperSummit2011に行ってきました!!- - ギークを夢見るじょーぶん男子 学びは「らせん」である。  同じところに帰って来たと思ってても、絶対に「差分」がある。この差分が暗黙知として蓄積されている。  また、新しい技術でも、既存の技術と同じようなものもある。そのような場合も ... 巡り巡って戻ってきたときにハッとこの話を思い出した     Ruby, Rails, Python,Django、Sinatraをちょっとずつかじってきて、ようやく一周してきてみると、ちょっと違う景色がありました。巡り巡って、同じところに戻ってきたと思っても、ちょっとずつ「差分」があったみたい。    前は、何をやってるかまったくわかってなかったコードがちょっとずつわかってくる。昔は、ActiveRecord、Rakeが何をやってるかまったくわかってなかったけど、ちょっと見えてきた。わかってくると同時に、その凄さにも気づいた。 Shibastagram    知れば知る程、凄さがちょっとわかってくる    今までは、動いたーっていうレベルだったけど、ちょっとずつわかってくると、その凄さもわかってくる。    触って楽しむレベルから、何かを作り出せる楽しさまで進めるといいな。                            プログラマが知るべき97のこと                        オライリージャパン 2010-12-18        ￥ 1,995        Amazon.co.jp で詳細を見る          
---title: 初めてのボルダリングへ行って来ました!!date: 2012-03-03category: ['Activity']tags: ['ボルダリング']published: trueslug: Boulderingimg: "https://farm8.staticflickr.com/7208/6950746455_af9190e7e6.jpg"--- 両腕がパンパンになるという噂のボルダリングやってきました。案の定、腕が筋肉痛の@meganiiです。。  ボルダリングの感想を書いてみます。  できない悔しさ、できる楽しさ  ボルダリングでは、ホールドと呼ばれる登る取っ掛かりを両手両足で掴みながら、決められたコースを登っていく。初級のコースでは、腕の運びだけ決められており、足はどこへ置いてもよいというのが多いみたい。   そんな制限のあるコースを、どうやって腕と足を運ぶかを事前に考えながら登るのが面白いところ。そして、考えた通りに体を動かせないもどかしさ。  できないのが悔しい。自分の中では、やりたい気持ちがあるのに、体がついていかないもどかしさ。逆に考えた通りに、体を動かせてきちっと登れたときはすっごい面白い。   このできない悔しさと、できる楽しさがあるのがボルダリングの楽しいところかなぁって思いました。  自分の思い通りに、自分を動かせる楽しさ  相手がいないスポーツ、競技は、「自分の思い通りに、自分を動かせる」っていう感覚が面白いんだろうなって感じた。  ダーツにしろ、狙った軌道で、狙った位置に飛ばせたときは気持ちよい。ゴルフはやったことないけど、きっとそんな楽しみがあるから、みんなハマっていくんだろうなって思う。  自分の思い通りに、手と足を動かして、登れるようになりたいな。   上手い人の動きに惚れ惚れ   体重移動、足運びが重要なのはどのスポーツも同じなんだなぁって思った。上手い人の次のホールドを探す瞬間の何気ない仕草と、ダイナミックに次のホールドを掴みに行く動き出しの美しさに惚れ惚れした。 #ボルダリング — めがにい (@meganii) March 3, 2012  今回、登れなくて悔しい思いをしたので、そのコースを登れるようになるために、定期的に体を動かせるように、ちょっと通ってみようかなと思いました。   今回行った場所 TOBITO CLIMBING GYM ◇大阪、天王寺のクライミングジム◇　[ボルダリング]  
---title: ボルダリング初心者向け動画まとめdate: 2012-03-13category: ['Activity']tags: ['ボルダリング']published: trueslug: Bouldering---最近、ボルダリングを始めた@meganiiです。参考になりそうな動画を調べてたので、メモしておきます。 【MikuMikuDance】初音ミクのボルダリング講座シリーズ  動きがわかりやすくて参考になった。特に、壁の裏側から見た動きとか見ると、なるほどなーって思った。全話見て、またすぐにボルダリングに行きたくなった。  クライミングの基本 講師：杉田雅俊  解説の数も多くて、参考になる。 次は、クリアしたいな。
---title: 最近文章を書かなくなってきているdate: 2012-03-14category: ['Art']tags: published: trueslug: write--- Writing Notes with Grammy / wickenden いつからだろう、まともに文章を書かなくなってきたのは。  学校を卒業すると、小学校みたいに読書感想文があるわけでもなく、大学みたいにレポートを書くわけでもない。最近、まともに文章を書いていない。圧倒的に文章を書く量が減ってしまっている。  そのせいで、文章を書くことが苦手になっていることを最近感じる。日本語って難しいよね。  思ったこと、考えたことをブログとして、文章に起こす練習をしよう。 しかも、決まった時間である程度のものをかけるようになろう。  練習あるのみですよね。  ってことで、最近読み始めました。                          エンジニアのための文章術再入門講座                 芦屋 広太        翔泳社 2009-02-20        ￥ 2,310        Amazon.co.jp で詳細を見る          
---title: 小さい成長。date: 2012-03-31category: ['Life']tags: ['成長']published: trueslug: step_by_step---  小さい成長を。一歩ずつ。step by step.  どうも、３年目になってしまった@meganiiです。「ちょっとは成長したのかなぁ？」ってつぶやいたら、@nijinochichiさんに「無理矢理にでも成長ポイントを探すべし！」とコメントいただいたので、探してみました。   小さい成長点    Programming  Network  Blog   Programming  ようやくプログラミングを使えるなってきた。  今までは、各フレームワーク（Railsなど）のチュートリアルをひと通り触っただけで、終わっていたし満足していた。  でも、だんだんとそのフレームワークを使って自分がやりたいことを実現できるようになってきた。APIが公開されていたら、それを見てなんとなくだけどわかるようになってきた。  小さい変化だけど、ちょっとずつは前に進んでるみたい。  自分の想いをコードに載せること。自分の想いをカタチにできるようになりたい。   Network  勉強会、オフ会、テニス、ダイビングで、関西、関東、中部の繋がりが増えた。 弱い繋がりが生み出す強い力～Dpub4に行って来ました！！～ - ギークを夢見るじょーぶん男子   関西での繋がりが増えてきたのが、嬉しい。いつまでも関西にいれるとは限らないので、今のうちにいろんなところへ行って、いろんな人に会いたいな。  改めて思うと、同期って大事だなって感じる。同じような仕事をする上での悩み、それを話せる人ってなかなかいない。いつの間にか、３年目になったけど、頑張っていこうー！  みなさんこれからもよろしくお願いします！！   Blog  「誰か」に反応されるようになってきた。  「誰かに反応されるブログにしたい」１、２年前そう思っていた。それが、だんだんとカタチになってきた。誰かに読まれるようになってきた。誰かに反応してもらえるようになってきた。  ホットエントリー２回 勉強会で意識したい７つの学習パターン - ギークを夢見るじょーぶん男子  TEDの英語原稿を取得する - ギークを夢見るじょーぶん男子  昔と比べたら、大きな成長。  見た人がちょっとでも、何かを持ち帰ってくれるような、情報を発信できるようになりたい。   小さい成長を。一歩ずつ。step by step.  ネットの世界を見てると、みんなスゴイ人ばかり。自分と同世代が活躍していたり、自分が同じような年齢になったときも同じ目線に立てるどうかわからない人がたくさんいる。  今自分がいる場所と比較すると、あまりの差に絶望する。  そんな中、改めて、ブログを読み返してみると、こんなことを書いていた。 歳をとること。２０代の自分と３０歳 -「脳は疲れない」を読んで - ギークを夢見るじょーぶん男子 歳をとる ... 脳は「べき乗」で発展する    "歳をとるのを苦に思わない。自分が憧れてた人の当時の年齢に近づくことができるから。自分がその人自身になることはできない。でも、その人に憧れた部分っていうのは真似できる。歳をとりながら、方向修正をしながらその憧れ部分を目指して近づいていくのって楽しくない？"なるほどって思った。 — めがにい (@meganii) August 28, 2011  お前、いいことつぶやいてるやんけ笑。  自分は、あんまり意識してないけど、確かに積み上げている成長を一歩一歩確認して、方向修正しながら憧れ部分を目指せば、少なくとも近づいていくことができるよね。   最後に  新年度が始まりました。  いつまでも、ワクワク、どきどき、できるように楽しみます！   いつまでも、ワクワク、どきどき、できるオトナになりたい — めがにい (@meganii) August 30, 2011  
---title: 直島ぶらり一人旅〜地中美術館〜date: 2012-04-06category: ['Travel']tags: ['travel','直島', '旅行記']published: trueslug: naoshima--- 代休をいただいたので、直島へぶらり一人旅。地中美術館は、美術好きの同期のオススメする美術館だから行ってみたかった。  地中美術館 地中美術館 | 直島 | ベネッセアートサイト直島     クロード・モネ  絵画というよりも、むしろその作品空間が自体に惹かれた。  薄暗い入り口から入り、何があるのかとおそるおそる近づく。真っ白な広い空間の中に、光が差し込んでいる。柔らかな外の光だ。この空間に足を踏み入れた瞬間、身震いがした。まるで、映画の世界。異世界に迷い込んだ主人公の気分になった。  金曜日、学生の春休みも終わったという絶好のタイミングでいけたおかげかしらないが、人もまばらで、作品というよりもむしろその空間を独占できた。  誰もいない真っ白な作品空間に、自分と作品だけが存在している。音が吸い込まれる。作品のみが存在でき、それ以外は排除されいるような世界にいるような気分。パーフェクトワールド。そんなことを思い浮かべながら、空間を独り占めできたなのは、この上ない幸せなことなのかもしれない。(土日の混雑の中じゃきっと味わえなかっただろう)  入り口付近から、作品空間をぼんやりと見ていると、誰かが入ってきた。全身に光を受け絵画を見上げる姿は、実に絵になる。作品空間に入った人もまた、作品を彩る一部になる。面白い。  また見に来たい。    ウォルター・デ・マリア  入り口付近から観ると、階段を登った先、中央の丸い球体のちょうど真ん中に自分の姿が映る。球体に映る自分の正面には、天空への開かれた扉が見え、その左右には天空への扉の道標となるろうそくが並んでいるようにみえる。球体の左右には、閉ざされた扉。ファイナルファンタジーのダンジョンにありそう。  球体を見る場所によって、映る形状が変わってくる。また、時間帯によって、光のあたりかたが変わるそうだ。見るときによって作品がことなってみえるのは面白い。    ジェームズ・タレル  完全に騙された。一枚の壁かと思ってたところが実は、入り口だったなんて。このダマされた感とナイトプログラムについては、後ほど書こうと思う。  光のアートを堪能した。面白かった。   また、次行きたくなった。教えて教えてくれてありがとう。 
---title: "Happiness"date: 2012-04-23category: ['Tech']tags: ['ted'] published: trueslug: happiness---   Dan Gilbert asks, Why are we happy? | Video on TED.com      日本語訳 "The great source of both the misery and disorders of human life seems to arise from overrating the difference between one permanent situation and another ... Some of these situations may, no doubt, deserve to be preferred to others, but none of them can deserve to be pursued with that passionate ardor which drives us to violate the rules either of prudence or of justice, or to corrupt the future tranquility of our minds, either by shame from the remembrance of our own folly, or by remorse for the horror of our own injustice." 人類の生活における苦悩や無秩序の多くは 永続的状況とそれ以外の状況との差異を 過大評価しているところに帰依するようだ いくつかの状況は疑いなく他より好ましいものであるが それらのどれも、慎重さや公平さの規律を犯すまでの 情熱をもってして 追い求める価値はない また未来の心の平穏さは 自らの愚行の記憶による恥、自らの不公平な行いへの 恐怖や後悔によって乱されるべきではない.Adam Smith      In other words: yes, some things are better than others. We should have preferences that lead us into one future over another. But when those preferences drive us too hard and too fast because we have overrated the difference between these futures, we are at risk. When our ambition is bounded, it leads us to work joyfully. When our ambition is unbounded, it leads us to lie, to cheat, to steal, to hurt others, to sacrifice things of real value. When our fears are bounded, we're prudent; we're cautious; we're thoughtful. When our fears are unbounded and overblown, we're reckless, and we're cowardly.  つまり：他より優れているものもあるにはあります ひとつの未来を選び抜く力は持っておくべきです けれどもその選択が異なる未来の差異を過大評価することによって 強引で拙速なものになると リスクが生じるのです 望みは限られたものであれば、楽しむことができます けれども望みは制限なしだと、我々は嘘をつき人を騙しものを盗み、他人を傷つけ 本当に価値のあるものを犠牲にするのです 同時に恐怖が限られたものであるなら 我々は用心深く慎重で分別をもって行動できます しかし恐怖が限りなく強大なものであれば 我々は向こう見ずであり臆病になります   The lesson I want to leave you with from these data is that our longings and our worries are both to some degree overblown, because we have within us the capacity to manufacture the very commodity we are constantly chasing when we choose experience.   私がこれらのデータを使ってみなさんに伝えたかったことは 私たちの願望や心配は、自らの内で作り出されるために どちらも大げさなものとなり、その結果 何かを選んだ後も常に別の何かを探し求めているということです  すごく思い当たる節がある。選択肢が多ければ多いほど、ずーっとー迷ってしまい後悔するパターンが多い。その場で選択肢してしまわなければ、悩み続ける。     選択肢が多すぎる、今の世の中ももしかしたら不幸なのかもしれない。"Freedom to choose -- to change and make up your mind -- is the enemy of synthetic happiness."     一方で、自分が選ばなかった未来よりも、まあ今の選択した未来がいいじゃないかなって思えるのも、Synthetic happinessのおかげなんだろうな。     "We should have preferences tha lead us into one future over anather." 制限すること、ひとつの未来を選び抜く力を持ちたい。  
---title: ラングリッチ始めましたdate: 2012-05-15category: ['Study']tags: published: trueslug: langrich--- 今年の目標は、「英語」！！ってことにしてます。  ということで、少しでも楽しんで英語に触れるようにと、オンライン英会話のラングリッチを始めてみました。  サービス紹介 | ラングリッチ - オンライン英会話    いざ、喋ろうと思っても全然言葉が出てこない・・・  ちょっとでも英語に触れるキッカケになればと思って、しばらく続けてみます！ 
---title: 晴天のテニスブー春合宿2012！！date: 2012-05-18category: ['Activity']tags: published: trueslug: tennisboo---  20120514185718 Photo by meganii  2012/05/12-13 は社会人テニスサークルの合宿に行ってきました！！  いつもは、雨に悩まされる合宿。でも今回は、天気にも恵まれて、がっつりテニスができましたー！そして、今回も楽しかったー。   コーチ陣によるトレーニング  森さん、なおきさん、はまちゃんの指導による体を使うトレーニング。  例えば、かかとから一歩目を踏み出すスタート。今まで、ひたすら拇指球を意識してたから新鮮だった。より大きな筋肉を使う方がいいらしい？！  ダッシュと、野球のペッパー（みたいなやつ）でテニスをやる前に足がパンパン。。  しばらく太ももの筋肉痛がとれませんでした。。   各コーチに分かれての練習   練習テーマ＆担当.pdf（1 ページ） Photo by meganii  赤で線を引っ張った練習に参加。コーチ役のみなさまのおかげで、ちょっとは上達？！現役テニスコーチもいて、楽しく練習できました！！  自分はといえば。・・・もうちょっと教えられるぐらいうまくなりたい    やっぱり醍醐味、団体戦   R0015804 Photo by meganii  ４チームに別れての団体戦！が、まさかの２連続で大学の先輩と同じチーム笑。同大学ペアは実現しませんでしたが、「ワクワク」をモットーに楽しく、ワクワク試合できました！！  最後もなんとか勝てて、終わりよければなんちゃらですね！！   学生気分に戻るキャンプファイアー   R0015772 Photo by meganii  山の神が降臨してのキャンプファイアー！！。社会人になっても、キャンプファイアーで、猛獣狩りに行ったりできるんですね笑。   R0015793 Photo by meganii  最後は残り火を囲みながら、わいわいがやがや。タケノコ、たけのこ、にょっきっき！笑。   みんなのアイドルひなちゃんに名前覚えてもらえた  みんなのアイドルひなちゃん（幼稚園？）に名前を呼ばれたのは、なにげに嬉しい！ドキッとしたよ笑。  もう遊んであげない宣言を受けたのは内緒の話(^^;;    みんなでわいわいテニスが出来る環境  下は20歳から上は人生の先輩まで、いろんな人と一緒にテニスが出来るテニスブー。いつも楽しく参加させてもらってます！  森さんをはじめとした、ブーメンバーのみなさんいつもありがとうございます！！今では、ブーが関西から転勤したくない理由の一つになってます。   キャラが強い人がたくさんいるから、埋もれない様に頑張ります！また参加させてくださいー！！  楽しくテニスできるように練習しなきゃー     関西でテニスしましょー！！ 大阪・社会人テニスサークル ～おおさかテニスブー（大阪テニスブー）～ おおさかテニスブー！  社会人テニスサークル『おおさかテニスブー』 
---title: 20歳を過ぎてから英語を学ぼうと決めた人たちへdate: 2012-05-19category: ['Art']tags: ['book','english']published: trueslug: study_english---                         20歳を過ぎてから英語を学ぼうと決めた人たちへ                 Hiroyuki Hal Shibata        ディスカヴァー・トゥエンティワン 2010-09-15        ￥ 1,470        Amazon.co.jp で詳細を見る            「第２言語」の概念     第２言語は完璧でなくても良い。理解可能な水準まで到達すればそれで十分    試験勉強のためでなく、実際に使うために学習する    試験勉強のためでなく、実際に使うために学習するということを今までしてこなかったように感じる。英語の試験のために、構文、英単語を覚えてきた。でも、それじゃいつまでたっても英語を使えるようにならない。そろそろまともに使えるようになりたい。   そもそもなんで英語を身に着けたいか？     Evernote    Search    Travel   Evernote  同時通訳の日本語でしか、完全に理解できないので、笑うタイミングが違うのは悔しい。  フィルに話す機会があったのに、全然自分の言いたいこと、聞きたいことを聞けなかった悔しさ。  自分の言いたいことを伝えられるようになりたい。自分の聞きたいことを聞けるようになりたい。  Evernote Meetup Tokyoに参加してきました！！ - ギークを夢見るじょーぶん男子 フィルのスピーチはもちろん英語。随時通訳が入っていたので、内容自体は理解することができました。でも、フィル冗談が言ったとき、会場とワンテンポ遅れて反応。なんだかすごく悔しかったです。  ほかにも、英語 ...   Evernoteオフ@名古屋「世界のえばちゃんオフだみゃあ」に行ってきました！！ - ギークを夢見るじょーぶん男子 悔しい。。  さらに、Philが目の前にいるのに、ろくな質問できなかった。   あぁーー悔しい。  自分の伝えたいこと、聞きたいことを聞ける人になりたい。 ...    Search  日本語だと、自分の探したい情報が少なかったり、全然なかったりする。でも、英語だと何件もヒットすることがしばしばある。最初から英語で検索して、英語をスラスラ理解出来ればもうちょっと幸せになれる気がする。   Travel  海外に旅行に行った時に、ガイドさんの力を借りないとまだまだ不安。それだと、行きたいところへ行けないし、なんだか薄っぺらい。  ホテルと、フライトだけ押さえて、フラーっと海外行けるようになりたい。    本の中では、どうして英語を勉強するのか？ということで以下のことを述べていた。    勉強すれば、勉強していない人たちよりもずっと面白いことができるし、楽しい人達と出会うことが出来る。  ずっと面白いことをやりたい！楽しい人達と出会いたい！   ということで、今年の目標は「英語」！！少しずつ頑張ります！！！  参考  英語上達完全マップ 英語上達完全マップ                           20歳を過ぎてから英語を学ぼうと決めた人たちへ                 Hiroyuki Hal Shibata        ディスカヴァー・トゥエンティワン 2010-09-15        ￥ 1,470        Amazon.co.jp で詳細を見る          
---title: 大阪市立科学館で見た金環日食date: 2012-05-22category: ['Activity']tags: published: trueslug: eclipse---  eclipse Photo by meganii   以下のTweetを見かけたので、ふらーっと出社前に、大阪市立科学館によって金環日食を見てきました！周りは、ライブ会場並みの込み具合。日食グラスを買い求める列でいっぱいでした。ちょっと楽しみにしてた拡大映像も断念。   大阪市立科学館では５月２１日朝７時～８時。自由参加・無料の日食観望会を開催します。場所は、科学館の南がわ広場。天文スタッフの解説や、望遠鏡でとらえた映像を拡大投影もします。雨天中止で、朝６時にホームページで告知します。なお科学館内には入れません。公共交通機関でお越し下さい。 — 大阪市立科学館 (@osaka_kagakukan) May 18, 2012   家を出た瞬間は、晴れていたのだが、会場に着くとなんだか怪しげな雲が太陽にかかっていた。  それでも、雲の隙間から太陽が！！うまく雲が太陽の光を遮って、カメラでも普通に撮ることができました！！上の写真のまんなかに金環日食が見えるでしょうか。   R0015882 Photo by meganii   children_edit Photo by meganii  ３人並んでる子供が印象的。   R0015884 Photo by meganii   R0015888 Photo by meganii  プラネタリウムも面白いって聞くから観に行きたいな。  大阪市立科学館－Top  
---title: タスクカフェ@大阪に行ってきました！date: 2012-05-28category: ['Life']tags: ['週次レビュー']published: trueslug: taskcafe---2012年5月26日(土) タスクカフェ@大阪   テーマは週次レビュー。続かない週次レビューを続けるキッカケが見つけられればいいなと、勢いで参加。   @shigotano さんからの説明の後は、もくもくと週次レビューに取り組む。異様な空間だけど、あの空間だったらいろいろ捗りそう。誰かに見られている、みんな集中してるって空間、場ってすごいね。   週次レビューやってて気づいたこと  モヤモヤが消える     あっ、これやっておかないとダメだった    来週これやる予定だったんだ   っていうのが洗い出されてすごくスッキリした。   振り返りに必要な日々の実績がないからふり返りにくい  今何をしていたのか、どこに時間がかかっているのかを把握しにくい。お金の管理とかも全然できてない。日々の入力って大事って再確認。  何にどれだけ時間がかかっているのかを把握したい。   会社では、Excelのタイムスタンプを活用して、それをほぼ日に転記しようかな。   「考えながら作業する時間を極力減らす」  これは、今課題としていること。どうしても、今日何しようかなって考えながら作業にとりかかることが多すぎる。定時後、土日を有意義に使うために、予定を大事にしよう   でも、一人でやろうとしても続かなそう。。  天王寺、なんばあたりで、モクモク週次レビューとかやりたいな。 
---title: 「ふじもなおのアトリエ」で似顔絵描いてもらいました！date: 2012-05-31category: ['Life']tags: published: trueslug: fujimonao--- やっとお願いできました ふじもなおのアトリエ ずっと前からお願いしますねー、っていっててやっとお願いできました！   ポップとシンプルからタイプを選んで、元になる写真を送るだけ！１枚2000円で描いてもらえるサービスです。  前々からお願いしたいなーって思ってたんですが、なぜか今更になってしまいました。もっと早くお願いすればよかったー。   念願の似顔絵アイコン  ポップな感じで、@LHnao さんに描いてもらいました！ありがとうございます！！      これで、ふじもなおファミリーの一員に笑!!。似顔絵アイコンでTwitterできるぞ笑！！    なおさんにアイコン書いてもらった — めがにい (@meganii) May 27, 2012    今ならおまけ付き？！ 似顔絵にオマケ付き！「ふじもなおのアトリエ」がブロガーキャンペーンを始めた件 | 想造ノート 今ならおまけがついてくる？   6/3までのブロガーキャンペーンで、ポップ似顔絵にブログのヘッダ画像のおまけがついてくるそうな。ぎりぎりキャンペーンに間に合ったので、楽しみですね！ 
---title: 一流の習慣術　イチローとマー君が実践する「自分力」の育て方　の奥村さんの講演を聞いてきたdate: 2012-06-06category: ['Life']tags: ['book','講演']published: trueslug: ichiro---                         一流の習慣術　イチローとマー君が実践する「自分力」の育て方 (ソフトバンク新書)                 奥村 幸治        ソフトバンククリエイティブ 2010-07-21        ￥ 767        Amazon.co.jp で詳細を見る           イチローのバッティングピッチャーを務め、またマーくんを育てたという奥村幸治さんの講演を聞く機会があったので、迷わず参加してきた。  もっと話を聞いていたいと思うぐらいに、いろんな面白い話を聞けたので、メモを残しておく。 {{% googleadsense %}}  やらされる練習、足りないものに気づいて自らやる練習  大リーグと日本のプロ野球のキャンプの違いは、練習時間だそうだ。  日本のキャンプだと、9:00-17:00。一方、大リーグのキャンプは、9:00-12:00。お昼には選手は帰ってしまうとのこと。  当然、普通にやったんでは、３時間じゃ練習は足りない。じゃあ足りないものをどう補うか。これを常に考えながらやってるから、やらされている感がない。  大リーグではどんな選手もこんなに自由に練習しているのかというと、どうやら3Aの若手は正反対らしい。つまり、軍隊みたいにやらせる練習を行うとのこと。  なんでかというと、いきなり自由にやらせて、自分からできるようにはならない。まずは徹底して、やらせる練習を行なって考えるための基礎を作るとのこと。  自分はやらされる練習になっていないだろうか。   目標ってね、高すぎるとダメなんですよ  hurdles / qwrrty    目標ってね、高すぎるとダメなんですよ。   高く持つのは夢なんですよね。  高すぎる目標だといつまでたっても達成できず、プラスな気持ちがいつの間にか消えてしまう。少し頑張ったらできることを目標にすることが大事。   初めから何時間練習しようと思って練習してるわけじゃない。自分の中に、１打席、１球に対しての目標があって、それをクリアするために練習している。一つクリアすれば、次の課題、それもクリアすればまた次の課題がある。だからこそ、集中して続けていられる。    っていう話しを聞いて、なるほどなぁって感じたと同時に、イチローの言葉を思い出した。    今自分にできること。頑張ればできそうなこと。そういうことを積み重ねていかないと、遠くの目標は近づいてこない     少し頑張ればできそうな、達成可能な目標に向かって、少しずつ少しずつ積み重ねていきたい。    ちいさいことをかさねることが、とんでもないところに行くただひとつの道。   ルーティーン 「型」  Ichiro / OlympianX 波を作るような努力はしていない。  形が決まっているということは、自分にとって当たり前となり、考えなくても行うことができる。自分がブレなければ、周りのことがだんだん見えてくる。  ブレない心って憧れる。   スポーツのルーティーンは、ある程度想像できるけど、日常生活におけるルーティーンってどんなものがあるかな。無意識を意識してみたい。 
---title: 勢いで飛び込んだ World Domination Summit2012date: 2012-07-12category: ['Travel']tags: ['travel','生き方', '旅行記']published: trueslug: world_domination_summit---勢いで飛び込んだ World Domination Summit 2012/7/6-7/9 オレゴン州ポートランドで開催された、World Domination Summitに参加してきました！ {{% googleadsense %}} 参加の動機  一年前のちょうどこの時期、 @mehori さんのブログを読んでWorld Domination Summitを知りました。 心臓が止まるほどのAwesome。World Domination Summit まとめ | Lifehacking.jp  世界征服のための第一歩。World Domination Summit 2012登録開始間近！ | Lifehacking.jp    記事を読んでいるだけで、写真を眺めているだけで、どんどんと引き込まれる自分がいました。「来年、自分も行けたらいいなぁ。」漠然とそう思ってました。そこから、半年ぐらいが経ったあるとき、TwitterでWDSのチケットを譲っていただけることに！  明らかに無謀であることは分かってました。  英語で自分の気持ちを伝えられない。スピーチも満足に聴けない。でも、現地の雰囲気や、熱気を感じて、何かを持って帰りたい。 そう思って、勢いで行ってきました！！   予想通りだけど、高い高い言語の壁  元々行く前から、スピーチを聞き取るのは厳しいだろうなと思っていたんですが、予想通り厳しかったです。所々のセンテンスを理解するのが今の英語力では精一杯。  それでも、伝わってくるものはありました。   また、基調講演の間にある休憩は、外国人の大海原に放り出される恐怖(笑)。なんとか暇そうな人を探して、勇気を出して話してみる作戦に出てみました。  勇気を出して話しかけてみたところ、こんなよくわかんない日本人の相手をしてくれるぐらい良い人に出会えました。拙い会話しかできませんでしたが、次こそは、お互いの意見交換が出来るようになりたい！なるぞー！  WDSを通じて感じたもの     英語を話せないことへの危機感    Follow Your Passion    薄っぺらい自分   英語を話せないことへの危機感  英語を話せないことに対する危機感を感じた。  いままで生きてきて、英語を自由に使えれば世界が広がると聞かされてきて、頭ではわかっているつもりだった。でも今回、身をもって体感し、危機を感じた。  英語を使わないっていうのは、まったく同じ土俵に立っていない。 情報の取得にしても、情報の発信にしても、リーチ出来る範囲が違いすぎる。   3way handshake ってTCPのコネクションの張り方があるけど、英語での初めての出会いもこんな感じで、コネクションを張ってるみたいだった。Hi! My name ....　Nice to meet you. 握手してコネクションを広げていってた。なんだろう、自然にやってるのが結構衝撃だった。会場以外でも、普通のドーナッツ屋でもその光景を見たのでごく自然なんだろう。   Follow Your Passion  自分のパッションに従うという感覚。   これをやっていれば、その他のことはいらない。自分にとって、熱中できるもの。その情熱、パッションに従うこと。   自分はパッションに従って生きているだろうか？   薄っぺらい自分  パッション、信念、主義主張。何かの問題を解決したいと願う気持ち。自分には、足りてない。  写真は、home | charity: waterのScott Harrison氏。アフリカの水問題を解決するっていう静かで、力強いパッションを感じた。一枚一枚のスライドが衝撃的で、いつの間にか引きこまれていた。  スタイリッシュなチャリティーで世界を変える：Scott Harrison 基調講演 | Lifehacking.jp   ポーランドへ行くフライトの中で読んだ世界征服*のためのやさしい手引きの中に、次の言葉があった。    人は、個人的な問題という狭い枠を超えて、人類全体の問題へと立ち向かうことことが出来るようになるまで、本当に生きはじめていない。マーチン・ルーサー・キングジュニア  Follow my passionに足るだけのパッションを見いだせるだろうか。     さて、来年の再会を喜び合うためにも、英語をなんとかしよう！！  
---title: 人脈ってなんだろうdate: 2012-07-31category: ['Life']tags: ['人脈','book']published: trueslug: connection--- ふと、人脈について考えるキッカケがあったので、考えてみたのだが、そもそも「人脈」ってなんだんだろうか。 「人脈を広げるのが大事」ってよく言われるけれど、自分にとってどんな人が人脈なんだろうか。  「人脈」って言葉自体にお金の匂いがして好きになれない。なので、「人脈を作ろう」という言葉の響きには、しっくり来ない。  自分が思う人脈って、人との繋がり。 自分の価値観に合って、一緒に過ごせる。一緒に何かをできる。何かを作れる人との繋がりみたいなイメージ。 {{% googleadsense %}} 誰を知っているかではなく、誰に知られているか                          レバレッジ人脈術                 本田 直之        ダイヤモンド社 2007-12-14        ￥ 1,500        Amazon.co.jp で詳細を見る            レバレッジ人脈術の著者は次のように述べている。    誰を知っているかではなく、誰に知られているかです。一度会ったきりで縁が薄くなったり、単に名刺を持っているだけの関係は「人脈」とは呼べません。  また、「いろいろ頼ったり、お願いしたりできる相手」でもありません。むしろまったく逆に、人から頼りにされるぐらいでちょうどいい気がします。    私の考える人脈とは、情報を交換したり、人を紹介したり、刺激し合ったりして、一緒に成長していけるようなマインドの高い仲間のことだと思います。  ギブ・アンド・テイクよりコントリビューション  「この人に対して自分はどんな貢献ができるか。」  ギブ・アンド・テイクよりも、貢献（コントリビューション）が大切。   コントリビューション     情報    プレゼント    ノウハウ・アドバイス    コネクト   会いたいと思われるためにはどうすべきか。     常にインプット    魅力的なプロフィール    情報発信    相手にとって自分が「人脈」だと思うのか。「頼ってみたい」と思われるかどうかは、「自分が何ができるか」にかかっている。  自分には、何が出来るんだろう。自分が相手に提供できるものはなんだろう。考えてみたい。  「人脈」、繋がりを広げる  どうしても人脈と聞くと、なんだかビジネスとかお金の匂いって感じを受けてしまう。 でも、もっと楽しく生きるため、やりたいことを一緒に実行するためにも、人脈って必要なのかなって思ってきた。  そのためにも、誰かに何かを提供できる人にならなければ。 
---title: 夏は夏を。date: 2012-08-04category: ['Life']tags: published: trueslug: enjoy--- いつのまにか8月。   学生のときは、夏が近づけば、夏らしい出来事がたくさんあった。  夏の大会、輪島遠征、夏練習、夏合宿、夏期講習、長い長い夏休み。 季節を基準に、生活は動いていた。   でも、働き始めると、夏を感じることってあんまりない。 季節とは関係なくプロジェクトは動いていく。   夏を夏を感じる前にいつのまにか夏が終わっていく。 なんかもったいないよね。   夏は夏を、秋は秋を、冬は冬を、春は春を。一日一日を楽しみたい。   ただただ、流されるんじゃなくて、日常の流れに小石でもいいからちょっとずつ置いていって、流れをせき止めて、自分で自分の流れを作りたい。   今年の夏の目標。今年一年の目標の一つ。   
---title: ap bank fes'12 淡路島!!!date: 2012-08-09category: ['Travel']tags: ['travel','夏フェス']published: trueslug: apbankfes---   「よく来たね 大変だったんじゃない？」 このワンフレーズで、桜井さんの歌声に一瞬にして引き込まれた。   {{% googleadsense %}}  よく来たね 大変だったんじゃない？ 遠方まで疲れちゃったんじゃない？ こんなにいいお天気だから  今年もいっぱい遊ぼう      静けさの中から体の中を通り抜けるような歌声。 クラシックギターの弦がこすれて、「キュキュ」っと鳴く音。  くしゃっとした無邪気な笑顔。 ほんとに楽しそうに歌う姿。  あれは、反則だよね。  初めての淡路島、初めてのap bank fes  野外フェス以前に、ライブも初めてだったのでドキドキワクワク。  ap bank fes'12 に行くまでは、真夏の野外ライブなんてよく行くよなぁって思っていた。 でも、真夏の暑い日差しも、人ごみに揉みくちゃにされることも、この感激を味わえば吹き飛んでしまうんだろうね。   楽しそうに歌う姿に楽しくなる  どのアーティストもホントに楽しそうに、幸せそうに歌っていた。見ているこっちまで楽しくなった。幸せな気持ちになった。  でも、実際1番楽しいのは、ステージで歌ってる人なんだろうね。  自分が歌ってる歌を目の前のファンに聴いてもらえる。自分が奏でるメロディに盛り上がってもらえる。 自分たちが1番楽しいから、周りに伝播する。そんな気がした。  羨ましいな。    Def TechのMy wayでテンション上がる！ ナオトのカーニバる？マワセマワセで、みんなでタオルを回した！  NICOの手をたたけで、手が痛くなるぐらい手を叩いた。 TRICERATOPSのトランスフォーマーを不安になりながら合唱した。   Mr.Childrenを生で感じることができた。 シーソーゲームを歌ってる最中に虹が出た。  このまま曲が終わらないで欲しい。何度もそう願った。  また会いにいこう  よく来たね いろいろあったんだろう？ 悲しいこと 嫌なこと 辛いこと  だけどまたこうしてまた会えたんだよ  笑顔をいっぱい作ろう     たくさんの笑顔をもらった。    また来年も会いにいきたい。  また来年も「よく来たね」って言われたい。  みんなありがとー！！また行こうっ！ 
---title: 初めての沖縄date: 2012-11-29category: ['Travel']tags: ["travel","沖縄", '旅行記']published: trueslug: okinawaimg: "https://farm9.staticflickr.com/8485/8229625968_cc14fd7b04.jpg"---初めての沖縄[![とかしきビーチ](https://farm9.staticflickr.com/8485/8229625968_cc14fd7b04.jpg)](http://www.flickr.com/photos/35571855@N06/8229625968/ "とかしきビーチ by meganii, on Flickr")インフルエンザに見舞われて行けなかった沖縄。台風直撃したため、泣く泣く一人キャンセルした沖縄。今回、三度目の正直。  flga Photo by meganii   R0020591 Photo by meganii   R0020780 Photo by meganii   R0020790 Photo by meganii   渡嘉敷島 Photo by meganii   とかしきビーチ Photo by meganii   夕日に咲く花 Photo by meganii 
---title: 冬を楽しむ！date: 2012-12-16category: ['Life']tags: ["snowborad"]published: trueslug: Snowboard---冬。ボードシーズンの始まり。今シーズン初滑りで12/15-16@栂池高原スキー場に行ってきました。シーズンイン前で、人も少なくて気持ち良く滑れた。リフト券も、4500円から2500円になっててお得！#### 今シーズンの目標	今シーズンの目標は、気持よくカービングターンすること！　　　つま先側のターンは、だいぶ気持ちよく雪を切る感覚があるんだけれど、かかと側のターンはまだまだズレている気がする。沈み込んでも、エッジを立てて、板がズレないようにしたい。もうひとつは、オーリーと180マスターしたいな。さて、今年は何回いけるか。
---title: ホワイトボードでやってみたいことdate: 2013-01-21category: ['Art']tags: ['ファシリテーション', '会議']published: trueslug: whiteboard---## アジェンダリストを右端に残しておく- 全員の相違を取ったアジェンダを右端に残しておき、終わったら横線を引いていく。ストレスフリーのホワイトボード術 | IDEA*IDEA進め方は以下のとおり。&gt; *ミーティングの最初に必ずやること。*  &gt; それはホワイトボードにアジェンダ（議題）を書き出すことです。具体的な進め方は次のとおり。  &gt;  &gt; 1. ホワイトボードの右端、横10cmに縦線をひく。  &gt; 2. 「今日のミーティング、何時まででしたっけ？」と確認し、終了時間を一番上に書く。  &gt; 3. 僕が考えるアジェンダは・・・といいつつ、そのエリアにアジェンダを羅列。  &gt; 4. 他にありますかね？と参加者の方を振り向いて発言を促す。誰かが発言すればそれを書く。  &gt; 5. 一通り出終わったところで発言していない人、一人一人に「○○さんはありますかね？」と聞く（つまり、全員に聞く）。  &gt; 6. 全員聞き終わったらしつこく「今日話すことはこれが全部でいいですかね？」と確認する。  &gt; 7. 確認したら「じゃ、どれから話しますかね？」と簡単に順番を決める。  &gt; 8. 会議をはじめる。終わったアジェンダには横線を引く。でもって、このアジェンダリストは会議中、決して消してはならない。  ## 空中戦を回避する- 議論のポイントを書き出して「地上戦」に持っていく&gt;　ホワイトボードに、うまく整理し、満足感のある結論に導き出すのはそれなりに高度な技術だと思います…が、最低限、議論のポイントを書き出すだけでも、共通基盤ができる→それをベースに議論する…と安定した「地上戦」に持って行けると思います。フワフワして何も決まらないっていう空中戦を回避する## ファシリテーターとしてTODOを誰かにアサインする## ちょっと欲しい- [セーラー万年筆 どこでもシート 600×800](http://www.amazon.co.jp/gp/product/B004BEJ9MG/ref=as_li_ss_tl?ie=UTF8&amp;camp=247&amp;creative=7399&amp;creativeASIN=B004BEJ9MG&amp;linkCode=as2&amp;tag=skyhigh0a-22)     ファシリテーターの道具箱[Kindle版] posted with ヨメレバ   森 時彦,ファシリテーターの道具研究会 ダイヤモンド社 2012-11-06       Kindle  Amazon[書籍版]                               	  	  	          
---title: 週次レビューの流れdate: 2013-01-27category: ['Life']tags: ["週次レビュー"]published: trueslug: weekly-review---週次レビューをする習慣がちょっとずつ定着してきたので、現状の週次レビューの流れをまとめてみる。#### 現状の週次レビューの流れほぼ日手帳、モレスキン、ロディアに書きなぐったメモを見ながら、下の内容を洗い出す。洗いだした内容は、Evernoteのノートブックにストックする。#### TODO週次レビューをしてる中で、ふと思いついたことをここに書きだす。すぐに処理したい気持ちを抑えながら、まず書き出す。* 今週しないといけないこと##### KPTKPTで一週間を振り返る。- 今週よかったことは？続けたいことは？ (Keep)- 改善すべきことは？ (Problem)- 改善するためにはどうしたらいい？何をすべき？ (Try)##### 質問に答えることで一週間の振り返り1. ここ一週間で、私が学んだことは何か？  2. 今週、自分がもっとも誇れることとは何か？  3. 今週、自分がやったことで一番楽しかったのは何か？  4. 来週、何をすればもっと楽しくなれるか？  5. 来週、（　　）の目標を達成するために何をすればいいのか？  6. 私は（　　）に苦労している。これをもっと簡単に行うために、何ができるだろう？  7. 直感が私にひとつアドバイスを与えようとしているとするなら、それは何だろう？  1週間を振り返るとき、1日をどのように過ごしたかという記録がないと振り返ることが難しい。たまに、ほぼ日が真っ白な日があったり・・・1日のログをとるために、次の点を意識しようと思う。  _1. ほぼ日手帳、ロディアにふと思ったこと、感じたことを書きなぐる（より意識する）_  _2. １日のログをとるために、日次レビュー用のテンプレートを作って日々入力する。_  2つめの１日をログを取るためには、Dueを使ってやってみたい。#### 参考- [“週記”のなかで問いかける七つの質問](http://listfreak.com/list/1853)- [シゴタノ！ 「日次レビュー」をきちんと回せば「週次レビュー」は「クリエイティブ・ワーク」に変わる](http://cyblog.jp/modules/weblogs/10346)
---title: はてなダイアリーからJekyllへお引越しdate: 2013-02-03T10:47:00+09:00category: ['Tech']tags: ['jekyll']published: trueslug: hatena2jekyll---### 前提- Octpressを利用してます#### 参考ページ- 俺の最強ブログ システムが火を噴くぜ - てっく煮ブログ  - はてなダイアリーのエントリをJekyllへ移行する  {{% googleadsense %}}### 1. てっく煮ブログをローカルで動作させるまずは、Jekyllの存在を知った　てっく煮ブログ　さんのブログがローカルで動かせるか試してみる。```git clone https://github.com/nitoyon/tech.nitoyon.com.gitcd tech.nitoyon.comjekyll --server --auto```hparserのライブラリがないと怒られたので、`gem install hparser`を試す```gem install haprserjekyll --server --auto````http://localhost:4000/ja/blog/`　から正常に動いていることを確認。### 2. はてなダイアリーのデータをMarkdownに変換- 管理ページ &gt; ブログのエクスポート &gt; はてなの日記データ形式からブログのエクスポートをする。- 取得したブログのデータを `tech.nitoyon.com/_scripts` にコピーする。- `_script/`フォルダの直下に `_posts` と `_caches` ディレクトリを作る- 以下のように `convert_hatena_to_jekyll_posts.rb`を実行して、はてなエントリからmarkdownに変換する```ruby convert_hatena_to_jekyll_posts.rb HATENA_ID はてなのエントリ.xml```上手く行けば、`_posts/` の中に変換された **.htn ファイルが格納される。### 3. 変換した*.htn をJekyllでサイト生成`jekyll`コマンドで変換した`*.htn`ファイルからサイトを生成する。- `tech.nitoyon.com/_plagins`から `tags/`、`converters/`のディレクトリを自分のJekyllサイトの`_plagins`にコピーしかし、amazonリンクが張ってあると、変換に失敗する。もし、amazonへのリンクがある場合は、Amazon APIのキーが必要になってくる。- ここらへんを参考に、Amazon APIを取得する。[Access Key IDとSecret Access Keyの取得 - Amazon Web サービス](http://www.ajaxtower.jp/ecs/pre/index1.html)- (エラーメッセージを頼りに)Amazonリンク生成のための準備(`gem install amazon-ecs`、 `_caches/amazon`の作成, _amazon.ymlの作成とか)### 4. 変換完了!!あとは、`jekyll --server --auto`  なり、`rake preview` (octpressの場合)なりで、確認すれば完了!!先人の人達のお陰で、変換できました。ありがとうございます。### 問題- タグの扱いをどうするか- シンタックスハイライトをどうするか
---title: 初めてのクライミングシューズdate: 2013-02-05T07:22:00+09:00category: ['Activity']tags: ['ボルダリング']published: trueslug: bouldering-shoes---初めてのクライミングシューズにモカシム買いました。やっと念願のクライミングシューズ買いました。またしばらく、ボルダリング熱が上がりそうです!!モカシムは、初心者にもおすすめということなので安心。もっとかっちりしたシューズは、もっと登るようになってそのとき欲しいと思った時に買おうと思う。{{% googleadsense %}}参考にしたページ- [クライミングシューズの選び方｜元なにわ娘のボルダリング日記](http://ameblo.jp/naniwamusume2/entry-11389259630.html)### ボルダリングジム#### GRAVITY RESEARCH KOBEGRAVITY RESEARCH KOBE トップページ | GRAVITY | 登山用品 アウトドア用品 好日山荘  ### 参考     モカシム レッド posted with カエレバ    キャラバン(Caravan)        Amazon  楽天市場     
---title: DevLOVE関西「勉強会勉強会」date: 2013-02-09T20:58:00+09:00category: ['Tech']tags: ['DevLOVE','勉強会']published: trueslug: devkan-study---2013/02/09(土)DevLOVE関西 「勉強会勉強会」に参加してきました!!DevLOVE関西「勉強会勉強会」 - DevLOVE関西  ## 勉強会勉強会 (@hyoshiok)- 古くて新しい- 共に学びたい- 人生を豊かで楽しいものにしたい勉強会からでも、人生を豊かに楽しいものにできる。{{% googleadsense %}}### よしおかの法則- 勉強会のメリット &gt; 開催のコスト- 勉強会のメリット &gt; 参加のコスト- 勉強会のメリット &gt; 発表のコスト勉強会のメリットを上げるか、開催、参加、発表のコストを下げる。**勉強会の価値を上げ、コストを下げるプラクティス**が、勉強会パターン。2人集まれば勉強会### SECIモデル暗黙知 -&gt; 形式知 -&gt; 暗黙知 ・・・という流れをグルグル回して、新しい価値を創造する。勉強会で、誰かの暗黙知が形式知として周りに広まる。形式知として、持ち帰った誰かが、またそこで暗黙知を貯めこみ、勉強会で形式化できるとよい。[SECIモデル － ＠IT情報マネジメント用語事典](http://www.atmarkit.co.jp/aig/04biz/seci.html)勉強会の目的に、幸せになりたい というのが印象的だった。## 勉強会を開催する大まかな流れ (@pwim)  **日本のRubyistと外国のRubyistを繋げたい!!**### 既存のコミュニティからイベントを始める既存の繋がりから人を呼び込むことができる### イベント詳細が決まる前に告知する周りのサポートを得ることができる。### イベントの形を決めるスピーカーを呼ぶイベントではない。コミュニケーションのため。目的がはっきりしていて、それに対するイベントの形があるという印象であった。## 社内勉強会のお話(@yohhatu)     DevLOVE関西「勉強会勉強会」  from Yoh Nakamura  ### 人の問題- 人が増えない- 継続的でない- 話す人がいない それらの問題に対して#### 人が増えない問題に対して・・・- 参加者へのお土産(参加して得ることができるもの)を明確にする- テストケース、コメントの書き方、コードレビューなど、汎用的な話をテーマにする。- 上記の ◯◯の話と見せかけて、△△の話をする- **２人でやれば勉強会**参加することで、何を持って帰ってもらいたいかを明確にすることで、参加する動機付けになる。１人でやるのは、単なる勉強だけど、**２人でやれば勉強会**になる。#### 継続的でない問題に対して・・・- 同じ構成で3回続けて行う同じリズムで行うことで、参加者の負担が減る。「人は自分が決めたことを自分で否定しづらい」という心理学的要素から、明確な理由なしでは参加しないという選択を取りづらくなる。これは、もし、理由なしで不参加の場合、以前の自分を否定することになるため。- ワクワクはいいけど、ドキドキは厳しいワクワクする感覚はあった方がいいけど、参加してドキドキするでは、続かない。なによりも安心して参加できる場所を作ることが大事#### 話す人がいない問題に対して・・・- 他の誰かが作った資料を使用するまず自分が、その資料を読み込んで理解することが大事。わからない部分については、作者の方に聞いてみる。-&gt; 大概、親切に教えてもらえるはず- 資料使って勉強を開いた後は、作者の方にフィードバックする使わせていただいたお返しに、その勉強会での出てきた疑問点などを作者の方にフィードバックする。お互いWin×Win。## 全体Q&amp;A#### 参加者の疑問#### Done!!## 感想**何かの話を聴きたいから、勉強会を開く**  自分も、この話が聴きたい、やってみたいと思う気持ちだけで、まずやってみたい。そう思った。  昔関わった方々、DevLOVEで関わった方々と、もう一度 「関西ライフハック研究会」に火を灯したいと 静かなる決意を胸にしました。誰か手伝っていただけないでしょうかー？ #devkan #kansaihacklab — めがにい (@meganii) February 9, 2013   去年一年は、自分の中で、普段の周りの人達との繋がりを広げようと思って動いた1年だった。関西圏、地元福井、関西・中部・関東の同期。今年一年はもう一段階輪を広げたい。コミュニティに繋がりを作って行きたい。クラスタを越えていきたい。 — めがにい (@meganii) February 9, 2013  
---title: ボルダリングの合間にスラックライン!! Slacklinedate: 2013-03-29T20:59:00+09:00category: ['Activity']tags: ['スラックライン','ボルダリング']published: trueslug: slacklineimg: "https://farm4.static.flickr.com/3410/5835456186_5a358ed4d2.jpg"--- Slackline 2 / helmsp 最近ボルダリングの合間に、ハマってます。ただ、立つだけ、ただ歩くだけで出来たときは楽しい!!## スラックラインって？綱渡りスポーツ、スラックライン(SlackLine)とは？ | スラックラインの歩き方  {{% googleadsense %}}## まず立つところからどうやらまずは、片足立ちが出来るようになるところからみたい。ただラインの上に立つだけなのに、むちゃくちゃ難しい!!そして、疲れる!!集中と脱力大事です。スラックラインの練習しよう（なかなか歩けない人） | スラックラインの歩き方 生まれたての子鹿状態をなんとかすれば立てる!!  ## 歩く片足立ちが出来るようになったら、スラックラインの歩き方とコツ（なかなか歩けない人向け） | スラックラインの歩き方 次に歩く  ## ジャンプ- 着地のときに軽くスノーボードみたいなスタンスになる。(足の向きがラインに対してやや垂直)スタンスについては、以下参照。スノーボードみたいに、レギュラー、グーフィーがあるみたい。スタンスの紹介～トリックを始める前に～ | スラックラインの歩き方  ## 参考- 初級ライントリック一覧　List of beginner line tricks | スラックラインの歩き方- 初級・中級エアートリック一覧　List of Air tricks | スラックラインの歩き方
---title: さくらVPSにJenkinsインストールdate: 2013-04-11T00:08:00+09:00category: ['Tech']tags: ['jenkins']published: trueslug: jenkins---Jenkinsで定期実行するJobを管理したほうが良い３つの理由｜Pimp my Code. @wataru420  定期実行させるJobを無理矢理作って、Jenkinsを触ってみる。- 今までCronで動かしていた天気Bot- Jekyll フォルダ監視(とかできたらしてみたい)とかちょっとやってみたいと思い、Jenkinsインストール。{{% googleadsense %}}### JDKインストールhttp://www.oracle.com/technetwork/java/javase/downloads/jdk7-downloads-1880260.htmljdk-7u17-linux-x64.rpm をダウンロード。がしかし、うまくダウンロード&amp;インストールできなかったので、yumでインストールするゆとり系男子。```yum list \*java-1\* | grep open``````yum install java-1.7.0-openjdk.x86_64 yum install java-1.7.0-openjdk-devel.x86_64 ```### jenkinsインストール```sudo wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.reposudo rpm --import http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.keyyum install jenkins```### Jenkinsが使うPortを開ける```vim /etc/sysconfig/iptables```Jenkinsのデフォルトで使用するポート(デフォルトは8080)を開けるため、以下の1行を追加する。(以下は、ポート 9999を使うとした場合)```-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport 9999  -j ACCEPT```iptablesを適用する```/etc/rc.d/init.d/iptables restart```Jenkins起動```service jenkins start```Jenkinsさんが登場。このままだと誰でもログイン出来てしまうので、セキュリティの設定をする。### セキュリティの設定さくらVPSでJenkinsをセットアップし、認証を行うまで | ひたすらメモするだけのブログ  上記のページを参考にさせてもらって、設定。```/etc/httpd/conf/httpd.conf```のバーチャルホストあたりを変更。ひとまずここまで、次はJobの作成と実行。### 参考- [JDK 7u7をCentOSにインストールする手順 - memo.yomukaku.net](http://memo.yomukaku.net/entries/UhgMUdw)- 6.2 scpコマンドを使ったファイルの転送- [Jenkins](http://itref.fc2web.com/technology/jenkins.html)
---title: 2013テニスブー春合宿〜念願のチャンピオンTシャツゲット〜date: 2013-04-21T22:00:00+09:00category: ['Activity']tags: published: trueslug: tennisboo-spring---念願のチャンピオンTシャツゲット！！  20130422224341 Photo by meganii {{% googleadsense %}}合宿の目標 「基本第一」ストローク　ボールを真っ直ぐ押し出すことボレー　軸足をセットする## これまで参加したテニスブー秋合宿2011に行ってきた！！ - じょーぶん思考  晴天のテニスブー春合宿2012！！ - じょーぶん思考  ## サークルページ大阪・社会人テニスサークル ～おおさかテニスブー（大阪テニスブー）～  
---title: Octopressに「続きを読む」のプラグイン導入date: 2013-04-24T20:16:00+09:00category: ['Tech']tags: ['jekyll']published: trueslug: readmore---↓こんな感じで「続きを読む」ように、記事を折りたたむプラグインを導入。{{% googleadsense %}}Octopressなら、/plagins ディレクトリに 以下の postmore.rbを設定する。```module PostMore	def postmorefilter(input, url, text)		if input.include? "{{% googleadsense %}}"			input.split("{{% googleadsense %}}").first + " #{text} "		else			input		end	endendLiquid::Template.register_filter(PostMore)```### 参考- [WordPressよりjekyllで本格的ブログを作りたくなる、かもしれないまとめ | ゆっくりと…](http://tokkono.cute.coocan.jp/blog/slow/index.php/programming/making-blog-with-jekyll/)- [Creating Excerpts in Jekyll with Wordpress-style &lt;!--more--&gt; HTML Comments - Jacques Fortier](http://www.jacquesf.com/2011/03/creating-excerpts-in-jekyll-with-wordpress-style-more-html-comments/)
---title: Sublime Text 2にパッケージコントロールを導入!!date: 2013-04-26T22:21:00+09:00category: ['Tech']tags: ['sublime text2']published: trueslug: sublime-text-2-pakage-control---GWということで、普段なかなかできない環境周りの整備がしたくなる時期です。今回は、やりたかったけど、なかなかできなかったSublime Text 2の環境を整えます。- Mac ターミナルから起動できるようにする- Sublime Text 2に Pakage Controlを導入- Markdown Previewを導入Installation – Sublime Package Control – a Sublime Text 2 Package Manager by wbond パッケージコントールを導入!!  {{% googleadsense %}}### ターミナルからSublime Text 2を起動できるようにするやっぱり、ターミナルから起動できないと不便ですよね。まずは、重たい腰を上げて、ターミナルから起動できるようにします。homeディレクトリに ```bin``` ディレクトリを作成```mkdir bin``````ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl	```.bash_profileに```export PATH=$PATH:~/bin/```を追加して、以下のコマンドを実行。```source .bash_profile```これで、ターミナルから``` subl hoge.text``` でSublime Text 2を開くことができる。### Sublime Text 2に Pakage Controlを導入Installation – Sublime Package Control – a Sublime Text 2 Package Manager by wbond パッケージコントールを導入!!  上記のサイトにアクセスして、以下のコマンドをコピー。```import urllib2,os; pf='Package Control.sublime-package'; ipp=sublime.installed_packages_path(); os.makedirs(ipp) if not os.path.exists(ipp) else None; urllib2.install_opener(urllib2.build_opener(urllib2.ProxyHandler())); open(os.path.join(ipp,pf),'wb').write(urllib2.urlopen('http://sublime.wbond.net/'+pf.replace(' ','%20')).read()); print('Please restart Sublime Text to finish installation')```Sublime Text 2上で Ctrl + ` でコマンドラインを出す。コマンドラインに先ほどのコマンドを貼り付けて実行する。これで、パッケージコントロールが使えるようになりました。	#### 参考　ドットインストール#12 パッケージを使ってみよう | Sublime Text 2入門 - プログラミングならドットインストール  ### Markdown Previewを導入```Shift + Cmd + P``` で出てきた入力窓に install と入力。Package Control : Install Package　を選択。markdown previewを選択 -&gt; インストール。これで、導入されました。パッケージの導入も簡単ですね。### 参考- [Markdown書く時はリアルタイムプレビュー出来る Sublime Text2 + Markdown Previewプラグインで決まり！ | clicktx::Tech::Memo](http://perl.no-tubo.net/2013/03/26/markdown%E6%9B%B8%E3%81%8F%E6%99%82%E3%81%AF%E3%83%AA%E3%82%A2%E3%83%AB%E3%82%BF%E3%82%A4%E3%83%A0%E3%83%97%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC%E5%87%BA%E6%9D%A5%E3%82%8B-sublime-text2-markdown-prev/)- [コードで一言: SublimeText2でMarkdownをプレビューするプラグイン](http://codedehitokoto.blogspot.jp/2012/04/sublimetext2markdown.html)- [Sublime Text 2を使ってMarkdownを編集したりプレビューしたりする | 世界 daipresents.com](http://daipresents.com/2013/sublime-text-2%E3%82%92%E4%BD%BF%E3%81%A3%E3%81%A6markdown%E3%82%92%E7%B7%A8%E9%9B%86%E3%81%97%E3%81%9F%E3%82%8A%E3%83%97%E3%83%AC%E3%83%93%E3%83%A5%E3%83%BC%E3%81%97%E3%81%9F%E3%82%8A%E3%81%99/)
---title: 晴れの屋久島。雨の屋久島。屋久島旅行記date: 2013-05-07T07:13:00+09:00category: ['Travel']tags: ['屋久島','travel', '旅行記']published: trueslug: yakushimaimg: "https://farm8.staticflickr.com/7320/8715988660_c5040b0f25_c.jpg"---2013/04/30〜05/03の3泊4日で屋久島行ってきました!!旅行は3度楽しい。1度目は、プラン。2度目は当日。3度目は振り返り。写真で振り返りながら、思い出に浸ります。{{% googleadsense %}}### 1日目 島一周初めてのLCC Peachで鹿児島へ。やっぱり狭かったけど、鹿児島までの時間だったら我慢できる。鹿児島から屋久島へは、高速船を使って移動。鹿児島空港から鹿児島港まで結構時間かかるので注意。トッピー海の上を飛んで走るってだけあって、全然揺れなくて快適だった。トッピーに乗ること２時間ぐらい。いよいよ屋久島上陸。レンタカーのお兄さんにレンタカーを借りて、島一周の旅へ。まずは、猿川ガジュマル園。雨の中のガジュマル園は、なかなかよかった。幾重にも重なりあった枝が根っこになって、幹になってるみたいに見えた。トトロでも出てきそうだった。おおこの滝。滝の前に並んだオレンジ傘が綺麗でした。海中温泉に行ってみたり。ほんとに、海のすぐ横に温泉があってビックリ!!地元の人って入ってるのかな？なんだかんだ１日回って、時間足りなかったですね。いつも旅行は、言った先でiPhone片手に頑張って行き先を決めるんですが、電波のなかなかない屋久島では、そのやり方は困難でした。なんだんだ、紙の媒体が必要ですよね。あと、行き先を決めておくこと。反省反省。### 2日目 縄文杉に会いに行く4時ぐらいに起床。5時に登山バス近くの駐車場に着いたのですが、ほぼ満車でしたね。。はやめはやめの行動大事。バスに揺られて、登山口に到着。ひたすらこのトロッコ道を歩いていきます。まだまだ歩きます。この横並びの木が曲者で、歩幅を一定に歩けない!!下を気にして歩かないと行けないので、なかなか思うようにペースを掴めなかった。数時間歩くと、木の板に変わるので一気にペースアップ!!途中、水の滴るコケとかが綺麗でした。がしかし、同じような風景が続くので、結構飽きますね。#### ウィルソン株やっとたどり着きました。そう、ウィルソン株。こんな感じの切り株でした。必死で、ハートに見えるポイントを見つけてパシャリ。なかなかキツい体勢にならないと撮れません。#### 縄文杉更に歩くこと歩くこと、ようやく出会えました縄文杉!!!でかい!!が、写真では伝わらない(；´Д｀)幹も大きいんですが、高さも高いんですが、写真では写せず・・・今では、直接近くまで行くことはできないんですね、残念。幹を触ってみたかったですが、しっかり目に焼き付けてきました。あのでっかいでっかい縄文杉も、こんな小さい芽の時期があったなんて信じられないですよね。帰りは、混雑してたポイントで写真撮影を繰り返しながら下山。9時間弱ぐらいかかりました。### 3日目 白谷雲水峡もののけの世界と言われる白谷雲水峡。雨がぱらついてたこともあり、うっすらと霧がかかった森の中は幻想的でした。雨の音、水の流れる音、鳥の鳴き声に癒されながら、どんどん変わっていく世界を歩くのは面白かった。このときの屋久島の天気は晴れ。太鼓岩までには、晴れ間が見れることを期待して歩いていたが、どんどん強くなる雨。太鼓岩に着いたときには、雲、霧、雨でなんにも見えませんでした・・・でも、でも、太鼓岩からの風景を見れずには帰れない!!ってことで、急遽、最終日も太鼓岩リベンジすることに。### 4日目 太鼓岩リベンジ10時45分のフェリーに乗るために、3時台に起床。空は晴れ。期待出来る。昨日見た美しい風景には目も触れず、一心不乱に太鼓岩を目指しました笑。夜が開ける前は、慎重に慎重に、夜が開け始めると、ただひたすらにノンストップで登り続けました。そのかいあってか、空からは日の光が!!岩を登り切った瞬間に広がる風景には、心踊りました。太鼓岩リベンジ成功。１時間近く頂上で、グダグダしてられたのも早起きのおかげ。雨の屋久島一周、晴れの縄文杉、雨の白谷雲水峡、晴れの太鼓岩。いろんな屋久島の顔を楽しめた屋久島旅行でした。次来るときには、モッチョム岳と宮之浦岳に登りたい!!!!
---title: さくらVPSにDropboxをインストールdate: 2013-05-08T21:06:00+09:00category: ['Tech']tags: ["dropbox","vps"]published: trueslug: dropbox_cui---ようやく重たい腰を上げて、さくらVPSにCUI版のDropboxをインストール。Python2.6が必要みたいです。以下のページを参考にさせてもらいました。cl.pocari.org - さくらの VPS (CentOS 6.2) にコマンドライン版 Dropbox をインストールする  {{% googleadsense %}}### Dropbox CLIをダウンロード```$ wget https://www.dropbox.com/download?dl=packages/dropbox.py```### インストール```$./dropbox.py start --installStarting Dropbox...Dropbox is the easiest way to share and store your files online. Want to learn more? Head to https://www.dropbox.com/In order to use Dropbox, you must download the proprietary daemon. [y/n] yDownloading Dropbox... 100%Unpacking Dropbox... 100%Dropbox isn't running!Done!```### Dropboxアカウントへのリンク```$ ./dropbox.py start```ここで表示されるリンクにアクセスして、Dropboxアカウントとの紐付けを行う。### 再起動```$ ./dropbox.py stop$ ./dropbox.py start```これで、 $HOME/Dropboxが同期されるように！意外と簡単！！### LAN Syncを止める```$ dropbox.py lansync n```17500/udp でのブロードキャストが行われて大変みたいです。CLI DropboxのLAN Syncを止める - じゃ、ま、いっか  ### Octpress用に、.dropboxを省く設定を追加source/_posts/を共有させるようにしたため、deployしようとすると怒られる。```$ bundle exec rake deploycp -r source/_posts/.dropbox public/_posts/.dropboxrake aborted!No such file or directory - public/_posts/.dropbox```.dropboxを無視するように、Rakefileを修正。excludeの中に、```**/.dropbox```を追加。```desc "copy dot files for deployment"task :copydot, :source, :dest do |t, args|  FileList["#{args.source}/**/.*"].exclude("**/.", "**/..", "**/.DS_Store", "**/._*", "**/.dropbox").each do |file|    cp_r file, file.gsub(/#{args.source}/, "#{args.dest}") unless File.directory?(file)  endend```### 参考- [cl.pocari.org - さくらの VPS (CentOS 6.2) にコマンドライン版 Dropbox をインストールする](http://cl.pocari.org/2012-04-05-1.html)- [さくらVPSサーバにDropboxをインストール | Everyday Deadlock](http://hayamiz.com/~haya/blog/?p=155)
---title: 屋久島に行くのにあってよかったもの、困ったことdate: 2013-05-15T00:01:00+09:00category: ['Travel']tags: ['屋久島']published: trueslug: yakushima-kpt---## Keep あってよかったもの### 雨が降った時の着替えレインウェアで動いた時に蒸れてベタベタになる### プラティパスが便利     Platypus(プラティパス) プラティパス 2  25601 posted with カエレバ    Platypus(プラティパス) 2011-03-08       Amazon  楽天市場     {{% googleadsense %}}     PRIMUS(プリムス) ウルトラバーナー  P153 【日本正規品】 posted with カエレバ    PRIMUS(プリムス) 2011-11-16       Amazon  楽天市場     - サンダルは便利- レンタカーでの移動は便利### Problem　困ったこと- ガスボンベは機内に持ち込めない そりゃそうだ- ヘッドライトなしで暗い登山道は怖い- ゴアテックスじゃない登山靴だと雨の場合心配だった- 手袋なしはキケン。軍手があれば- 水、コーヒーを飲むコップが必要- 圏外が多かったので、移動中に調べるということが困難- 事前にコースを把握してなさ過ぎた### Try 次回やりたいこと- ボンベは現地調達- 事前にコースの確認をする- 宮之浦岳、モッチョム岳にいきたい
---title: sqlite3-rubyを使ってSQLite3ファイルからの検索結果をHashとして読み込むdate: 2013-05-18T12:06:00+09:00category: ['Tech']tags: ['ruby','sqlite3']published: trueslug: sqlite3-ruby---sqlite3-rubyを使って、SQLite3にアクセスしてデータの取得、加工がしたい。db.executeした際に配列が帰ってきた。カラム名でアクセス出来る方法がないか探したところ、results_as_hash = trueにすれば、Hashで返ってくることがわかった。{{% googleadsense %}}[SQLite3/Ruby FAQ](http://sqlite-ruby.rubyforge.org/sqlite3/faq.html)##I’d like the rows to be indexible by column name.&gt;By default, each row from a query is returned as an Array of values. This means that you can only obtain values by their index. Sometimes, however, you would like to obtain values by their column name.&gt;The first way to do this is to set the Database property “results_as_hash” to true. If you do this, then all rows will be returned as Hash objects, with the column names as the keys. (In this case, the “fields” property is unavailable on the row, although the “types” property remains.)デフォルトだと配列で返ってくるので、results_as_hashをtrueにすれば、ハッシュとして返却され、カラム名でアクセスできる。```  db.results_as_hash = true  db.execute( "select * from table" ) do |row|    p row['column1']    p row['column2']  end```&gt;The other way is to use Ara Howard’s ArrayFields module. Just require “arrayfields”, and all of your rows will be indexable by column name, even though they are still arrays!```  require 'arrayfields'  ...  db.execute( "select * from table" ) do |row|    p row[0] == row['column1']    p row[1] == row['column2']  end```## sqlite3ファイルから読み込み```require 'rubygems'require 'sqlite3'db = SQLite3::Database.new("development.sqlite3")db.results_as_hash = truesql = "select * from entries"db.execute(sql) do |row|	p rowend```## 参考- [ruby - Add a new line in file? - Stack Overflow](http://stackoverflow.com/questions/3518329/add-a-new-line-in-file)
---title: "大塔コスミックパーク「星のくに」でドーム付バンガローに泊まって天体観測！"date: 2013-05-19T21:14:00+09:00category: ['Travel']tags: ["star"]published: trueslug: star-watching---2013/05/18-19、同期と星を見に奈良県にある「星のくに」に行ってきました!!  sky_watch Photo by meganii {{% googleadsense %}}13:30なんば発から車に乗って移動ー。16:00前に「星のくに」に到着。コテージ上部についているドームの中に天体望遠鏡がついています。  バンガロー Photo by meganii 「ベガ」	ミカゲ25cm　反射望遠鏡	ミカゲ光器260	鏡直径250mm 焦点距離1500mm  天体望遠鏡 Photo by meganii まずは、このバズーカみたいな天体望遠鏡をを使う練習。2軸で360度に対応してるんだけど、調整がムズカシイ。大きい筒の周りにある、小さな望遠鏡を覗きながら、照準を合わせる。目標は、向こうの山に見える電波塔。四苦八苦しながら、なんとか電波塔を捉えることができた。  鏡 Photo by meganii ## 土星観測会ちょうど土星観測会があったので、みんなで参加。しかし、あいにくの曇り空で、月以外なんにもみえず・・・・月は雲に隠れながらも見えていたので、月の観測会に。  クレーター Photo by meganii 実際、天体望遠鏡を自分の手で触りながら覗くのって初めてのことで、子供の頃に戻ったように、ワクワクしました。	雲に隠れながらも、雲の切れ目きれめで見える月は綺麗でした!!!クレーターまでくっきりと見える。月ではしゃいでる間に、だんだんと南の空が晴れてくるじゃないですか!!!施設の方が、スピカの説明をしながら、土星に天体望遠鏡を向ける。  天体望遠鏡 Photo by meganii 「キレー!かわいい」という声を聞きつつ、順番待ちをするのはちとつらい。いつ雲で隠れるか分からずハラハラどきどき。そんな中でやっと土星見れました!!!  土星 Photo by meganii 写真だと、ピントが合ってませんが、実際に、天体望遠鏡を覗いてみたときは、もっとくっきり見えて、かわいいリングを見ることができました。## 天然プラネタリウムビニールシートを広場に広げて寝っ転がりながら、ぼーっと夜空の星を眺めるのもよかった。「てんぷら」っていうそうですね。がしかし、さすがに寒い。防寒が必須ですね。## 帰りは昆虫館で蝶の撮影会  金魚 Photo by meganii   水滴 Photo by meganii ## 反省### どれがどの星か分からなない次回来るときには、予めどんな星が出るのか予習してから行かなくては。### インターバル撮影上手く行かず・・・練習しないとダメだね^^;次回は、夏か？！## 参考ドーム付きバンガロー - 財団法人大塔ふる里センター公式サイト       大塔コスミックパーク星のくに posted with トマレバ   奈良県五條市大塔町阪本249[地図]   楽天トラベル  じゃらん 	   JTB  一休             	    
---title: Sublime Text 2にLiveReloadを導入してMarkdown Previewを快適に!!date: 2013-05-20T22:05:00+09:00category: ['Tech']tags: ['jekyll','Sublime Text']published: trueslug: livereloaded---Jekyllを使うからには、Markdownをプレビュー出来るエディタが欲しくなる。Markdownをプレビュー出来るエディタと言えば、[Kobito - プログラミングのメモやスニペットの記録に最適なMacアプリケーション](http://kobito.qiita.com/)が思い浮かぶ。リアルタイムプレビューの名にふさわしく、かなり快適。Kobito - プログラミングのメモやスニペットの記録に最適なMacアプリケーション  しばらくは、Kobitoでいいかと思っていたが、ターミナルから起動できても、ファイルの読み込みがどうも出来ない。どうせならターミナルからコマンドを叩いて、Markdownのひな形をシームレスに編集したい。探していたところ、Sublime Text 2のプラグインに、LiveReloadというものがあるみたいなので、試してみる。{{% googleadsense %}}### 前提1. Sublime Text 2に Package Controlを導入済み2. Package ControlからMarkdown Previewをインストール済み[Sublime Text 2にパッケージコントロールを導入!! - じょーぶん思考](http://meganii.com/blog/2013/04/26/sublime-text-2-pakage-control/)## LiveReloadのインストール- Package Control: Install PackageからLiveReloadをインストールLiveReload[dz0ny/LiveReload-sublimetext2 · GitHub](https://github.com/dz0ny/LiveReload-sublimetext2/)## Markdown Previewの設定### CSSを読みこませるにはPackage Settings &gt; Markdown Previewの設定ファイル中にある `css:`に自分のcssファイルを配置する。### Jekyllの記事の始まりの`---`と`---`で囲まれた部分のTitleだけを抜き出してうまく表示させるには`strip_yaml_front_matter`をtrueにする。``` - "strip_yaml_front_matter": false+ "strip_yaml_front_matter": true```## 感想リアルタイムプレビューとまではいかないが、だいぶ快適になった。しばらく、この運用でいってみようと思う。
---title: Jekyllのお勉強 -YAML部分と記事本文を分離する正規表現-date: 2013-05-23T07:19:00+09:00category: ['Tech']tags: ['jekyll','正規表現']published: trueslug: regexp-jekyll---JekyllのYAML部分と記事本文を分離していると思われる正規表現を確認する。正規表現	```/\A(---\s*\n.*?\n?)^(---\s*$\n?)/m```こんな感じらしい{{% googleadsense %}}```ruby# Read the YAML frontmatter.## base - The String path to the dir containing the file.# name - The String filename of the file.## Returns nothing.def read_yaml(base, name)  begin    self.content = File.read(File.join(base, name))    if self.content =~ /\A(---\s*\n.*?\n?)^(---\s*$\n?)/m      self.content = $POSTMATCH      self.data = YAML.safe_load($1)    end  rescue SyntaxError =&gt; e    puts "YAML Exception reading #{File.join(base, name)}: #{e.message}"  rescue Exception =&gt; e    puts "Error reading file #{File.join(base, name)}: #{e.message}"  end  self.data ||= {}end```## 参考 正規表現        正規表現クックブック posted with カエレバ   Jan Goyvaerts,Steven Levithan オライリージャパン 2010-04-15       Amazon  楽天市場     
---title: abコマンド実行時のエラーを回避するdate: 2013-05-27T19:29:00+09:00category: ['Tech']tags: ['unix']published: trueslug: benchmark-apache---```ab -c 10 -n 100 http://hostname.com/```ベンチマークを取ろうと、上記のようなabコマンドを実行すると、毎回怒られる。以下、エラー内容。```This is ApacheBench, Version 2.3 &lt;$Revision: 655654 $&gt;Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/Licensed to The Apache Software Foundation, http://www.apache.org/Benchmarking havelog.ayumusato.com (be patient)...Send request failed!apr_socket_recv: Connection reset by peer (54)Total of 1 requests completed```{{% googleadsense %}}調べてみると、Versionの問題みたい。- [osx lion - Apache Bench test error on OS X: "apr_socket_recv: Connection reset by peer (54)" - Super User](http://superuser.com/questions/323840/apache-bench-test-erroron-os-x-apr-socket-recv-connection-reset-by-peer-54)- [Mac OS X Lionでabを実行する際にエラー：Connection reset by peerが発生する際の対処方法 | Web活メモ帳](http://blog.verygoodtown.com/2012/05/apache-bench-test-erroron-os-x-apr-socket-recv-connection-reset-by-peer-54/)- [nginxにLion付属のab（ApacheBench）を実行したら失敗するときの解決ログ ::ハブろぐ](http://havelog.ayumusato.com/develop/others/e477-lion_bundled_ab_nginx.html)[http://apache.mirrors.pair.com/httpd/](http://apache.mirrors.pair.com/httpd/)から最新版の httpdをダウンロード。上記のページを参考にしながら、最新版にアップロードする。```wget http://apache.mirrors.pair.com/httpd/httpd-2.4.4.tar.bz2brew install pcretar xzvf httpd-2.4.4.tar.bz2cd httpd-2.4.4./configuremake``````$ ab -c 10 -n 100 http://hostname.com/This is ApacheBench, Version 2.3 &lt;$Revision: 1430300 $&gt;Copyright 1996 Adam Twiss, Zeus Technology Ltd, http://www.zeustech.net/Licensed to The Apache Software Foundation, http://www.apache.org/Benchmarking meganii.com (be patient).....doneServer Software:        ApacheServer Hostname:        meganii.comServer Port:            80Document Path:          /Document Length:        18215 bytesConcurrency Level:      10Time taken for tests:   3.071 secondsComplete requests:      100Failed requests:        0Write errors:           0Total transferred:      1847200 bytesHTML transferred:       1821500 bytesRequests per second:    32.56 [#/sec] (mean)Time per request:       307.123 [ms] (mean)Time per request:       30.712 [ms] (mean, across all concurrent requests)Transfer rate:          587.36 [Kbytes/sec] receivedConnection Times (ms)              min  mean[+/-sd] median   maxConnect:       55   75  15.6     70     118Processing:   137  220 148.2    179    1438Waiting:       62  107  45.8     97     338Total:        206  295 157.9    249    1556Percentage of the requests served within a certain time (ms)  50%    249  66%    270  75%    278  80%    293  90%    534  95%    574  98%    598  99%   1556 100%   1556 (longest request)```出来た！読み方を押さえておこう。## 参考Apache Benchを使った負荷テストのやり方 | Web活メモ帳  
---title: sublime-vimdate: 2013-05-28T21:02:00+09:00category: ['Tech']tags: published: trueslug: sublime-vim---そろそろ重たい腰を上げて、vi系のコマンドを覚えたいなと思い始めたので、Sublime Text 2をVimっぽく操作するようにカスタマイズしてみようと思う。     vi/Vim コマンドポケットリファレンス posted with カエレバ   山森 丈範 技術評論社 2010-10-22       Amazon  楽天市場     参考にさせてもらいながら、設定変更。[Vimと僕とSublime - fukayatsu.dev](http://blog.fukayatsu.com/2013/01/02/vim-advent-calendar/){{% googleadsense %}}メニューからPreferences &gt; Settings-User(⌘,)を選択して、以下の様に追加します(Mac向け)。``` "ignored_packages": [""], "vintage_ctrl_keys": true, "vintage_start_in_command_mode": true```[Vintage Mode - Sublime Text 2 Documentation](http://www.sublimetext.com/docs/2/vintage.html)Package Control を導入して、VintageExを導入。 
---title: vagrantdate: 2013-05-28T07:13:00+09:00category: ['Tech']tags: ['vagrant']published: trueslug: vagrant---{{% googleadsense %}}## 1.VirtualBoxのダウンロードhttps://www.virtualbox.org/wiki/Downloads## 2.Vagrantのダウンロードgem install vagrantvagrant box add centos64_64 http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-x86_64-v20130309.box
---title: carrierwavedate: 2013-05-29T07:09:00+09:00category: ['Tech']tags: ['ruby']published: trueslug: carrierwave---{{% googleadsense %}}[Rails3でajaxでD&amp;Dでまとめてファイルアップロード2～jQueryFileUpload for Rails | Scimpr Blog](http://blog.scimpr.com/2012/10/11/rails3%e3%81%a7ajax%e3%81%a7dd%e3%81%a7%e3%81%be%e3%81%a8%e3%82%81%e3%81%a6%e3%83%95%e3%82%a1%e3%82%a4%e3%83%ab%e3%82%a2%e3%83%83%e3%83%97%e3%83%ad%e3%83%bc%e3%83%892%ef%bd%9ejqueryfileupload-for-rai/)
---title: GIBBON RIDERの凄さdate: 2013-06-10T22:17:00+09:00category: ['Activity']tags: ['slackline']published: trueslug: slackline-tennoji---飛ぶ、跳ねる、回る。スラックライン。2013/06/09(土)に天王寺キューズモールで開催されたGIBBON CUPを観てきました！大会 | GIBBON SLACKLINES JAPAN 公式サイト ギボン スラックライン ジャパン  {{% googleadsense %}}最近、ボルダリングで腕が疲れたときに、スラックラインにハマってます。ボルダリングの合間にスラックライン!! Slackline - じょーぶん男子  そんなスラックラインの大会が、天王寺であるというので観てきました。## キレイな姿勢ブットバウンス、チェストバウンスで、跳ねる前の動作と、空中で軸がブレないのを観てて惚れ惚れ。軸がブレないので、みてて安心、動作の一つ一つが綺麗に見える。あんなに細いスラックライン上で、あんなに、自由に飛び跳ねれたらきっと楽しいんだろうな。GINBON RIDERの凄さを目の当たりにした日でした。## スラックラインが出来るところ### グラビィティリサーチなんば基本は、ボルダリング、リードクライミングをするジム。一本だけ、ラインが張ってあります。最近、ちゃんとしたマットが敷かれてるので、いい感じかも。GRAVITY RESEARCH なんば トップページ | GRAVITY | 登山用品 アウトドア用品 好日山荘  ### スラックラインパーク クロニック神戸こちらは、スラックライン専門のジム。スラックライン専門ってだけあって、種類の違うラインが4、5本張ってあります。Practice at the Slackline Park CHRONIC Kobe | Slackline Vids       GIBBON(ギボン) Slackline Jibline15m 【日本正規品】 posted with カエレバ    GIBBON(ギボン)        Amazon  楽天市場     
---title: 念願のAir!! MacBookAir Mid 2013買いましたdate: 2013-06-18T06:32:00+09:00category: ['Tech']tags: ['Mac']published: trueslug: macbookair---念願のMacBookAirをついに手に入れました！！  発売日の翌日に、ネット上のMac情報をみていたら、いつのまにかぽちってました。後悔はしない。ずっと待ち続けていたのだから。	{{% googleadsense %}}### 構成- CPU 1.7GHzデュアルコアIntel Core i7（Turbo Boost使用時最大3.3GHz）- メモリ 8GB- SSD 256GBなんとなくJISキーボードが飽きたので、USキーボードに変更。- [Lion 搭載の新型 MacBook Air を買う前に検討しておきたい US 配列キーボード - 彼女からは、おいちゃんと呼ばれています](http://d.hatena.ne.jp/inouetakuya/20110726/1311640787)- [JISとUSキーボードの違いと、乗り換える際に最低限やっておくべき2つの設定](http://ushigyu.net/2012/06/27/difference_between_jis_and_us_keyboard/)SSD使うの初めてで、なんだかすべてが早くなった気がする笑。(実際、再起動の速さは凄まじい)## 衝動買いの理由- MacBookProを買って、4,5年経った- MacBookProは持ち運ぶのにちょっと重い- MacBookProをLIONにしてからもたつくことが増えた。- バッテリーの持ちが悪くなってきた	- Air欲しい。欲しい。欲しい！！！そこに、バッテリー駆動時間が大幅に伸びたというMacBookAirが出たのでぽちっと買ってしまいました。&gt; 今回のバージョンにはretinaディスプレイが搭載されなかったから、マイナーなバージョンアップととらえる人もいる。でも大きな改良点があるバージョンアップには不具合がある可能性がある。今回のようなマイナーな改良時こそ、製品が完璧ともいえる領域に達するときであり、買い時なのだと思う。&gt; [そしてMacBook Airは僕にとっての神マシンとなった【湯川鶴章】 | TechWave](http://techwave.jp/archives/%e3%81%9d%e3%81%97%e3%81%a6macbook-air%e3%81%af%e5%83%95%e3%81%ab%e3%81%a8%e3%81%a3%e3%81%a6%e3%81%ae%e7%a5%9e%e3%83%9e%e3%82%b7%e3%83%b3%e3%81%a8%e3%81%aa%e3%81%a3%e3%81%9f%e3%80%90%e6%b9%af%e5%b7%9d.html)欲しいと思った時が買い時ですよね。後悔はしてないよ。さて環境設定、環境設定♪     APPLE MacBook Air 1.8GHz Core i5/13.3/4GB/128GB MD231J/A posted with カエレバ    アップル 2012-06-13          
---title: MacBookAir Mid 2013環境構築date: 2013-06-20T00:58:00+09:00category: ['Tech']tags: ['Mac']published: trueslug: macbookair-dev---MabBookAirの環境設定。とりあえず、Homebrewとrbenvを入れたときの備忘録。{{% googleadsense %}}## XcodeのインストールApp StoreからXcodeをインストール。## Homebrewのインストール```$ ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"==&gt; This script will install:/usr/local/bin/brew/usr/local/Library/.../usr/local/share/man/man1/brew.1Press ENTER to continue or any other key to abort==&gt; /usr/bin/sudo /bin/mkdir /usr/localWARNING: Improper use of the sudo command could lead to data lossor the deletion of important system files. Please double-check yourtyping when using sudo. Type "man sudo" for more information.To proceed, enter your password, or type Ctrl-C to abort.Password:==&gt; /usr/bin/sudo /bin/chmod g+rwx /usr/local==&gt; /usr/bin/sudo /usr/bin/chgrp admin /usr/local==&gt; Downloading and Installing Homebrew...remote: Counting objects: 116619, done.remote: Compressing objects: 100% (55278/55278), done.remote: Total 116619 (delta 80742), reused 93671 (delta 60389)Receiving objects: 100% (116619/116619), 18.77 MiB | 95 KiB/s, done.Resolving deltas: 100% (80742/80742), done.From https://github.com/mxcl/homebrew * [new branch]      master     -&gt; origin/masterHEAD is now at 6ffa175 ccache: added symlinks for more compiler versionsWarning: Install the "Command Line Tools for Xcode": http://connect.apple.com==&gt; Installation successful!You should run `brew doctor' *before* you install anything.Now type: brew help```ここで、ちゃんとHomebrewがインストールされているか確認するために、以下のコマンドを叩く。```$ brew doctorWarning: Experimental support for using Xcode without the "Command Line Tools".You have only installed Xcode. If stuff is not building, try installing the"Command Line Tools for Xcode" package provided by Apple.```すると、Xcodeはインストールしたけど、　Command Line Tools for Xcodeがないと怒られた。Xcodeを開いて、Xcode &gt; Preferences &gt; Downloads のところに、　Command Line Tools という項目があるので、インストール。  CommandLineToolsXcode Photo by meganii 再び、　brew doctor```$ brew doctorYour system is ready to brew.```正常にインストールされているようです。次に Homebrewを使って環境を整える。## gitのインストール```brew install git==&gt; Downloading http://git-core.googlecode.com/files/git-1.8.3.1.tar.gz######################################################################## 100.0%==&gt; make prefix=/usr/local/Cellar/git/1.8.3.1 CC=cc CFLAGS= LDFLAGS= install==&gt; make CC=cc CFLAGS= LDFLAGS===&gt; make clean==&gt; make CC=cc CFLAGS= LDFLAGS===&gt; Downloading http://git-core.googlecode.com/files/git-manpages-1.8.3.1.tar.gz######################################################################## 100.0%==&gt; Downloading http://git-core.googlecode.com/files/git-htmldocs-1.8.3.1.tar.gz######################################################################## 100.0%==&gt; CaveatsThe OS X keychain credential helper has been installed to:  /usr/local/bin/git-credential-osxkeychainThe 'contrib' directory has been installed to:  /usr/local/share/git-core/contribBash completion has been installed to:  /usr/local/etc/bash_completion.dzsh completion has been installed to:  /usr/local/share/zsh/site-functions==&gt; Summary🍺  /usr/local/Cellar/git/1.8.3.1: 1324 files, 28M, built in 60 seconds```## RVMからrbenvへ変更RVMは、環境を勝手に書き換えることがあるそうなので、rbenvの方がいいという記事も見かけた。ということで今回は、気持ちの問題で、RVMからrbenvへ乗り換えました(あまり使いこなしていないので、どっちでもいいのだが)。### Ruby-buildのインストール```$ brew install ruby-build==&gt; Installing ruby-build dependency: autoconf==&gt; Downloading http://ftpmirror.gnu.org/autoconf/autoconf-2.69.tar.gz######################################################################## 100.0%==&gt; ./configure --prefix=/usr/local/Cellar/autoconf/2.69==&gt; make install🍺  /usr/local/Cellar/autoconf/2.69: 69 files, 2.0M, built in 16 seconds==&gt; Installing ruby-build dependency: pkg-config==&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/pkg-config-0.28.mountain_lion.bottle.tar.gz######################################################################## 100.0%==&gt; Pouring pkg-config-0.28.mountain_lion.bottle.tar.gz🍺  /usr/local/Cellar/pkg-config/0.28: 10 files, 636K==&gt; Installing ruby-build==&gt; Downloading https://github.com/sstephenson/ruby-build/archive/v20130518.tar.gz######################################################################## 100.0%==&gt; ./install.sh🍺  /usr/local/Cellar/ruby-build/20130518: 79 files, 352K, built in 4 seconds```### rbenvのインストール```$ brew install rbenv==&gt; Downloading https://github.com/sstephenson/rbenv/archive/v0.4.0.tar.gz######################################################################## 100.0%==&gt; CaveatsTo use Homebrew's directories rather than ~/.rbenv add to your profile:  export RBENV_ROOT=/usr/local/var/rbenvTo enable shims and autocompletion add to your profile:  if which rbenv &gt; /dev/null; then eval "$(rbenv init -)"; fi==&gt; Summary🍺  /usr/local/Cellar/rbenv/0.4.0: 31 files, 152K, built in 3 seconds```### bash_profileにパスを追加.bash_profileを作成して、以下の2行を追加。```export PATH="$HOME/.rbenv/bin:$PATH"eval "$(rbenv init -)"```### ruby 1.9.3をインストール```$ rbenv install 1.9.3-p286Downloading yaml-0.1.4.tar.gz...-&gt; http://dqw8nmjcqpjn7.cloudfront.net/36c852831d02cf90508c29852361d01bInstalling yaml-0.1.4...Installed yaml-0.1.4 to /Users/meganii/.rbenv/versions/1.9.3-p286Downloading ruby-1.9.3-p286.tar.gz...-&gt; http://dqw8nmjcqpjn7.cloudfront.net/e2469b55c2a3d0d643097d47fe4984bbInstalling ruby-1.9.3-p286...Installed ruby-1.9.3-p286 to /Users/meganii/.rbenv/versions/1.9.3-p286```### OpenSSLをインストール後々に、このモジュールが必要になる場合があるというので、今のうちにインストール。```$ brew install openssl==&gt; Downloading http://openssl.org/source/openssl-1.0.1e.tar.gz######################################################################## 100.0%==&gt; perl ./Configure --prefix=/usr/local/Cellar/openssl/1.0.1e --openssldir=/usr/local/etc/openssl zlib-dynamic shared darwin64-==&gt; make==&gt; make test==&gt; make install MANDIR=/usr/local/Cellar/openssl/1.0.1e/share/man MANSUFFIX=ssl==&gt; CaveatsTo install updated CA certs from Mozilla.org:    brew install curl-ca-bundleThis formula is keg-only: so it was not symlinked into /usr/local.Mac OS X already provides this software and installing another version inparallel can cause all kinds of trouble.The OpenSSL provided by OS X is too old for some software.Generally there are no consequences of this for you. If you build yourown software and it requires this formula, you'll need to add to yourbuild variables:    LDFLAGS:  -L/usr/local/opt/openssl/lib    CPPFLAGS: -I/usr/local/opt/openssl/include==&gt; Summary🍺  /usr/local/Cellar/openssl/1.0.1e: 429 files, 15M, built in 4.6 minutes```### readlineをインストールreadlineもいるんじゃない？っていう記事を見かけたのでついでに入れておく。```brew install readline==&gt; Downloading http://ftpmirror.gnu.org/readline/readline-6.2.tar.gz######################################################################## 100.0%==&gt; Patchingpatching file callback.cpatching file input.cpatching file patchlevelpatching file support/shobj-confpatching file vi_mode.c==&gt; ./configure --prefix=/usr/local/Cellar/readline/6.2.4 --mandir=/usr/local/Cellar/readline/6.2.4/share/man --infodir=/usr/loc==&gt; make install==&gt; CaveatsThis formula is keg-only: so it was not symlinked into /usr/local.OS X provides the BSD libedit library, which shadows libreadline.In order to prevent conflicts when programs look for libreadline we aredefaulting this GNU Readline installation to keg-only.Generally there are no consequences of this for you. If you build yourown software and it requires this formula, you'll need to add to yourbuild variables:    LDFLAGS:  -L/usr/local/opt/readline/lib    CPPFLAGS: -I/usr/local/opt/readline/include==&gt; Summary🍺  /usr/local/Cellar/readline/6.2.4: 31 files, 1.6M, built in 35 seconds```### デフォルトで使うRubyのバージョンを指定```$ rbenv global 1.9.3-p426``````$ which gem/Users/meganii/.rbenv/shims/gem```gemのPATHもちゃんと変わりました。## Jekyllの設定```$ gem install bundler```## Jekyllの設定```$ gem install jekyllFetching: liquid-2.5.0.gem (100%)Fetching: fast-stemmer-1.0.2.gem (100%)Building native extensions.  This coeuld take a while...Fetching: classifier-1.3.3.gem (100%)Fetching: directory_watcher-1.4.1.gem (100%)Fetching: syntax-1.0.0.gem (100%)Fetching: maruku-0.6.1.gem (100%)Fetching: kramdown-1.0.2.gem (100%)Fetching: yajl-ruby-1.1.0.gem (100%)Building native extensions.  This could take a while...Fetching: posix-spawn-0.3.6.gem (100%)Building native extensions.  This could take a while...Fetching: pygments.rb-0.5.0.gem (100%)Fetching: highline-1.6.19.gem (100%)Fetching: commander-4.1.3.gem (100%)Fetching: safe_yaml-0.7.1.gem (100%)Fetching: colorator-0.1.gem (100%)Fetching: jekyll-1.0.3.gem (100%)Successfully installed liquid-2.5.0Successfully installed fast-stemmer-1.0.2Successfully installed classifier-1.3.3Successfully installed directory_watcher-1.4.1Successfully installed syntax-1.0.0Successfully installed maruku-0.6.1Successfully installed kramdown-1.0.2Successfully installed yajl-ruby-1.1.0Successfully installed posix-spawn-0.3.6Successfully installed pygments.rb-0.5.0Successfully installed highline-1.6.19Successfully installed commander-4.1.3Successfully installed safe_yaml-0.7.1Successfully installed colorator-0.1Successfully installed jekyll-1.0.315 gems installedInstalling ri documentation for liquid-2.5.0...Installing ri documentation for fast-stemmer-1.0.2...Installing ri documentation for classifier-1.3.3...Installing ri documentation for directory_watcher-1.4.1...Installing ri documentation for syntax-1.0.0...Installing ri documentation for maruku-0.6.1...Couldn't find file to include 'MaRuKu.txt' from lib/maruku.rbInstalling ri documentation for kramdown-1.0.2...Installing ri documentation for yajl-ruby-1.1.0...Installing ri documentation for posix-spawn-0.3.6...Installing ri documentation for pygments.rb-0.5.0...Installing ri documentation for highline-1.6.19...Installing ri documentation for commander-4.1.3...Installing ri documentation for safe_yaml-0.7.1...Installing ri documentation for colorator-0.1...Installing ri documentation for jekyll-1.0.3...Installing RDoc documentation for liquid-2.5.0...Installing RDoc documentation for fast-stemmer-1.0.2...Installing RDoc documentation for classifier-1.3.3...Installing RDoc documentation for directory_watcher-1.4.1...Installing RDoc documentation for syntax-1.0.0...Installing RDoc documentation for maruku-0.6.1...Couldn't find file to include 'MaRuKu.txt' from lib/maruku.rbInstalling RDoc documentation for kramdown-1.0.2...Installing RDoc documentation for yajl-ruby-1.1.0...Installing RDoc documentation for posix-spawn-0.3.6...Installing RDoc documentation for pygments.rb-0.5.0...Installing RDoc documentation for highline-1.6.19...Installing RDoc documentation for commander-4.1.3...Installing RDoc documentation for safe_yaml-0.7.1...Installing RDoc documentation for colorator-0.1...Installing RDoc documentation for jekyll-1.0.3...```
---title: 2台目のMacBookAirからさくらVPSへSSH接続を行うための鍵の設定date: 2013-06-21T21:16:00+09:00category: ['Tech']tags: ['さくらvps']published: trueslug: ssh-sakuravps---新しくMacBookAirを買ったので、さくらVPSへSSH接続を行うための鍵の設定。念願のAir!! MacBookAir Mid 2013買いました - じょーぶん男子  {{% googleadsense %}}```suvim /etc/ssh/sshd_config```パスワードによるログインを許可する```PasswordAuthentication yes```設定を変えたら、sshdを再起動。```service sshd restart```鍵を作る```ssh-keygen```id_rsa.pubという公開鍵が作られる。（ここでは、id_rsa_sakura.pubに変更）```cp id_rsa.pub id_rsa_sakura.pub```さくらVPS(CentOS)に配置。```scp -P port ~/.ssh/id_rsa.pub user@example.com:~/.ssh/id_rsa_sakura.pub ```さくらVPS側で スーパーユーザになって、authorized_keysに、作った公開鍵を入れておけばよいみたい。cat id_rsa_sakura.pub &gt;&gt; authorized_keysパスワードによるログインを無効に戻す```PasswordAuthentication yes```これで2台目のMacBookAirからSSH接続できるようになりました。## 参考- [CentOS で公開鍵暗号方式を使用した SSH ログイン設定: あるＳＥのつぶやき](http://fnya.cocolog-nifty.com/blog/2012/03/centos-ssh-8291.html)- [Macのターミナルから「さくらVPS」にSSHリモート接続＆鍵方式でログインする方法（複数のid_rsaを管理） - おしい県で働くプチブログラマのブログ](http://cashew.hatenablog.com/entry/2013/02/10/Mac%E3%81%AE%E3%82%BF%E3%83%BC%E3%83%9F%E3%83%8A%E3%83%AB%E3%81%8B%E3%82%89%E3%80%8C%E3%81%95%E3%81%8F%E3%82%89VPS%E3%80%8D%E3%81%ABSSH%E3%83%AA%E3%83%A2%E3%83%BC%E3%83%88%E6%8E%A5%E7%B6%9A%EF%BC%86)- [さくらVPS – 複数環境からSSH接続する | shibuya blog](http://blog.kazuhiroshibuya.com/archives/51461147.html)- [さくらのVPS を改めて使いはじめる 1 – 使用準備、SSH 公開鍵認証 | アカベコマイリ](http://akabeko.me/blog/2012/04/revps-01-prepare-ssh-key/)- [さくらVPS申し込み～SSHするまで - ASとか](http://d.hatena.ne.jp/murakaming/20120619/1340129460)- [sshd](http://open-groove.net/linux/sshd-restart/)Amazon.co.jp： APPLE MacBook Air 1.8GHz Core i5/13.3/4GB/128GB MD231J/A: パソコン・周辺機器  
---title: リモートディスクを利用してMacBookProのDVDドライブからMacBookAirにソフトウェアをインストールdate: 2013-06-25T20:45:00+09:00category: ['Tech']tags: ['Mac']published: trueslug: remote-disk---MacBookAirには、CD/DVDドライブがついていない。過去のソフトをどうやって新しく買ったインストールしようかと思って、なんとかMacBookProのDVDドライブを使えないか調べてみると、「リモートディスク」が使えるっぽい。DVD or CD sharing：リモートディスクを使う  早速、iWorkをリモートディスクを使ってインストールしてみた。{{% googleadsense %}}  ## 1.まずMacBookPro側でリモートディスクを有効にするシステム環境設定の共有から  システム環境設定 Photo by meganii DVDまたはCD共有を選択  リモートディスク Photo by meganii ## 2.MacBookProでネットワークを作成適当にパスワードを作って、ネットワークを作成します。    Create Network2 Photo by meganii ### ご参考旧Macbookから新Macbookへの移行を高速に行う方法(WiFi経由) アドホックネットワークの作り方 ...  ## 3.MacBookAir側でリモートディスクの使用依頼をMacBookProに送る先ほど、MacBookProで作成したネットワークに接続すると、リモートディスクから、MacBookProが見えているはずです。  RemoteDisk2 Photo by meganii このMacBookProをクリックして、右上の使用を依頼を押す。  RemoteDisk Photo by meganii ## 4.MacBookPro側で許可するこれで、MacBookProにCDを入れると、MacBookAir側で認識することができました。あとは、好きにソフトをインストールするだけです。## 注意ただし、以下のタイプのディスクや操作は、DVD または CD 共有でサポートされていないそうです。- DVD ムービー- オーディオ CD- ゲームディスクなど、コピーガード (複製防止機能) がかかっているディスク - Microsoft Windows (Boot Camp で使用) または Mac OS X などのオペレーティングシステムのインストールディスク。- CD または DVD の作成	音楽CDぐらい取り込ませてくれてもいいのにね。でも、これで、無駄にDVDドライブを買わずにすみました。もしも、困っていらっしゃる方がいたらぜひお試しください。
---title: ボルダリング 梅田BOLDdate: 2013-06-29T23:46:00+09:00category: ['Activity']tags: ['ボルダリング']published: trueslug: umeda-bold---2013/06/29(土) 梅田にあるクライミングジム BOLDに行って来ました。大阪　クライミングジム　BOLD  {{% googleadsense %}}## なんといってもオシャレジム内は、綺麗でなんだかとってもオシャレ。流れている曲もカフェにいるみたいに思えてくる。ランクは、初級、中級、上級と分かれている。一番、簡単なもの以外は、ほとんど足固定の課題。中級の説明には、「このレベルをクリアすればボルダリングを趣味と言っていいレベル」と書いていた。とはいえ、中級の課題を全然クリア出来ない。。ルーフの課題がある。今回は、人が多くてなかなかトライ出来なかったけれど、次回やってみたい。## 広さなんばGR &gt;&gt; 神戸GR  &gt; 梅田GR &gt; BOLD &gt; Tobitoって感覚です。２階へは、ハシゴで登っていく。秘密基地に登っていくみたいだった。
---title: 勉強用に、簡単に作っては壊せる仮想環境をVagrantで構築するdate: 2013-06-30T06:39:00+09:00category: ['Tech']tags: ['vagrant']published: trueslug: vagrant-install---簡単に作っては壊せる環境があれば、勉強にはいいのかなと思い、まずは、簡単に仮想環境を作る環境を探しました。すると、Vagrantというツールがあることが分かりましたので、インストールして、環境構築を行なってみました。## Vagrantとは&gt;Vagrant は、Ruby で組まれたスクリプトで、仮想マシン上の開発環境の構築・配布の自動化を支援するためのツール。仮想マシン環境(VirtualBox) と構成管理ツール(Chef, Puppet)を利用することで実現している。これを使えば、コマンド一つで、開発に必要な環境を用意できるようになる。 [Vagrant で開発環境構築を自動化しよう - エンジニアきまぐれTips](http://d.hatena.ne.jp/okinaka/20110717/1310892601)触りだけでも便利なVagrant - komagata  {{% googleadsense %}}## Vitrualbox ダウンロード[Downloads – Oracle VM VirtualBox](https://www.virtualbox.org/wiki/Downloads)最初は、トップページからダウンロードできる最新版を利用したところ、Vagrant v1.2.2と相性が悪かったみたいで、以下のバージョン(4.2.8)を入れなおした。	http://download.virtualbox.org/virtualbox/4.2.8/VirtualBox-4.2.8-83876-OSX.dmg## Vagrant[Vagrant](http://www.vagrantup.com/)のDownloadsから v1.2.2をダウンロード。	## 環境を追加する```vagrant box add centos6.4 http://developer.nrel.gov/downloads/vagrant-boxes/CentOS-6.4-x86_64-v20130427.boxDownloading or copying the box...Extracting box...te: 61981/s, Estimated time remaining: 0:00:02)Successfully added box 'centos6.4' with provider 'virtualbox'!```上記のコマンドで、CentOSのVagrantfilesが作られる。~/.vagrant に box がキャッシュされるその後に、'vagrant up'を実行すれば、環境が作られるはずだったが、ここでエラー。```vagrant upBringing machine 'default' up with 'virtualbox' provider...[default] Importing base box 'centos6.4'...There was an error while executing `VBoxManage`, a CLI used by Vagrantfor controlling VirtualBox. The command and stderr is shown below.Command: ["import", "/Users/meganii/.vagrant.d/boxes/centos6.4/virtualbox/box.ovf"]Stderr: 0%...10%...20%...30%...40%...50%...60%...70%...80%...90%...100%Interpreting /Users/meganii/.vagrant.d/boxes/centos6.4/virtualbox/box.ovf...OK.0%...Progress object failure: NS_ERROR_CALL_FAILED```どうやら、Virtual Boxのバージョンと、Vagrantのバージョンに相性があるみたい。[windows7 - Windows 7でVagantを使う時はVirtual Boxのバージョンに注意 - Qiita [キータ]](http://qiita.com/yando/items/4a9acdcf3503230957e5)VirtualBoxのバージョンを4.2.8したところ以下のように正しく動作した。```vagrant upBringing machine 'default' up with 'virtualbox' provider...[default] Importing base box 'centos6.4'...[default] Matching MAC address for NAT networking...[default] Setting the name of the VM...[default] Clearing any previously set forwarded ports...[default] Creating shared folders metadata...[default] Clearing any previously set network interfaces...[default] Preparing network interfaces based on configuration...[default] Forwarding ports...[default] -- 22 =&gt; 2222 (adapter 1)[default] Booting VM...[default] Waiting for VM to boot. This can take a few minutes.[default] VM booted and ready for use![default] Configuring and enabling network interfaces...[default] Mounting shared folders...[default] -- /vagrant```以下のコマンドで、作成した仮想環境にSSH接続できる。root パスワードは "vagrant"みたい。```vagrant ssh``````cat /etc/redhat-releaseCentOS release 6.4 (Final)```簡単にCentOSの環境が作られました!!## 参考- [A list of base boxes for Vagrant - Vagrantbox.es](http://www.vagrantbox.es/)- [Vagrant - naoyaのはてなダイアリー](http://cdn-ak.f.st-hatena.com/images/fotolife/n/naoya/20130205/20130205195831.png)- [Vagrant コトハジメ](https://gist.github.com/voluntas/5525719)- [Vagrant のベースBOX作成手順 (Scientific Linux 6.1) - エンジニアきまぐれTips](http://d.hatena.ne.jp/okinaka/20110805/1312474847)- [chef-solo で学ぶ chef の基本動作 - jedipunkz' blog](http://jedipunkz.github.io/blog/2012/08/18/chef-solo/)chef-soloっていうサーバー構築自動化ツールもあるみたいです。### CentOSのバージョンを確認する方法'cat /etc/redhat-releas'
---title: 考えるための考具ってなんだろう？「考具 ―考えるための道具、持っていますか?」date: 2013-07-04T20:15:00+09:00category: ['Art']tags: ['book']published: trueslug: thinking-tools---考えるための道具。考具ってのに興味を惹かれて、読んでみる。     考具 ―考えるための道具、持っていますか? posted with カエレバ   加藤 昌治 阪急コミュニケーションズ 2003-04-04       Amazon     {{% googleadsense %}}## デザインは、わがまま-&gt;思いやり目からうろこであった。## マンダラートマンダラートっていうツールの名前は聞いたことがあるのだが、実際に使い方を知ったのは本書であった。	マンダラートとは、9つのマスの中心にテーマを書き、そのテーマに関連することを周りの8マスに埋めるというもの。[写真入れる]## オズボーンのチェックリスト## ブレーンストーミング	## 5W1H## タイトル
---title: ビジュアル　ロジカル・シンキングdate: 2013-07-10T00:11:00+09:00category: ['Art']tags: published: trueslug: logical-thinking---      ビジュアル　ロジカル・シンキング （日経文庫） (日経文庫ビジュアル) posted with カエレバ   平井 孝志,渡部 高士 日本経済新聞出版社 2012-04-14       Amazon  楽天市場      「そもそも考えるとは、結論を出すこと」{{% googleadsense %}}手に入れた情報を元に、ある論理に基づいて、結論を出すこと。
---title: 初めての北アルプス 〜涸沢ヒュッテ、奥穂高岳〜date: 2013-08-25T21:21:00+09:00category: ['Travel']tags: ['登山','旅行記']published: trueslug: north-alpusimg: "https://farm6.staticflickr.com/5447/9592275938_501b626375.jpg"---2013/08/14〜08/15にかけて、上高地から奥穂高岳を登ってきました。天候にも恵まれ、大きな怪我もなく無事帰ってこれましたので、振り返りながらまとめてみます。{{% googleadsense %}}## 5:30 @上高地夜行バスの到着地、上高地は涼しいというよりは寒かった。急いで、上着を羽織って、準備をする。歩きやすいハイキングコースをひたすら歩いていく。途中のキャンプ場での色とりどりのテントがお出迎えしてくれた。朝ごはんのいい匂いでお腹も減った。屏風岩が見えてきた。屏風岩は、日本最大級の岩場だそうで、自分たちがいったときも何人かが壁を登っていた。あの崖を登るのは、かなりすごい。雪が残っていることは、Twitterを見ていると分かっていた。しかし、分かってはいてもその場所にいって、雪が残っていることにただただ驚いた。涸沢は、場所によって全然寒さが違っていた。山からの吹き下ろしの風が吹くところでは、ちょっと立っているだけでどんどん体温が奪われる。一方、そこから山の方へ動くと、夏の山の暖かさを感じられる。今回は、涸沢ヒュッテでテントを借りた。ここのテントは、常設テントで最初から張ってあるので張るは手間は省けた。夜は照明もないので、ライトは必須である。夜と明け方は、やっぱり寒かった。ダウン買っていって正解だったと思う。夕飯の後は、明日の相談。北穂へ向かうか、奥穂高岳へ向かうか。「行きたい方へいったらいいと思う」という山の相談員のアドバイスを真に受けて、奥穂高岳へ向かうことを決意した。(のちに、浅はかであったことを思い知らされる。)## 5:30 @涸沢ヒュッテ朝ごはんを食べて、奥穂高岳へ向けて出発。昨日お世話になった涸沢小屋の横を抜けて、まずはザイテングラードを抜けて、穂高岳山荘を目指す。がれ岩をひたすら登る。昨日の平坦なハイキングコースとはわけが違う。一歩一歩確実に登っていくので、みるみる涸沢ヒュッテのテント村が小さくなっていく。## 07:15 ＠穂高岳山荘この時点で標高3,000m らしい。改めて標高の高さに気づくとびっくりするね。ここで、ちょっぴり休憩した後は、奥穂高岳へのアタック。険しい岩肌に、鎖とかハシゴとかついてるのが見える。怯えながらも登っていく。高所恐怖症の人はなかなかつらいんじゃないか？ってぐらい結構ビビりながらひたすら登っていきました。## 08:00 @奥穂高岳山頂周りの山々を一望できるさて、登ったら降りないといけない。こっからの下りが辛かった。降りても降りても同じ景色が広がってくる不思議なダンジョン。## 今回の登山で揃えた用具・ライト・ダウン## 初めての外岩涸沢ボルダー・涸沢小屋でマットをお借りして、昼寝岩・クライミングシューズって意外と滑らない・さすがに腕が痛い
---title: 索引設計についてのまとめdate: 2013-10-02T21:45:00+09:00category: ['Tech']tags: ['索引設計','DB']published: trueslug: indeximg: "https://images-na.ssl-images-amazon.com/images/I/51sApXJW7HL._SL160_.jpg"---DBMSにおいて、索引(インデックス)が重要なことは認識しているが、- そもそもどんな索引にはどんな種類があるのか- どんな場合に索引をつければよいのか- 索引をつけた場合のデメリットにはどんなものがあるのか理解が浅かったため、参考図書・参考URLを元に、索引設計の心得をまとめておく。{{% googleadsense %}}## インデックスの特性まずインデックスの特性として、以下3が挙げられる。### 1.事前に作成しておく必要がある表が大きい場合、作成にはそれなりの時間が掛かり、ハードディスクを消費する### 2.検索に必要な情報が含まれるインデックスを(RDBが)自動的に使用する検索に必要な列(=WHERE句に書かれた列) - 条件検索の列 - ジョインのターゲット列### 3.インデックスはメンテナンスが必要表が更新されると、インデックスは必ず(自動的に)更新される⇛　インデックスは更新処理(INSERT, UPDATE, DELETE)を遅くする```INSERT,UPDATE,DELETE時のインデックスのメンテナンス処理の概要について。新しい行の追加 リーフブロックへ索引エントリを追加する行の削除 リーフブロックから索引エントリを削除する索引列の列値の更新 リーフブロックから古い索引エントリを削除し、新しい列値に対応したリーフブロックに索引エントリを追加する[インデックスをタクサン作ったときINSERT,UPDATE,DELETEは遅くなるか - kagamihogeのblog](http://d.hatena.ne.jp/kagamihoge/20130817/1376707339)```ORACLEの場合、UPDATEのときは、DELTE⇛INSERTになるためより時間が掛かる## インデックスはどこにどれだけ作成すべきか### インデックスをつけるべき箇所- 表のプライマリーキーは(ほぼ)必須 (例外として小さい表)- 読み込み中心のシステム(表)は、インデックスが多くても問題ない- WHERE句で検索やジョインによく使用される列- カーディナリティが高い列 (SYSCAT, COLUMNS表のCOLCARD列で確認)### インデックスを避けるべき箇所- 更新が多いシステム(表)はインデックスを控えめにする- カーディナリティが低い列(フラグ列など)## 索引の種類1. Bツリー索引 ・・・　カーディナリティが高い、定型のSQL分の場合		ビットマップ索引のようにビットマップからROWIDに変換する必要がないのでダイレクトにデータにアクセスできます（データブロックへのアクセスは速いです）。ただし、索引を論理演算（AND, OR）で結合することはできないので非定型のSQL文にはあまり向きません。2. ビットマップ索引 ・・・　カーディナリティが低い場合非定型のSQL文に対しては索引を論理演算で結合できるので、複数索引の組合せを気にする必要がありません（複数索引を持つ必要がりません）。[Oracle Databaseの索引（インデックス）の種類 - Bツリー、ビットマップ、索引構成表、索引クラスタ（ハッシュ・クラスタ）](https://blogs.oracle.com/oracle4engineer/entry/oracle_database_-_b)## 作成する列の候補### 1.一意性の高い索引をBツリー索引はテーブルに対して最適な一つの索引を使う。(ビットマップ索引は複数の索引が論理演算されるので、複数の索引を利用できる)そのため、複数の列を条件に指定している場合は、できるだけ全ての列で複数索引を作成すること。これにより、一意性が高くなり、アクセスするブロック数を少なくでき、早くアクセスできる。### 2.使用頻度の高い列を先頭に全ての列の組み合わせの索引を作成すると数が多くなるため、使用頻度の多くない組み合わせ、または性能要件が高くない条件は省く。このとき、作成する索引の先頭には頻繁に使用する列を持ってきて、多くのSQL文で使われるようにする。(索引は、大小比較でデータを絞り込むため、先頭の値が決まらないと絞り込めない。よって、索引の先頭の列は条件で使用されている必要がある)### 3. 選択率の低い列を先頭に選択率の低い列(ユニーク性の高い列)から指定する。### 4. 非ユニーク索引にはキー圧縮## 候補### 頻繁にWHERE句の比較条件で使用されている選択率の低い列比較条件お列に索引が作成されていると、索引範囲スキャン(INDEX RANGE SCAN) が行われる。(一意索引で等価条件の場合はINDEX UNIQUE SCAN)この場合、アクセスする範囲は少ないほうが性能が良いため、選択率が低くなる列が効果的。カーディナリティの高い列は選択率が低くなるが、範囲指定(&lt;,&gt;など)では選択率が高くなる場合がある。### 頻繁に結合が行われている列ネステッド・ループ結合では内部表(最初にアクセスしないテーブル)の結合列で索引を使用して結合するため、結合列に索引がないと効率のよいアクセスにならない。結合する行数が少ない ⇛ 結合列に索引を作成してネステッド・ループ結合するほうが効率が良い。### 頻繁にソートされている列索引はソートして格納されていますので、ORDER BYのようなソート処理にも効果があります（索引範囲スキャンや全索引スキャンするだけでソート結果になります）。ただし、NULLが存在する列のBツリー索引では効果がありません（使用されません）ので注意して下さい（Bツリー索引ではキー値にNULLは含まれないためです。ただし、複数列索引ではすべての列値がNULLの場合のみ含まれないようになります）。### 頻繁に更新されていない列索引が作成されている列が更新されると索引も更新する必要がありますので、頻繁に更新されるとオーバーヘッドが大きくなり、断片化も発生し易くなるため効果が低下してしまいます。その断片化を解消するための再構築の頻度も多くなる可能性がありますので、作成しない方が良いです（作成しなくても良いようにデータベースを設計して下さい）。ただし、検索の性能が更新よりも優先度が高い場合もありますので、その場合のみ作成するとすれば良いでしょう。## 結合の種類### 1. ネステッド・ループ結合- 表の一部分を結合する場合に有効- 内部表の結合条件列に索引が作成されていて、その索引を使用することでデータに効率的にアクセスできる場合に利用する結合を試みるレコード数がより少ない方　外部表レコード数に大差がない場合、結合条件列の索引スキャンがより効率的な方を内部表### 2. ソート/マージ結合表の大部分を結合する場合に有効な結合方法。双方の表を結合条件列でソートし、結果をマージすることで対象レコードを抽出する。### 3. ハッシュ結合結合条件に等価条件が指定され、大量のレコード、あるいは表の大部分を結合する場合に有効な結合方法。ソート/マージ結合に比べ、事前のソート処理が不要となるため効率的な結合方法。[Oracle SQLチューニング講座（3）：SQLチューニングの必須知識を総ざらい（後編） (1/3) - ＠IT](http://www.atmarkit.co.jp/ait/articles/0408/25/news101.html)SQLチューニングの必須知識を総ざらい（後編） - ＠IT  結合のアルゴリズムについては、以下の記事で説明する。[SQL実践入門]結合のアルゴリズム Nested Loops, Hash, Sort Merge  ## 用語- カーディナリティレコード中の一意な値の個数を指します。例えば、性別データ（男、女）のように値の種類が少ない場合には、カーディナリティが低いといいます。逆に社員番号のようにほとんどの値が一意である場合は、カーディナリティが高いといいます。[Oracle SQLチューニング講座（3）：SQLチューニングの必須知識を総ざらい（後編） (2/3) - ＠IT](http://www.atmarkit.co.jp/ait/articles/0408/25/news101_2.html)## 参考- [DBパフォーマンスチューニングの基礎：インデックス入門](http://www.slideshare.net/simosako/rdb)- [津島博士のパフォーマンス講座　第6回　パフォーマンスの基礎である索引について](http://www.oracle.com/technetwork/jp/database/articles/tsushima/tsm06-1598252-ja.html)- [津島博士のパフォーマンス講座　第21回　「索引について（２）」](http://www.oracle.com/technetwork/jp/database/articles/tsushima/index-1849112-ja.html)津島博士のパフォーマンス講座はなかなか参考になった。Oracleの動きを抑えたい方は、一読することをおすすめする。## 参考図書     達人に学ぶDB設計 徹底指南書[Kindle版] posted with ヨメレバ   ミック 翔泳社 2013-08-07       Kindle  Amazon[書籍版]                               	  	  	               プロとしてのSQLチューニング入門 posted with ヨメレバ   福田 武志 ソフトバンク クリエイティブ 2007-03-28       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     
---title: Jekyllのバージョンアップdate: 2013-11-24T21:34:00+09:00category: ['Tech']tags: ['jekyll']published: trueslug: jekyll-versionup---Jekyllのバージョンがいつの間にか1.3になっているので、バージョンアップする。{{% googleadsense %}}```brew update```Xcodeが古くなっているので、AppStoreから最新をダウンロード```rbenv install 2.0.0-p195``````brew update  # Homebrew自体とfomulaを最新にするbrew upgrade # 更新のあるパッケージを再ビルドbrew doctor```設定が間違っていたので、修正export PATH=/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin[Configuring Mac OS X Mountain Lion 10.8 | Hacker Codex](http://hackercodex.com/guide/mac-osx-mountain-lion-10.8-configuration/)## rbenvによるバージョン切り替え### global 通常使用するバージョンの指定rbenv global 2.0.0-p353### local プロジェクト毎(特定のディレクトリ以下)で使用するバージョンの指定rbenv local 2.0.0-p353### shell そのシェル内でのみ使用するバージョンの指定rbenv shell 2.0.0-p353
---title: JAWS-UG Osaka第10回 AWSとコストについて ～AWSをなるべく安く使い倒す〜date: 2014-02-11T19:58:00+09:00category: ['Tech']tags: ['aws']published: trueslug: aws-osaka---JAWS-UG Osaka 第10回勉強会 2014年1月30日(木) - JAWS-UG大阪 | Doorkeeper  最近、Amazon Web Servicesに触れる機会があり、AWSのコストの考え方をちょっとでも聞きかじってこようと参加してきました。聞いててポイントをまとめてます。##オンプレ脳からの脱却すべてをEC2で実装した場合⇛ 120万そこからサービスとして存在するものについては、AWSのサービスを使うようにしていけば、コストを下げることができる。*EC2を使ったら負け*1. ELB化2. Backupを S3に3. DNS をRoute53に変更4. メール5. VPN ⇛ VPC6. EBS削除7. Webサーバ AS化8. CloudFormation9. リザーブドインスタンスの利用ポイント- マネージドサービスを活用すること- こまめに停止する- リザーブド、スポットのインスタンスを利用すること## リージョンによる価格の違い日本のリージョンは、やはり高いみたい。リージョンごとの料金の比較2014-02-04 - プログラマになりたい  ## 金額通知サービスAWS billing alerts っていう金額通知サービスがあるので、うまく活用するとよい。## S3の使い方の注意 GETとPUTの単価が桁違い細かい単位で保存(アップロード)するより、できるだけ大きな単位(上限5GB)で保存すること。なぜなら、GETと違ってPUTのリクエスト当たりの単価は文字通り桁違いだから。## AWSの一括決済支払アカウントを作って、利用しているすべてのサイトを支払アカウントにひもづけることで、ボリューム割を受けることが出来る。また、提供サービス毎の金額を把握することが出来る。## スケジューリングベースのAutoScaling*ログは常に、リモートログに！*AutoScalingで、自動的にインスタンスが停止、起動するため、ローカルにログを出力しても永続化できない。だから、ログはリモートに出力することが大事。AutoScalingで気をつける点は、前提条件の合わせ方。ブートストラップの考え方が重要になってくる。どこまで、AMIに含めるか、モジュールをどうやって最新にするか？## リザーブドインスタンスのポイント- 稼働率の高い- 最低限- キャパシティを予約注意　「先にお金を払った後は、金額が発生しない。」というのは、間違い。リザーブドインスタンスは、利用枠を買うと思った方がよい。ディザスタリカバリ(DR)先としてAWSを利用する場合は、リザーブドインスタンスにすべきである。なぜならば、DRが発生する際というのは、災害が発生して、ほかの人も同じようにインスタンスを立ち上げる可能性が高い。その場合、インスタンスが割当たらないリスクが発生するため。
---title: phonegap-startdate: 2014-02-16T12:14:00+09:00category: ['Tech']tags: published: trueslug: phonegap-start---## PhogeGapのインストール```npm install -g phonegap```## Monacaに登録[Monaca - HTML5モバイルアプリ開発プラットフォーム](http://monaca.mobi/ja/)## MonacoデバッカーをiPhoneにインストールAppStoreから Monacaをインストール。## チュートリアル以下のチュートリアルをやってみて、雰囲気をつかむ- [PhoneGapでHello World! 初級講座 | PhoneGap Fan](http://phonegap-fan.com/school/katsuya_2_1.php) - [PhoneGapで年齢計算アプリを作ろう！ 初級講座 | PhoneGap Fan](http://phonegap-fan.com/school/katsuya_3_1.php)基本的には、JavaScriptとHTML5でどうにかなるみたい。スゴイね。### なんかハマった点- 「最小限のプロジェクト」を選択して作成したプロジェクトを、Monacoデバッカから見ると、白紙のページにしかならなかった。⇛ 「Hello World」のプロジェクトを修正することで、対応した。必要なファイルがあるのだろうか。- 「Hello Wolrd」のプロジェクトを利用しても、JavaScriptが動作しない場合がある。⇛　Monacaアプリを再インストールすると治った。んー、なぜだ。#### 追記iPhoneアプリ側で、キャッシュを削除するというボタンがあるため、それを使えば正常に戻ることが多い。##Cameraを使用するチュートリアル以下のチュートリアルページを参考に、Monacoの HelloWorldアプリを修正していきます。[PhoneGapで端末の機能を用いたアプリを作ろう！ 初級講座 | PhoneGap Fan](http://phonegap-fan.com/school/katsuya_4_1.php)Camera[PhoneGap API Documentation](http://docs.phonegap.com/jp/2.2.0/cordova_camera_camera.md.html#camera.getPicture)### index.htmlHelloWorldのサンブルが含まれているが、追加した部分は、``内の`document.addEventListener`と`snapPicture()`のみ。```                            // Set virtual screen width size to 640 pixels        monaca.viewport({width: 320});        document.addEventListener ("deviceready", function() {            $("#camera-button").attr("disabled", false);        });        // PhoneGap event handler        document.addEventListener("deviceready", onDeviceReady, false);        function onDeviceReady() {            // Update Toolbar Header            monaca.updateUIStyle("header", "title", "Your First App");            monaca.updateUIStyle("tapme-button", "disable", false);                        console.log("PhoneGap is ready");        }        function onTapButton(){            // Triggers when button is tapped: defined in index.ui            navigator.notification.alert("HelloWorld", function() {}, " ", "OK")        }        function snapPicture() {            var options = {                destinationType: Camera.DestinationType.FILE_URI,                targetWidth: 150,                targetHeight: 150            };                        navigator.camera.getPicture(onSuccess, onFail, options)                        function onSuccess (imageData) {                var image = document.createElement("img");                $(image).attr("src", imageData);                $("#photos").append(image);            }                        function onFail (message) {                alert ('error:' + message)            }        }         PhoneGapで写真撮影                                 ```## 次回こんなに簡単に、iPhoneの機能を利用できるなんて素敵！Cameraで撮った写真をWebアプリに連携させたい。
---title: XPathでの属性値の取得date: 2014-02-19T22:09:00+09:00category: ['Tech']tags: ['xpath']published: trueslug: xpath-java---知っててよかったXPath。XMLのノードを特定するときに使う。## XPath使い方```javaXPath xpath = XPathFactory.newInstance().newXPath();String expression = "/widgets/widget";InputSource inputSource = new InputSource("widgets.xml");NodeList nodes = (NodeList) xpath.evaluate(expression, inputSource, XPathConstants.NODESET);```## ルートノードの選択```html```## 属性値の取得方法```//html/body/hoge[@id='test']```id属性が'test'のhogeノードを取得する## 参考- [XML/XPath/XPathの書き方 - 俺の基地](http://yakinikunotare.boo.jp/orebase/index.php?XML%2FXPath%2FXPath%A4%CE%BD%F1%A4%AD%CA%FD)- [javax.xml.xpath (Java Platform SE 6)](http://docs.oracle.com/javase/jp/6/api/javax/xml/xpath/package-summary.html)test
---title: リードクライミングのためのビレイ講習会@グラビティリサーチなんばdate: 2014-02-21T06:06:00+09:00category: ['Activity']tags: ['リードクライミング']published: trueslug: lead-climbing-traning-day1---Gravity-Researchなんばで、リードクライミングをすべくビレイ講習会を受けてきました。GRなんばだと、リードをやるのに、2日間のコースを受講するみたいです。Gravity Research なんば  ## 用語の説明ハーネス、カラビナなどなど## ８の字結びハーネスとロープをしっかり結ぶための結び方を学びます。## ボルダリングにはない緊張感登る方も、下でロープを支える人もかなりの緊張感がある。登る方は、落ちた時ちゃんと支えてもらえるんだろうかと不安になる。支える方は、登ってる人がいつ落ちてくるかわからないし、常にロープを引っ張っていかないと登る人がうまく登れないし危ない。
---title: iMovieとMotion5で作る結婚式余興ムービーdate: 2014-02-22T14:35:00+09:00category: ['Movie']tags: ["iMovie", "Motion5", "Movie"]published: trueimg: "https://images-na.ssl-images-amazon.com/images/I/51pXGkmlEUL._SL160_.jpg"slug: wedding-movie-motion5---去年の話にはなるのだが、2013年9月の友人の結婚式に向けて、余興の動画をみんなで作った。最近、それについての動画の質問を受ける機会があったので、まとめてみました。  ざっくりまとめると、iMovie とMotion5を使って結婚式Movieを作る上では、- iMovieって細かい設定が全然できない- Motion5を使いこなすのはなかなか大変(カメラワーク、3Dの概念)ということが作りながら分かったので、Motion5の表現力を上手く使いつつ、iMovieで仕上げるのが良さそうです。(スキルがあれば、Motion5で全て構成することも出来そうですが・・・){{% googleadsense %}}結婚式Movieを複数人で作る上で大事だなと感じたポイントは、- まず動くものを！プロトタイプからフィードバックを得る- 完成のイメージを共有するということ。デスマだ、デスマだと言いながら、なかなか大変だったけど、自分たちが作ったものを誰かに見てもらえる、喜んでもらえるっていうのは嬉しいことだなと再認識でした。そして、何より、結婚を迎えた二人に喜んでもらえるのが嬉しかった。## 目次1. 前提2. 作成の流れと期間3. 使ったツールと使い方4. 気をつけた点5. 良かった点6. 苦労した点7. 参考図書## 1.前提Macを使っているので、Windows関係はよく知りません。iMovieだけでは、凝ったものは作れないのではないかと考えて、Mac用の動画編集ソフトを物色した。Adobe Premiere、FinalCutPro, Motion5あたりを検討したが、値段的に圧倒的に安くて、色々出来そうなMotion5を選択した。  (FinalCutProを買ってしまった方が楽だったんでは？と思わなくはないが、使ったことがないのでなんとも言えない。)- Adobe Photoshop Elements 14 &amp; Adobe Premiere Elements 14 Windows/Macintosh版- Motion5 - Final Cut Pro Final Cut Proはお試しできるので試してみればよかった。  ## 2. 作成の流れと期間ざっくり作成の流れは、1. 余興を頼まれる2. アイデア出し・ブレインストーミング、類似調査(Youtube検索)3. 写真のパラパラのムービーに決定4. メッセージ写真撮影と収集5. Photoshopでの切り抜き6. Motion5で1つずつのパラパラムービーを作る7. Motion5で書きだしたmovファイルをiMovieで結合8. ひたすら微調整という感じで進めました。2013年6月からアイデア出し、テーマ決定。  作る形は、 **パラパラアニメ風ムービー** を作ることに！  7月写真撮影、7月8月で仕上げました。### 参考にさせてもらったムービーパラパラアニメ風いいんじゃね？って思わせてくれた動画。    メッセージは大きいほうがいいね！ってなった動画。  ## 3. 使ったツールと、使い方### アプリケーション- Motion5- iMovie - Photoshop冒頭にも書いたように、iMovieだけでは、余興のアイデアを実現出来そうになかったのでMotion5を買って、機能を学びながら作っていきました。  Motion5は、タイムラインの感覚がなかなか使いこなせなくて大変でした。後は、奥行きを意識するためにカメラワークを覚えるのにひたすら試行錯誤だった気がします。Photoshopは、一人ひとりのコマを切り抜くために重宝しました。そのほか、背景の画像合成なんかにも大活躍してもらいました。### 環境- Redmine- WebDAV- Evernote共有BookRedmineは使ったみたいだけ。ファイル共有としてWebDAVサーバ立てました。最初Dropboxだけで行けるかな？と思ったけど、ファイル容量が大きくなりすぎて同期出来ず・・・ようやく、さくらVPSが活用できました笑。アイデア、議事録なんかは、Evernoteに放り込んで共有しました。## 4.気をつけた点Youtubeでパラパラマンガの結婚式余興Movieを見ていて思ったのは、以下の点- メッセージが小さくて何が書いてあるのか分からない- 同じパターンが続くと飽きる- メッセージを持ってる人が楽しそうじゃないとよくない- 音楽に動きが同期していると良いということで、以下の方針を立てて作るようにしました。### 方針- 毎回メッセージが読めるように、人が切り替わる前にズームする- 伝えたいことは？ただ単に自己満足にならないように、ちょっとは気をつける- 楽しい顔して写真はとってもらう- 音楽と動きを極力シンクロさせる## 5.良かった点- 「常に動くものを用意する！」- 余興Movieを作る上でのテーマを決めて、迷った時はそれに沿って考えた結局は、作ってみないと分からないことだらけだったのでまずは、雰囲気が分かる程度に動画を作っていくことが大事だったなぁと思います。動くものをみてやっと、ここは違うとかこれがいいとか意見が出てきました。テーマをもってやることで、ある程度統一感を出せたと思います。## 6.苦労した点- 写真を取ってもらう時に、完成のイメージがないとあとで困る- Photoshopでの切り取り作業- iMovieが意外と細かいところに手が届かない- 時間の微調整まず、写真を撮ってもらう段階で完成のイメージがぼんやりしてたので、どういうポーズをしてもらえばいいか困りました。その結果、後で動画にするときに、使える写真がない？！ってことになってました。完成のイメージをもって、写真取りに行くべきでした。Photoshopの切り取り作業は、Photoshop自体の操作になれるまでかなり時間を要しました。切り取るけど、体中から線が出てるみたいな状態になってました。写真を取るときに、切り取りやすい背景にすればよかったと大後悔しました。(背景が森とかどう考えてもアウトでした。髪の毛と樹の枝が同化する、木の緑が体中につきまとう・・・)## 7. 参考図書     Motion 5 ガイドブック posted with カエレバ   石坂 アツシ ビー・エヌ・エヌ新社 2011-10-25         Motion5の使いこなしについての本。ひとつひとつの機能の使い方について説明してくれている。     Photoshop 10年使える逆引き手帖【CS6/CS5/CS4/CS3 対応】【Mac OS X ＆ Windows 対応】[Kindle版] posted with ヨメレバ   藤本 圭 SBクリエイティブ株式会社 2013-11-08       Kindle  Amazon[書籍版]                               	  	  	  	    Photoshopの使い方関連は、分からない度にネットで調べていたが、リファレンスがあった方がいいと思って購入した。     Final Cut Pro X + Motion 5  Standard Techniques[第2版] -プロが教えるビギナーのための映像制作テクニック100 posted with ヨメレバ   石坂 アツシ ビー・エヌ・エヌ新社 2014-03-21       Amazon  Kindle                         	  	  	  	    Final Cut Pro Xの情報だけでなく、Motion5での作り方のサンプルがいくつかあるので参考になった。## 番外編〜名場面〜#### 深夜のRedmineの進捗更新メール深夜にチケット完了メールが飛び交ってました笑。あの時は、お疲れ様でした。#### 「大丈夫だ、Photoshop職人がなんとかしてくれるPhotoshop職人が見えない潰れた文字を見えるようにして、くすんだ海岸線をきれいな青空と合成したり、そんな写真撮ったことないと新郎から言われる始末笑。Photoshopすごい！## 余興ムービーを作る人によく読まれているページ- [結婚式余興ムービー「ドミノでええねん」16,000個のお祝いドミノ倒し | じょーぶん部](https://meganii.com/blog/2014/09/06/domino-yokyo/)- [結婚式余興ムービー、あなたは何で作る？Keynote, iMovie, Motion5, FinalCutProを結婚式余興のムービー作成に使ってみて | じょーぶん部](https://meganii.com/blog/2014/08/19/imovie-motion5-finalcutpro/)- [福井-大阪-名古屋-東京。拠点が離れている中での結婚式余興作成 | じょーぶん部](https://meganii.com/blog/2014/09/28/baseball-club-yokyo/)
---title: Gruntのインストールdate: 2014-02-24T23:01:00+09:00category: ['Tech']tags: ['grunt']published: trueslug: grunt-install---## Grunt Install```npm install -g grunt-clinpm install grunt --save-dev```早速、`grunt`って叩くと、怒られた。```$ grunt &gt;&gt; Local Npm module "grunt-contrib-clean" not found. Is it installed?&gt;&gt; Local Npm module "grunt-contrib-jshint" not found. Is it installed?&gt;&gt; Local Npm module "grunt-contrib-uglify" not found. Is it installed?&gt;&gt; Local Npm module "grunt-contrib-watch" not found. Is it installed?&gt;&gt; Local Npm module "grunt-recess" not found. Is it installed?&gt;&gt; Local Npm module "grunt-contrib-imagemin" not found. Is it installed?&gt;&gt; Local Npm module "grunt-svgmin" not found. Is it installed?Warning: Task "clean" not found. Use --force to continue.Aborted due to warnings.```それぞれインストールしていく。```npm install grunt-contrib-clean --save-devnpm install grunt-contrib-jshint --save-devnpm install grunt-contrib-uglify --save-devnpm install grunt-contrib-watch --save-devnpm install grunt-recess --save-devnpm install grunt-contrib-imagemin --save-devnpm install grunt-svgmin --save-dev```これでやっと `grunt`を実行できた。## メモ- `--save-dev`をつけると、package.jsonにインストールした情報が記述される- `package.json`にインストールしたいプラグインを書くことで`npm install`でインストール出来る。## 参考- [Grunt.jsの始め方 -インストール編- | css | basara669.com](http://basara669.com/frontend/gruntjs_first_step2/)- [Web制作で面倒な作業を自動化するビルドツール、Grunt v0.4 入門｜Web Design KOJIKA17](http://kojika17.com/2013/03/grunt.js-memo.html)
---title: Immutable Infrastructure - JAWS DAYS 2014date: 2014-03-15T12:44:00+09:00category: ['Tech']tags: ['aws']published: trueslug: jawsdays-immutable-infrastracture---JAWS DAYS 2014参加レポート第1弾です。## Immutable Infrastructure @naoya_itoJAWS DAYS 2014、Immutable Infrastructure について - naoyaのはてなダイアリー  {{% googleadsense %}}## そもそもImmutable Infrastructureって？Disposable Componetnsって呼ばれたりしていて、不変な、状態を持たない、廃棄可能なっていう意味を持つ。サーバの状態って、日々のチューニングなどで常に変化している。ケースとしてはまれかもしれないが、半年後にそんな状態のサーバにRailsアプリをもう一度デプロイするときはひどく怖いはす。どんな変化を行なったかを管理する必要がある。## でもどうやってサーバの管理をする？今まで手順書で管理をしていた。しかし、手作業になるためどうしてもオペレーションミスが出てしまう。**「状態管理が面倒なら、状態を管理しなければいいじゃない」**## Blue, Green DeploymentELB, EIPを切り替えることで切り替えるのも行われている。それをもっと大規模にやる例だと思えばよい。### Herokuでは同じことをやっているgit push する度に新しい環境(コンテナ)を作り、古い環境を捨てる。上書きすると、環境が上書きされ変な状態になる場合がある。無停止で切り替えることができる### Travis CIJenkins as a Serviceみたいなもの。テストをするときに、既存の環境があることでテストが通るというケースはよくある。まっさらな状態にテストを乗せて動かすことで、防ぐことができる。### Amazonでは1時間で1,000回デプロイビジネスのサイクルを早く回す。プロトタイプを早く回すという実利的なメリットがある。## Infrastructure as Code最近になってChefなどの Configuration Management Toolが出来てきたのは、Aamazon Web Serviceが盛り上がってきているから。## 冪等性ある操作を何回やっても結果が同じになること。Chefを何度も実行した際に、毎回状況が変わるのであれば使い元にならない。とはいえ、やっぱり環境の状態管理は難しい。### そこで、環境の状態管理はしない！- 必要になったときに新しく作る- 1回作ったものには変更を加えない- Stateless な状況を作る。新しい環境をオンデマンドで即座に生成できる技術⇛　VMよりもコンテナが重要になってきた！VMは、ハイパーバイザ、OS、などと起動していくためどうしても時間がかかる。一方、Linuxのコンテナは、Apacheと同じようなプロセスであるため、即座に起動できる。プログラマブルにしたもの　⇛　Docker#### DockerLinuxコンテナを手軽かつプログラマブルに扱えるようにする#### Jenkins + Dockerコンテナの環境に依存してしまう　⇛　抽象レイヤー DockerアプリケーションがポータブルになるRuby - Foreman - Rack - Bunder npm, package.jsonBuildpacks アプリケーションがポータブルになると・・・アプリケーションgit pushすればOK ⇛　- ステートレスなWebとURIのもｔらす制約ににている状態を伝えるのは難しい。状態がなければ、指し示すことが可能になる**上書きデプロイから、コンテナベースのデプロイへ**## 課題- コンテナ/ Dockerだけでは足りない- ステートフルなサーバをどうするか？　ストレージ、キャッシュなど  Webアプリなどでもステートレスなものがある　⇛　ログなど　ステートフルなものを外に逃す実装・・・fluentd既存インフラの一部を動的にしたいというニーズはある。ユーザは、コンテナベースのデプロイのメリットを体感してきている。
---title: 『みえない』から『みえる』暗闇体験〜Dialog In The Dark(ダイアログ・イン・ザ・ダーク)〜date: 2014-04-06T11:00:00+09:00category: ['Art']tags: ['DialogInTheDark','暗闇体験']published: trueslug: dialog-in-the-darkimg: "https://farm4.staticflickr.com/3707/13655946803_10ac7c61e4.jpg"---純度100%の暗闇の中を、視力以外の感覚を頼りに、その日そこに集まった人たちと力を合わせて進んでいく暗闇体験「Dialog In The Dark」@新宿外苑前に行ってきました。{{% googleadsense %}}## Dialog In The Dark(ダイアログ・イン・ザ・ダーク)って？公式ページのDID(Dialog In the Dark)とはのページには、以下の通り書いてあります。&gt; 参加者は完全に光を遮断した空間の中へ、グループを組んで入り、暗闇のエキスパートであるアテンド（視覚障害者）のサポートのもと、中を探検し、様々なシーンを体験します。その過程で視覚以外の様々な感覚の可能性と心地よさに気づき、そしてコミュニケーションの大切さ、人のあたたかさを思い出します。期間によって、暗闇で何をするかは異なるみたいです。自分は、ガーデニング・イン・ザ・ダークを体験してきました。「暗闇のソーシャルエンターテイメント」って言うぐらいに楽しかったです。ダイアログ・イン・ザ・ダーク  ## なんで行こうと思った？- 友達がおすすめしてたから- 直島(南寺)での暗闇体験があって今度も面白そうと思ったから## 不安から安心に変わる。『見えない』から『みえる』白い棒を渡されて、電気を消された瞬間ほんとに何も見えない。「さあ、いきますよ、ついてきてください」と案内の人が言うのだけれど、見えない。どこに進んだらいいのか分からない。ほんとに進んでも大丈夫？って不安を感じる。でも、時間が経つにつれ、だんだんと暗闇でいることに慣れてくる。話し声から誰がどこにいるかわかるようになってくる。暗闇の世界の中に何があるのか、動いて、触って感じたくなってくる。途中で、荷物をみんなに渡したりするんだけど、そのときにはどこからともなく相手の手が暗闇から「みえる」ような気になった。『見えない』けど、『みえる』ようになってくるのは楽しい。## 「私はここにいるよ」Dialogが始まる前に言っていた「情報発信しないと透明人間になってしまうよ」と案内の人が言っていた。たしかにそうだ。この世界では、「私はここにいるよ」「○○さんはどこ？」って、常に情報を発信しないと、存在しないと同じことになってしまう。逆にいうと、誰かの声を聴くとすごく安心する。  「あっ、そこにいるんだ。」「ここに段差があるよ」「私今座ってるからー」「頭気をつけて」「みんなこれ触ってみてー」  大人が子供にかえって、みんなで遠足をしてるみたいな感じで楽しい。## ああ、こんな人だったんだ暗闇体験をする前に、参加者が輪になって簡単に自己紹介をするんだけど、そのときの印象と、暗闇体験をして出てきた後の印象は全然違うものだった。たった1時間ほど一緒にいただけなのに、もうずっと前から知り合いだったように感じた。声からイメージを再構成される。暗闇から出来てきた後、ああこんな人だったんだって思い、ちょっと気恥ずかしいような気にもなった。## 同じグループの意見- 時間がゆっくり流れる- 人の声って安心する- 人は視覚からが８割。今の時代は情報が多すぎる- 見えないからこそ、可能性を感じられる## 暗闇のソーシャルエンターテイメント面白かったのでぜひ。2014/03/21〜06/01 までは、ガーデニング・イン・ザ・ダークがやってるそうです。ダイアログ・イン・ザ・ダーク       まっくらな中での対話 (講談社文庫) posted with カエレバ   茂木健一郎 with ダイアログ・イン・ザ・ダーク 講談社 2011-01-14         
---title: 認知症と介護date: 2014-06-14T22:46:00+09:00category: ['Art']tags: ["care","セミナー"]published: trueslug: care---介護について話を聞く機会があったので、聞いてきた。認知症の話と、介護の技術## 認知症85歳の3人に1人は認知症である。認知症とは、症状の名前で原因には約70種類ほどある。記憶力は、低下するが、感情はそのままむしろ研ぎ澄まされるということがだんだんとおわかってきた。### 原因1. アルツハイマー2. 脳卒中(脳の血管が詰まる、破れる)見分け方は、数十秒、両手を手のひらを上に、突き出してもらうこと。自然と手のひらが変えるようだったら、疑ったほうがよい。### 接し方「ダメでしょ！」って一方的に怒るのでは、本人も不安になってしまう。「それってやりづらくない？こっちの方がよいでしょ？」といってあげること。出来ることをすることで、人は安心できる。## 認知症の進行を遅らせるポイント- 薬　薬を使うことで、進行を止めることまでは出来ないが、進行を緩やかにすることができる- ストレスを減らす  焦りや、不安などのストレスが進行を早める。## 介護は一人では戦えない。支援を行なっている団体があったり、補助金の制度など知らないだけで損をするようなことを今の内に知っておけてよかった。セミナー講師の「介護は一人では戦えない」という言葉が、そうなんだろうなーと身にしみた。個人的には、寝返りを打たせるだけでも、楽に行う技術があるという体の使い方に興味を持つことができた。[大阪市市民の方へ　地域包括支援センター](http://www.city.osaka.lg.jp/fukushi/page/0000006327.html)## 昔はまってたバッティングの正体を思い出した。     バッティングの正体 posted with カエレバ   手塚 一志 ベースボールマガジン社 1999-05       Amazonで購入  楽天市場で購入      
---title: 「脱藩学」と「オモロい社会人」〜閉塞感のある君へ。こっちへおいでよ。〜date: 2014-06-17T22:00:00+09:00category: ['Art']tags: ["脱藩","book"]published: trueslug: dappan-omoroimg: "https://images-na.ssl-images-amazon.com/images/I/41ArPn4UwsL._SL160_.jpg"---     閉塞感のある君へ。こっちへおいでよ。 人とつながって情報発信するコミュニティ型生き方の秘訣 posted with カエレバ   湯川鶴章,TechWave塾コミュニティ アスキー・メディアワークス 2013-03-14       Amazonで購入  楽天市場で購入     「脱藩学」「オモロい社会人」ってキーワードが飛び込んできたので、メモしておく。{{% googleadsense %}}## 脱藩学### 脱藩とは？- 自分の置かれている環境や、自分自身を活かしてないで文句を言っている自分からの脱藩。- 与えられた選択肢から選ぶのではなく自分で選択肢を作る生き方「社会ではこれがあたりまえだから・・・」「組織ではこうするのがあたりまえだから」という言い訳を作って行動しないことを正当化していないだろうか。自分は自主的に動けているだろうか？文句を言っている自分からの脱藩。(最近、#脱藩なう というハッシュタグを見かけたので、脱藩学っていうキーワードに「おっ」となった)     JAWS-UG札幌 #脱藩なう  from Tomoya Ishida  ### 自分で選択肢を作るには？1. 自分が求めているモノ、重視するものを明確にする。(例えば、自分の武器、スキルを他己評価してもらう)2. 成りたい方向に向かって嬉々としてもがき、前進する。やりかたを先行事例から学ぶ(書籍を読む。直接あって話を聞く)A3. あたり前から離れたコミュニティに属する(例えば、仲間、環境は大事。精神的セーフティーネットにもなる)###　ピンときた言葉- これから必要となる知識・経験は、今行動している現在進行形の実経験から学習する必要がある。- ちょっと背伸びして、成りたい自分になれる環境に自分を置く。- 得意なものを持った人たちが自分の専門性を活かしながらお互い協力して１つのことを作り上げていく。## オモロい社会人オモロい社会人とは、輝いている人、自分らしく生きている人、誰かのためになっている人、道を貫こうとしている人である。### オモロさを極める無限ループ1. 何か自分にできることを周りの人のために始める2. 感謝される3. 感謝を受け取って自身をつける4. 自信が少しついたなら、さらに多くの人に与えるこのループを繰り返すことで、「オモロさ」を強くしていく。## 参考- [脱藩学 | 未来の自分が見つかるインタビュー術 FREEDOM UNIVERSITY 自由大学](https://freedom-univ.com/lecture/dappan.html)- [与えられたものから選ぶのではなく、自ら選択肢を作り出すこと | FREEDOM UNIVERSITY 自由大学](https://freedom-univ.com/lecture/dappan_130604.html)[募集告知]自由大学で「脱藩学」やります！ | 空気読み一人シンクタンク  
---title: PythonでBlenderdate: 2014-06-22T18:12:00+09:00category: ['Tech']tags: ["blender"]published: trueslug: blender-pythonimg: "https://farm3.staticflickr.com/2914/14483105314_fc858148c2_b.jpg"---PythonでBlenderを操作するためのメモ。## メッシュ(mesh)の構成### 頂点(x, y, z)の座標を指定するみたい### エッジよくわかっていない### 面頂点で指定した座標をつなげることで、面を形成する## メソッド### デフォルトの立方体を生成bpy.ops.mesh.primitive_cube_add()## サンプル(ピラミッド)```pythonimport bpycoords = [(-1.0, -1.0, -1.0), (1.0, -1.0, -1.0), (1.0, 1.0, -1.0), (-1.0, 1.0,-1.0), (0.0,0.0,1.0)]faces = [(2,1,0,3), (0,1,4),(1,2,4),(2,3,4),(3,0,4)]me = bpy.data.meshes.new("PyramidMesh")ob = bpy.data.objects.new("Pyramid", me)ob.location = bpy.context.scene.cursor_locationbpy.context.scene.objects.link(ob)me.from_pydata(coords,[],faces)me.update(calc_edges=True)```## ドミノ```pythonimport bpyfor y in range(0,5):	coords = [(0,2*y,0),(2,2*y,0),(2,2*y+0.5,0),(0,2*y+0.5,0),(0,2*y,2),(2,2*y,2),(2,2*y+0.5,2),(0,2*y+0.5,2)] 	faces = [(0,1,2,3),(0,1,5,4),(3,2,6,7),(1,2,6,5),(0,3,7,4),(4,5,6,7)]	me = bpy.data.meshes.new("Cube")	ob = bpy.data.objects.new("Cube", me)	ob.location = bpy.context.scene.cursor_location	bpy.context.scene.objects.link(ob)	me.from_pydata(coords,[],faces)	me.update(calc_edges=True)```## ドミノ part2```pythonimport bpydef create_cube(x, y):	coords = [(4*x,2*y,0),(4*x+2,2*y,0),(4*x+2,2*y+0.5,0),(4*x,2*y+0.5,0),(4*x,2*y,2),(4*x+2,2*y,2),(4*x+2,2*y+0.5,2),(4*x,2*y+0.5,2)] 	faces = [(0,1,2,3),(0,1,5,4),(3,2,6,7),(1,2,6,5),(0,3,7,4),(4,5,6,7)]	me = bpy.data.meshes.new("Cube")	ob = bpy.data.objects.new("Cube", me)	ob.location = bpy.context.scene.cursor_location	bpy.context.scene.objects.link(ob)	me.from_pydata(coords,[],faces)	me.update(calc_edges=True)loop = 1 for y in reversed(range(100)):	for x in range(loop):		create_cube(x, y)	loop = loop + 1```## 参考- Blender 2.63 での Python の使い方についてまとめてみた - 凹みTips  - Blender Python: Mathematical Mesh - THE PROVING GROUND  
---title: あなたは中級者を脱出出来ているだろうか？ドレイファスモデル技能モデル〜リファクタリング・ウェットウェア ―達人プログラマーの思考法と学習法〜date: 2014-06-23T21:56:00+09:00category: ['Art']tags: ["book","learn"]published: trueslug: dreyfus-modelimg: "https://images-na.ssl-images-amazon.com/images/I/41cOFPQCwXL._SL160_.jpg"---「必要な仕事を行い、必要になると新しい仕事を学ぶが、仕事を広範かつ概念的に理解することは決してない」     リファクタリング・ウェットウェア ―達人プログラマーの思考法と学習法 posted with カエレバ   Andy Hunt オライリージャパン 2009-04-27       Amazonで購入  楽天市場で購入     {{% googleadsense %}}## ドレスファスモデルの第５段階### 第１段階 初心者当該の技能分野における経験を持っていない。初心者にはレシピが必要。ここでいう「経験」とは、この技能を使うことにより考え方に変化がもたらされたものである。### 第２段階 中級者最近経験した似通った場面を参考にしてコンテキストを考慮したアドバイスの活用ができる。しかし、全体的な視点で物事を見ることはできない。### 第３段階 上級者問題を探しだして、解決できる### 第４段階 熟練者全体像を見ることができる。自分の行動を振り返り、次回のパフォーマンスを改善するために自己補正ができる。### 第５段階 達人全体の1〜5%。物事を行うよりよい方法を模索している。直感で動く## 初心者と達人の違い- ルールから直感へ- 点ではなく、全体の集合として捉え、重要である一部に力点を置くことができる- 問題から離れて見ている人から、システム自信の一部として関与することができるルールとは、コンテキストに依存しない画一的なルールのこと。直感とは、コンテキストに応じた臨機応変な感覚のこと。達人によって作られた「ベストプライスティス」を初心者に適用すると、効果をもたらす。一方、達人たちにその「ベストプラクティス」を順守させると、達人を初心者レベルに引き下げてしまう。## 専門技能の習得には？- 明確に定義されたタスクが必要- タスクには適度な難度(やりがい)が必要だが、実行可能でなければならない。- 周囲から行動の拠り所となるような有益なフィードバックが必要- 復習のための繰り返しの機会が与えられ、エラーを修正する機会を提供されるべき。## ほとんどの人は中級者「必要な仕事を行い、必要になると新しい仕事を学ぶが、仕事を広範かつ概念的に理解することは決してない」この言葉は、結構耳が痛い。問題の一部ならば、解決出来るのだけれど、全体的な視点がない。そこだけを理解していればいいと思っていないだろうか？たしかに、全部理解するのは難しいかもしれないけれど、はなっから諦めていてはいつまでたっても全体を理解することができない。全体を見る視線をもつ意識だけはしておきたい。
---title: jekyll front matterdate: 2014-06-24T07:12:00+09:00category: ['Tech']tags: ['jekyll']published: trueslug: jekyll-front-matter---{{% googleadsense %}}```rubyrequire 'rubygems'require 'english'require 'yaml'content = File.read('test.markdown')content =~ /\A(---\s*\n.*?\n?)^(---\s*$\n?)/mYAML.load($MATCH)```## 参考- [Jekyllのお勉強 -YAML部分と記事本文を分離する正規表現- – じょーぶん部](http://meganii.com/blog/2013/05/23/regexp-jekyll/)- [Front-matter](http://jekyllrb.com/docs/frontmatter/)- [Module: English (Ruby 2.0.0)](http://ruby-doc.org/stdlib-2.0.0/libdoc/English/rdoc/English.html)
---title: 学び方をリファクタリングdate: 2014-06-26T22:28:00+09:00category: ['Art']tags: ["リファクタリング","learning"]published: trueslug: learningimg: "https://farm7.staticflickr.com/6192/6120460834_453f793235_z.jpg"---## 意識的な学び- 学びとは、「人に対して」行われることではない。「人が」行うことである。- 経験の伴わない、知識のみの習得は効果が無い２点目はすごく分かる。机上の知識だけでは、全然使いものにならない。やってみて得たフィードバックをもとに、知識を深めるのがよさそう。{{% googleadsense %}}## Play 遊ぶこと　「目的を定めない自由な探索」遊ぶこととは、「目的を定めない自由な探索」である。最近、遊んでるかな？目的を考えずに、ただやりたいだけでやってることってあったっけな？ってちょっと不安になった。## 「わからない」から始めよう「わからない」から始めるしかない。未だに分からないことだらけなんだけど、「わからない」空白を埋め続けていけば、自分の地図が出来てくるはずと信じて埋め続けよう。## 「SMART」な目標### Specific 具体的例えば、「Erlangを学びたい」ではなく、「Erlangを使って、動的にコンテンツを生成するWebサーバを作るたい」など具体的にすること。### Measurable 測定可能どうしたら、いつ何を成し遂げたとわかる？### Achievable 達成可能性達成不可能な目標や目的は目指しても、ストレスになるだけである。次の目標は、「今」自分がいる位置から見て達成可能なものであること。「目標ってね、高すぎるとダメなんですよ。高く持つのは夢なんですよね」っていう言葉を思い出した。&gt; 初めから何時間練習しようと思って練習してるわけじゃない。自分の中に、１打席、１球に対しての目標があって、それをクリアするために練習している。一つクリアすれば、次の課題、それもクリアすればまた次の課題がある。だからこそ、集中して続けていられる。一流の習慣術　イチローとマー君が実践する「自分力」の育て方　の奥村さんの講演を聞いてきた – じょーぶん部  ### Relevant 適切それは自分にとって本当に意味のあることだろうか？### Time-boxed 期限を定める自分で期限を定める必要がある。自分に対して、小さな区切りをいくつも設ける。「私がいつまでに何を行う」と明言する。実現可能な細かい目標を立てるのってなかなか苦手である。ちょっと調子に乗るぐらい、細かく目標を達成いけるようにしたい。## 今日の積読本消化     リファクタリング・ウェットウェア ―達人プログラマーの思考法と学習法 posted with カエレバ   Andy Hunt オライリージャパン 2009-04-27       Amazonで購入  楽天市場で購入     
---title: "結婚式余興ムービー、あなたは何で作る？Keynote, iMovie, Motion5, FinalCutProを結婚式余興のムービー作成に使ってみて"date: 2014-08-19T07:45:00+09:00comments: truecategory: ['Movie']tags: ["iMovie","Movie"]published: trueslug: imovie-motion5-finalcutpro---友人の結婚式余興や、プロフィールムービー作成を頼まれた際、Keynote, iMovie, Motion5, FinalCutPro(試用版)を使ってみて、なんとなくそれぞれの感覚をつかめたのでまとめておく。{{% googleadsense %}}## KeynoteKeynoteといえば、プレゼンをするときに使うのでは？と思われるかも知れないが、写真(静止画)のスライドショーを作る用途においては、結構重宝する。発表スライドを作る要領で、写真を貼っていったり、アニメーションの機能を利用して写真を動かす事ができる。写真(静止画)メインで作るプロフィールムービーなんかは、Keynoteでも十分できる。## iMovieMacで動画編集と言えば、iMovieだろう。動画編集ソフトだけあって、まずはざっくり作りたい場合にも、まずは、こちらで作成するのが、手軽、簡単。ただし、ちょっとでも凝ったことをしたいと思った場合、とたんにハマるケースが多い。例えば、任意の場所に文字を入れるなどは簡単に出来そうだが、iMovieの機能では出来ない。## Motion5iMovieだけではちょっと物足りないって人向けには、Motion5はオススメ。もちろん、任意の場所にコメントを付けることができる。ただし、Motion5だけでムービーを完成させるのではなく、ベースはiMovieを利用し、力を入れたい部分だけMotion5を使うのがよいかと思う。なぜならば、Motion5では自由度が高すぎて、全体の流れを作るのには適してない。(もちろん、スキルがあれば出来ると思うが、趣味のレベルだとなかなか厳しい)また、Motion5ではカメラの要素があるため、3Dの表現が可能です。3## FinalCutProさすが値段が張るだけあって、なんでも出来る感が凄いです。その反面、どこを触ったらやりたいことが実現出来るのかがちょっとわかりにくい感じでした。でも、iMovieの上位版という感じで、iMovieで出来ないことはすべてカバーしてくれました。体験版があるので、ちょっと使ってみたいなという人は、まずは体験版を利用してみるのがいいです。ちょいちょいイケてるサンプルが内蔵されているので、それを使えばプロっぽい演出も可能になりそう。## まとめ予算に余裕があってしょうがないって人は、初めからFinalCutProを買ってください。間違いないです。そうでない人は、iMovieでしょう。iMovieだと、他の人とおんなじようなムービーしかできないから嫌だ！って人は、Motion5をオススメします。
---title: "日本で一番標高の高い場所にある「野外映画館」 -星空の映画祭2014-"date: 2014-08-24T22:04:00+09:00comments: truecategory: ['Travel']tags: ["Movie","travel","星空の映画祭"]published: trueslug: cinema-under-the-starsimg: "https://farm4.staticflickr.com/3879/14832139400_0ef597a0be.jpg"---土砂降りの雨の中、野外スクリーンで観る映画は初めてだった。{{% googleadsense %}}## 星空の映画祭とは？星空の映画祭 オフィシャルホームページ  &gt;**八ヶ岳の麓、長野県諏訪郡原村。****ここに夏の間だけ、星空の下に開館する映画館があります。**「星空の映画祭」は夏休みに長野県・原村の高原で野外で楽しむダイナミックかつロマンチックな映画祭。会場の八ヶ岳自然文化園・野外ステージには35mmフィルムの映写機と最新のデジタルシネマ機を完備。大自然に囲まれた「野外映画館」としては日本で一番標高の高い場所にあるのです。真夏の夜にだけ開催される、星空に手が届きそうな秘密の場所。ちょっとのぞいてみませんか？## 8/15(金) 雨の中の上映スクリーンが外にあるということで、映像と音響にはそこまで期待していなかった。しかし、予告編が始まった瞬間、普段観る映画館とかわりないことに驚いた。天候は、あいにくの雨だったが、テント下の場所を確保できて、比較的快適に観ることができた。(とはいえ、半分以上の人はカッパを着て雨にあたりながら鑑賞していた)上映中に映写機に虫が移りこんで、画面の下から上への動いていったのは、野外ならではのハプニングであろう。そのときばかりは、会場からクスクスと笑い声が聞こえてきた。また、野外ならではといえば、静かなシーンのときには、雨の音が聞こえてくるのも不思議な気分だった。野外ステージの周りには、ポップコーンを売ってる店やお酒を売ってる店が何店舗か出ていた。ポップコーンを買おうと思ったら、機械の不備で豆が彈けないとのこと。土砂降りの雨の中、野外スクリーンで観る映画は初めてだったので思い出には残りそうだが、次こそは、満点の星空の下で見てみたい。##「LIFE!」8/15(金)の上映作品は、「LIFE!」だった。空想と現実が交差して、どこまでが現実で、どこまでが空想かわからなくなる。次の展開がどうなるか気になりながら、ときにはくすくすと笑いが出てくる。いろんなところに冒険に出かけるのだが、見ていて単純に旅がしてみたいなと思ってくる。自分は、このままでいいんだろうか？って思わせてくれる作品だった。     LIFE!/ライフ [DVD] posted with カエレバ   ベン・スティラー 20世紀フォックス・ホーム・エンターテイメント・ジャパン 2014-08-02       Amazonで購入  楽天市場で購入     ## 注意点- 結構暗い中を歩くので、足元を照らすライトがあると便利だった。- 山の中なので天候も変わりやすい。雨具は必須であった。- レジャーシートがあると、寝転びながら映画鑑賞出来そう## 次回こそ土砂降りの雨の中、野外スクリーンで観る映画は初めてだったので思い出には残りそうだが、 次こそは、満点の星空の下で見てみたい。
---title: "初めてのSWEET LOVE SHOWER 2014"date: 2014-09-02T00:44:00+09:00comments: truecategory: ['Travel','Music']tags: ["music", "夏フェス","SWEET LOVE SHOWER"]published: trueslug: sweet-love-shower-2014img: "https://farm4.staticflickr.com/3902/14930345090_7fd8e45761_c.jpg"---## 初めてのSLS夜行バスに揺られること６時間。雨がぱらつく山中湖に到着した。バスから降りた瞬間、少し肌寒く、夏の終わりを感じた。が、まだまだ夏を終わらせている場合ではない。お夏の足に噛り付くべく、SWEET LOVE SHOWER2014に行ってきました！！{{% googleadsense %}}入場ゲートをくぐるとそこは、一面の田んぼ。いや違った、泥だらけの通路だった。スニーカーだとあっというまに浸水してきそうだったので、こういう日は登山靴みたいな靴の方がいいね。## 初めて中の人を見たアーティスト今回初めてみたアーティストが多かった。- Fear, and Loathing in Las Vegas- Man with a Mission- the telephones- Dragon Ash- YOUR SONG IS GOODFear, and Loathing in Las Vegas は、完全に初見だった。一番小さいステージにもかかわらず、むちゃくちゃ人が集まっていて、楽しそうな周りの反応に合わせて自分も楽しくなってきた。ライブで観るなら楽しくてよいかも。。(家に帰って聞き返しても、どの曲だったか分からないｗ) ツーステップの練習をせねば。後は、the telephonesも初見。前評判通り、ディスコディスコ楽しかった。あとほかには、何ディスコがあるんだろう？なんだかんだ、Dragon Ashも観るのは初めて。昔懐かしい曲もやってたけど、考えたらあの人たち何歳なんだろう？って疑問になった。YOUR SONG IS GOOD は、最後の方しか見れなかったけど、いい感じだった。いい感じ過ぎて、ライブが終わったかと思ったぐらい。       OUT posted with カエレバ   YOUR SONG IS GOOD カクバリズム 2013-11-20       Amazonで購入  楽天市場で購入     ## その他見たアーティスト- 赤色のグリッター- SiM- coldrain- くるり- [Alexandros]- THE BAWDIESTHE BAWDIESのHOTDOGの下りが今回も意味不明で面白かった。マッチ売りの少女ってなんやねん。だれかさんは、相変わらず、ようぺにお熱でした。## ラッシュガード(ラッシュパーカー)はスゴイ今回、ほとんど日焼け止めなしにもかかわらず、ラッシュガードのおかげで首と腕の日焼けには悩まされませんでした。ただし、顔には被害が。。。。オススメしてくれてありがとう。さて、復習しよう。
---title: "YouTube埋め込みタグをレスポンシブ化する"date: 2014-09-03T23:26:00+09:00comments: truecategory: ['Tech']tags: ["youtube", "design", "jekyll"]published: true slug: youtube-responsive---せっかくのレスポンシブデザインなので、YouTubeの埋め込みもレスポンシブ化してみた。{{% googleadsense %}}### main.css```.youtubeWrapper{position: relative ;margin-top: 1.2em ;margin-bottom: 1.2em ;padding-top: 69px ;padding-bottom: 50% ;overflow: hidden ;}.youtubeWrapper iframe {position: absolute ;top: 0 ;left: 0 ;height: 100% ;width: 100% ;}```### default.html```  ```以下は、レスポンシブ化されたYouTube埋め込みタグです。  ## 参考[「埋め込み動画のサイズをレスポンシブにする方法」 | 有限会社ワイバーン](http://www.wivern.com/report20130802.html)
---title: "ぐだぐだ言ってないでコードを書けよ、自分！ - 「Webサービスのつくり方」"date: 2014-09-04T22:43:00+09:00comments: truecategory: ['Tech']tags: ['book', 'WebService']published: true slug: create-web-serviceimg: "https://images-na.ssl-images-amazon.com/images/I/51jdbeo%2BrmL._SL160_.jpg"---個人的に,ちょうど「Webサービスのつくり方」ってキーワードがアツかったので読んでみた。心に響いた部分を抜粋する。読んでいたら、何かWebサービスを作りたくなった。     Webサービスのつくり方 ~「新しい」を生み出すための33のエッセイ (Software Design plus) posted with カエレバ   和田 裕介 技術評論社 2012-11-20       Amazonで購入  楽天市場で購入     {{% googleadsense %}}## ぐだぐだ言ってないでコードを書けよ、ハゲ Code / Riebart 「あれが欲しい」「これが欲しい」「このサービスをもっとこうしたほうがいい」と批判するのは簡単であり、自分のアイデアの方がすごいと自慢する場合もある。しかし、実現していない、カタチになっていないものにはあまり価値がない。「そこに1,000人いたとして、アイデアを思いつくのが100人、アイデアを実現するのが10人、アイデアで成功する人は1人。」アイデアを思いつく人はそもそも、少なく、アイデアをカタチにする人はもっと少ない。さらに、成功する人はごくわずかである。アイデアを思いついたら、手を動かしてコードを書くことで成功へのハードルに一歩近づくことができる。&gt;だけど最終的には、唯一重要なものは現実のコードと技術そのものだよ。向上心もなくコードも書こうとしない人でもコメントはできるし、こうするべきだとか、ああするべきだとか、そうしちゃいけないとかいうこともできるけど、結局はそういった声は問題にならない。唯一重要なものはコードなんだ。 リーナス・トーバルズ自分も、こんなWebサービスあったらいいのになぁとか、こういうことしたいのになぁとか思うことがあっても結局自分で作るまで至らないことが多い。ないのなら自分で作るエンジニアになりたい。## なければつくるwheels / jasleen_kaur&gt;車輪の再発明　・・・　ある目的を果たすためのライブラリや先行事例があるにもかかわらず、同じことを叶えるためについつい自分で作ってしまう行為。車輪の再発明は一般的には非効率だが、勉強のためならよいのではないか。既存の似たようなものを参考にできるため、学ぶことが多くある。「車輪の再開発はしないで車輪を利用したほうが早い。けれども、それがなかった場合は自分で作る」という精神は持ちたい。それができるだけの技術力は持ちたい。## 実装までにつくる「企画」の全て180/365² Sin ideas / anieto2k1. 哲学2. アイデア3. テーマ4. コンセプト5. 名前6. デザイン7. 内部設計### 1.哲学個々人が持っている、特定の興味に関する揺るがない気持ちのこと。この気持ちがサービスやアプリをつくる原動力になる。&gt;iPadを開発した人の根底にあるのはきっと、「音楽をもっと楽しみたい」という揺るがない気持ちがあったからであろう。そこに「なぜ音楽を楽しむ必要があるのか？」といった問いに対する論理的な理由は存在しなくてよい。『音楽が好きだから』もっと身近に楽しめていいじゃないかと、反論できればいいじゃないか。 (若干意訳)### 2.アイデア哲学を叶えるための個別の具体的なアイデア。「これが欲しい」という哲学から発想していくのがよい。個別の具体的なアイデアをたくさん持っておき、あとで吟味する。### 3.テーマ哲学をより具体的にした、勝負する領域のこと。アイデアを出していく過程で固まっていくことが多い。同じテーマの既存サービスやアプリを調査するために、テーマを定めることは重要である。iPadの場合は「携帯音楽プレイヤー」がテーマと言える。### 4.コンセプトテーマに沿った、アイデアを形成するための骨格のようなもの。何をつくるかを一言で表したもの。iPadの場合、コンセプトは以下のような文章になる。専用の音楽ソフトを経由して、所有する曲全てを持ち運べる携帯型音楽プレイヤーテーマ、コンセプト、アイデアと分けて考えることで、抽象的な内容から具体的な内容へと順を追って説明できるため、人に説明しやすくなる。### 5.名前プロダクトのサービス、アプリの名前を決めるのは非常に重要なことである。これからつくろうとしているものを自分で呼ぶのに名前がないと気持ちが入れない。これは、「名前重要」というフレーズもあるぐらいなので、実感できるであろう。### 6.デザイン全体のディテールを詳細に決めていく作業。コンセプトやアイデアを洗練させていくと無駄なものが削ぎ落とされ、サービスやアプリに対する最低限の機能が抽出される。それらに対して、ユーザがどのように使っていくかを具体的なイラストなどを元に試行錯誤していく。### 7.内部設計内部的にどのように実現するかを設計していく。## やりたくなったこと- 何かWebサービスをつくる- Jekyll のプラグインをつくる- さくらVPSをもっと使い倒す- Railsのテストを勉強する読んだら自然と何かをつくりたくなる、やりたくなる本でした。なんか作りたいんだけど・・・って人は一度読んでみたらどうだろうか？## 今日の積読本消化     Webサービスのつくり方 ~「新しい」を生み出すための33のエッセイ (Software Design plus) posted with カエレバ   和田 裕介 技術評論社 2012-11-20       Amazonで購入  楽天市場で購入       ## 参考- [「Webサービスのつくり方」 のつくり方](http://www.slideshare.net/yusukebe/web-16710062)- [個人で出来るWebサービスの作り方(YAPC::ASIA 2013) // Speaker Deck](https://speakerdeck.com/koba04/ge-ren-dechu-lai-ruwebsabisufalsezuo-rifang-yapc-asia-2013)
---title: "結婚式余興ムービー「ドミノでええねん」16,000個のお祝いドミノ倒し"date: 2014-09-06T10:25:00+09:00comments: truecategory: ['Movie']tags: ['domino','結婚式余興', 'Movie', 'FCPX']published: trueimg: "https://farm6.staticflickr.com/5552/15070575427_884d9c6084_s.jpg"slug: domino-yokyo---2014/08/03 友人の結婚式余興に、ドミノ倒しでお祝いの気持ちを伝えました!!今回も大変でした。{{% googleadsense %}}ドミノ倒しなんてやったことがなく、手探りで進めたけど、最終的には結婚する二人へのお祝いの気持ちはもちろんのこと、自分たちもなんだかんだ楽しみながら作成することができた。所要時間は、16時間の二日がかり。最終的には14人で作りました！自分たちが作ったものを、会場の人に見てもらえる、反応してもらえるのってやっぱり嬉しい。いい経験になりました。ありがとう。ドミノを使って、余興を考えている人にとってちょっとでも参考になればと思い残しておきます。## 作業内容- 基本設計 どんなドミノを作るか- ドミノ個数見積もり だいたいどのぐらいのドミノが必要か- 会場を押さえる- ギミック作成 - ドミノを「日本ドミノ協会」から借りる- ドミノ並べ- ドミノ倒し　映像を撮る- 編集・アテレコ- DVD作成## 基本設計　どんなドミノを作るかこの動画を参考にさせてもらいました。  こんな感じで、全体図を描いてみた。## ドミノ個数見積もりどのぐらいのドミノが必要なのか。この計算が難しかったです。まず、日本ドミノ協会でドミノを借りることが決まっていたので、そこで借りることができる色と、作りたいものをイメージして、レンタルするドミノの個数を見積もっていった。ドミノの個数は、はじめ見当がつかなかった。見当がつかないなりにどうしたかというと、実際にある程度並べてみて、どのぐらいの個数がいるか推測したり、Blenderというソフトを用いて、何個使えば形を表現できるか計算した。  ### Blenderによるシミュレーション    ## ドミノ発注作りたいものをイメージして、ドミノの個数を見積もった後は、ドミノの発注を行なった。ドミノの貸出を行なっているところは、「日本ドミノ協会」が有名どころだったため、この日本ドミノ協会にメールで依頼した。1個1円で、2000個単位で貸出を行なっている。[日本ドミノ協会](http://www.domino.or.jp/)[ドミノ牌の貸し出しにつきまして](http://www.domino.or.jp/domi-Rental.htm)## ドミノ作成## よかったこと- Blenderでシミュレーション図を作ってみたのでイメージはつかめた- 本番時は一回外周を作ってみて、判断する時間を入れた## 困った点・問題点 - 文字の部分はだいたいでなんとかなるかな？と思っていたが、ちゃんと設計しないといけなかった。- 最後の最後まで個数の計算ができなかった。## 次回やりたいこと- Blenderでのシミュレーションをもうちょっとちゃんとしたいたまにテレビで見るドミノ倒し企画がいかに大変かを身を持って体感できた。余興をする度に、何かしらできることが増える気がする。## ドミノを試してみるのなら感覚を掴むためにも、まずはどんなもんかを実際に試してみるのが1番でした。自分たちは、Amazonでドミノ倒しキットを買って試しました。     日本ドミノ協会公認 ドミノ牌90 posted with カエレバ    ハナヤマ        Amazon  楽天市場     
---title: "福井-大阪-名古屋-東京。拠点が離れている中での結婚式余興作成"date: 2014-09-28T22:11:00+09:00comments: truecategory: ['Movie']tags: ['Movie', '結婚式余興', 'iMovie', 'Motion5']published: trueimg: "https://farm6.staticflickr.com/5598/15432488581_468bd350f1_s.jpg"slug: baseball-club-yokyo---2014/09/27 高校野球部時代の友人の結婚披露宴に参加してきました。余興の動画作成に携わったのでそのときの備忘録を残しておきます。今回大変だったことは、作成するメンバが福井-大阪-名古屋-東京と離れていたことであった。当日まで、「ぽかーん」とする来賓者の顔しかイメージできなかったので、いやぁ、なんとかなって本当によかった。## 福井-大阪-名古屋-東京間での余興の動画作成余興を作成するメンバが、福井、東京、名古屋、大阪と離れていた。そのため、なかなか集まることも出来ず、集まったとしてもなかなか思うように進めることが出来なかった。## 反省点・困った点### 1. 方針・思想の共有が出来ていなかった何回か集まって話はしたみたいだが、どういう方針でやろうとしているのかがわからなかった。議事録、思いついたアイデアを共有することって大事だなって感じた。### 2. 通信端末が通信制限を受けて、本番直前に確認できてもらない事案が発生離れてるため、比較的大きいサイズの動画をやりとりしている中で、通信端末の速度制限を食らってしまった。速度制限を受けた後は、周りに確認してもらえずかなり不安であった。残りの容量を考えながら作業すべきだった。### 3. 迅速なフィードバックをもらいながら作成することが出来なかった作成する人と、確認する人が離れているため、意見をもらって修正するにしても、修正する -&gt; ファイルに書き出す -&gt; ファイルを小さく変換する -&gt; OneDrive or Lineにアップロードする -&gt; 意見をもらう。という工程を踏まないといけなかった。これがつらい。。まるで、オフショア開発をやってる気持ちになった。{{% googleadsense %}}### 良かった点・頑張った点1. 同期が体を張ってくれた笑。(これがなによりもよかった)2. 数名いるときに、カタチを作った3. Motion5のマッチムーブと、効果をちょっと理解した。	なによりも、変な衣装を着ながら、体を張ってロケハンしてきてくれた同期のおかげです。なかなか集まれることができないと分かっていたため、誰かがいる間にある程度の形を作れたのも大きかった。完全に一人で作り始めても、絶対間に合わなかったと思う。## 使ったソフト・アプリケーション- iMovie(メイン動画編集用)- Motion5(効果作成)- PhotoShop(画像切り抜き)- iPhoneデフォルト音声メモアプリ(声吹き込み)- OneDrive(動画共有)- Dropbox(動画共有)### iMovie前回の余興作成のときは、Final Cut Proの体験版を使えたので音声とか、文字入れとか楽だったが、今回は、iMovieでやりずらい。。お金出して、Final Cut Proを買おうと思うぐらい悩みました。### Motion5ある固定のオブジェクトを追尾する「マッチムーブ」とか、爆発の効果など初めて使ってみました。使いこなすまでがなかなか難しい。### OneDrive動画共有のサービスとして利用した。最初から、15GBのストレージとして使えるのでかなり便利です。	以下のリンクから登録してもらえれば、0.5GBの無料ストレージがついてきます。(私にも0.5GB付与されるのでぜひ！！)[https://onedrive.live.com/?invref=30a45f1e53a7f475&amp;invsrc=90](https://onedrive.live.com/?invref=30a45f1e53a7f475&amp;invsrc=90)## 感想面白いものを作ろうとしても、何が面白いのかわからない。効果のひとつひとつを取ってみれば、iMovie,Motion5で実現できるのだけれど、どうやったらつなげて面白くなるのがわからない。プログラムもそうだけど、映像を作るのもそんな気がした。  一つ一つのやり方はわかるけど、繋げて形にするってところまでには、大きな壁があると思ってる。一つ一つに分解すれば、漫画だって、線の集合だし、ブログラムだって、関数の集合体、映画だって、フレームの集まり。でも、誰もが繫げて形に出来るわけではない。 — めがにい (@meganii) September 8, 2014 あとは、毎回思うけど、「誰かのために、必死でやらないと技術って身につかないな」ってこと。依頼してくれた人のために、締め切りまでに必死で、みんなで協力して、なんとかいいものを作ろうとしてはじめて技術って身につく。結婚式余興の動画作成を通じて、少なくとも、PhotoShop, iMovie, Motion5の技術が身についてきてる気がします笑。本業の仕事でも、一緒だなと思った。お客さんのために、納期までに必死で、みんなと協力していいものを作ろうする中で、技術ってみにつくんだろうな。精進します。
---title: "参加者の発言を促すファシリテーターの技術 〜ザ・ファシリテーター〜"date: 2014-10-04T17:18:00+09:00comments: truecategory: ['Art']tags: ['book', 'ファシリテーション']published: true slug: facilitation-skillimg: "https://images-na.ssl-images-amazon.com/images/I/516CBVX9JJL._SL160_.jpg"---なかなか読み進められないので、小出しにしてまとめることにする。まずは、ファシリテーターの発言を促す技術について。     ザ・ファシリテーター posted with カエレバ   森 時彦 ダイヤモンド社 2004-11-12       Amazonで購入  楽天市場で購入     {{% googleadsense %}}## ファシリテーターに必要なスキルファシリテーターにとって、フェアであることは大切である。発言を記録しているだけでなく、時には反対の立場に立って、異なる視点から発言を促すことも必要問題の性質やチームの反応に応じて、柔軟にツールを使い分ける力が、ファシリテーターには要求される。参加者の自由な発想を促し、グループ思考を助けるような生きた使い方を促すべきである。## 発言を促す技術### 質問のポケットをたくさんもつこと参加者が具体的なイメージを描けるような問いかけをする力があるとよい。- 全体を意識される質問- 分散(多様性)を意識させる質問- 自分たちがコントロールできるものとそうでないものを意識させる質問- 時間軸を意識させる質問- 基準を意識させる質問### 全体を意識させる全体を意識させるとは、自分の役割だけでなく、それがシステム全体でどういう役割を果たしているかを考えさせること。例えば、自分たちが目標だと思っていることは、何かの手段ではないかとツリーをたどって描いてみるなど。自分たちの視点が狭い範囲になっていないか？視点をより広くするための質問。### 分散(多様性)を意識させるほとんどの人が平均値で話をしている。例えば、『女性の方が男性より地図が読めない』など。逆に特別なケースを捉えて、議論している場合もある。このように、人間の意識は、平均値や、特別なケースをベースに作られている場合が多いため、『分散はどうなっていますか？』や、『いつもそうですか？』という質問が、効果的な呼び水になる。### 自分たちがコントロールできるものとそうでないものを意識させる自分たちがコントロールできないものはどうしようもない。自分たちがコントロールできるものに焦点を当てる。### 時間軸を意識させる- 「昔からそうですか？」-  「今回だけではないですか？」- 「繰り返し起こることですか？」- 「将来はどうなっていますか？」データを見るときも、現時点でのスナップショットなのか、時間的な経過が含まれているのかを意識させる。### 基準を意識させる- 「ベンチマークはあるのか」- 「あるとすれば、それは一定のものか」- 「なければ、それをつくるべきではないか」## インタビューのテクニック相手の緊張をほぐすような簡単な質問を何度か繰り返してから、次第に革新に迫る質問を繰り出していく。## 感想このような発言を促す質問があるなーと知っていても、実際に会議や打ち合わせのときには忘れてしまう。意識せずに出せるように、練習していきたい。## 参考     ザ・ファシリテーター posted with カエレバ   森 時彦 ダイヤモンド社 2004-11-12       Amazonで購入  楽天市場で購入     
---title: "知のグループウェアとしてのファシリテーション〜ザ・ファシリテーター〜"date: 2014-10-09T00:40:00+09:00comments: truecategory: ['Art']tags: ['book','ファシリテーション']published: true slug: knowledge-groupware---**『空中戦』を回避しながら、『論理を構造化』して『可視化』して共有する**論を可視化することで、常に論理の構造が意識される。また、思考プロセスを個人の頭の外に出すことができる。そうやって、思考プロセスを外部化すれば、グループで知恵を合わせて考えることができる。また、例えば、実現の難しさと達成された時の効果の大きさを縦軸と横軸にとり、マトリックスで示すと、言葉だけでは難しい二次元思考(2つの軸を同時に考えること)をグループで行うことができる。{{% googleadsense %}}本書の中で出てきた、知のグループウェアとしてのグループウェアを紹介する。     ザ・ファシリテーター posted with カエレバ   森 時彦 ダイヤモンド社 2004-11-12       Amazonで購入  楽天市場で購入     ## ホワイトボード活用### パーキングエリア(PA)ブレーンストーミングでは、アイディアに対する批判はご法度だが、往々にして批判は出てくる。そのような発言を、いちいちとがめるのではなく、PAと題した紙を一枚用意してすばやく書き留め、話を本筋に戻す。みんなに見えるようにPAを張り出しておくところがポイントである。これによって、多少本筋を外した意見にも、記録することで敬意を払う。また、同じ議論が蒸し返されるのを防ぐ効能もある。 ## プロセスマッピング客観的に自分たちのプロセスを見直すのに役立つファシリテーション・ツールである。現在のプロセスを明らかにして、その問題点を発見したり、新しいプロセスを生み出すのに効果的である。困ったときには、プロセスマッピング｜ファシリテーションの道具箱　森時彦｜ダイヤモンド・オンライン ◎プロセスマッピングの例   ...  ## SWOT分析周りの環境要因としての機会と脅威、内部要因としての当社の強み・弱点を挙げる。SWOTは、機械と脅威という環境要因と、自社の強みと弱点という内部要因を組み合わせを作成する簡単なエクセサイズだが、書かれた言葉以上に、問題意識が深く共有化される。同じことでも外部の人間から言われたのでは、反発が生まれるかもしれないが、自分たちが考えれば動機が内存化する。この枠組の中で関係者が共同作業をし、作成する過程が重要である。【決定版】SWOT分析のやり方｜事業の成功要因と方策を導き出すための手順 | カイロスのマーケティングブログ  ## ゴール・ツリー大目標を起点に、それを達成するための手段としての中・小目標を枝分かれさせながらツリー上に描いていく手法。ツリー構造は、目的と手段、原因と結果を明確に可視化するパワフルな道具。 PMO（プロジェクトマネジメントオフィス）を生かす - 第58回 「見える化ツリー」を作る3つのステップ：ITpro  図●因果関係に基づいて指標をツリー化した例 [画像のクリックで拡大表示] ...  ### マインドマッピング大きな紙の真ん中に中心的な概念を書き、その周りに関連することを書き出してくもの。二次元的に書きだすという視覚的な効果も手伝って、箇条書きにするより、発想を刺激する効果が期待できる。さらに、後で関連性や重要度を議論するときにも、空間を利用して図示できる。発散と集約の両方のプロセスに効果を発揮する可視化手法である。     新版 ザ・マインドマップ(R) posted with カエレバ   トニー・ブザン,バリー・ブザン ダイヤモンド社 2013-02-16       Amazonで購入  楽天市場で購入     ## 重みつき多重投票まずある項目に対して、カードに書いて貼ってもらう。その後、赤5点、青3点、黄色1点など一人ひとりが3つの重みつきシールを気に入ったカードに投票し、多数決で決める。アイディアを出し十分議論したら、それ以上むやみに時間を費やさずに、多重投票で決定してどんどん前に進む小学校のころから、投票で決める方法は知っているが社会人になってからは意外と活用されない。 ## 感想今年も1年、会議の練習をする機会をもらえたので、良さそうだと思うものについてはどんどん試してみたい。練習なので、失敗してもいいよね。
---title: "Jekyllでページ分割する -pagenation-"date: 2014-10-21T07:37:00+09:00comments: truecategory: ['Tech']tags: ['jekyll']published: true slug: jekyll-pagenation---## JekyllでやりたいことJekyllを使っていて、トップページにすべての記事が出てくるのもうっとおしい。トップページの表示記事を5〜10件にして、そのほかの記事を「次へ」、「戻る」で遷移させたい。{{% googleadsense %}}## 解決策**ページネーションを利用する。**### 1. _config.ymlに以下の文言を追加する```paginate: 10```何件で分割するかを pagenate に指定する。### 2. index.htmlの site.posts としている部分を paginator.postsに変更する```html------    Posts        {{ "{% for post in paginator.posts " }}%}           {{ post.date | date: "%b %-d, %Y" }}      {{ post.title }}      {{ "{% for tag in post.tags " }}%}      {{ tag }}      {{ "{% endfor " }}%}      {% raw %} {% if post.description %}{{ post.description }}{% else %}{{ post.content | strip_html | strip_newlines | truncate: 120 }}{% endif %} {% endraw %}         {{ "{% endfor " }}%}      subscribe via RSS  ```## 覚えたliquidタグ### for文の中でのカウンタ`forloop.index`### liquidタグのエスケープ- `{{ "{% raw " }}%}{{ "{% endraw " }}%}`- rowタグそのもののエスケープには、｛｛ ", " ｝｝を利用する (利用する際は、全角を半角に変換してください)liquidタグを含んだhtmlをシンタックスハイライトを効かせるには、以下のとおり、rawタグで括る```{{ "{% raw %" }}}liquidタグを含むHTML{{ "{% endraw %" }}}```## 参考ページネーション  
---title: "JekyllでPygmentsを使ってのシンタックスハイライト"date: 2014-10-29T23:15:00+09:00comments: truecategory: ['Tech']tags: ['jekyll','blog']published: trueslug: pjekyll-pygments---シンタックスハイライトに、Pygmentsを使いたくなったので変更する。{{% googleadsense %}}### 1.`pygments`をインストールする。```bashpip install pygments ```### 2. 以下のコマンドでcssを生成する。```bashpygmentize -a .highlight -S monokai -f html &gt; css/monokai.css```### 3. Gemfileにpygmentsを追加```gem 'pygments.rb'```### 4. _config.ymlに、以下の記載を追加する。```yamlhighlighter: pygments```### 5. デプロイする。## こんなかんじになりました```Rubydef hoge  puts "test"end```## 参考- [Pygments 利用ノート](http://www.geocities.jp/showa_yojyo/note/python-pygments.html)- [Jekyll と pygments.rb で Auto-regeneration が遅い - Qiita](http://qiita.com/tachesimazzoca/items/e175035e2e8e5369029e)- [ブログをGitHubに移行しました。 | blog.makitasako.com](http://blog.makitasako.com/posts/2013-04-13-makingmyblog/)
---title: "キャリア計画を立てよう！ How Google Works-私たちの働き方とマネジメント-"date: 2014-10-30T22:52:00+09:00comments: truecategory: ['Life']tags: ['book']published: trueslug: how-google-works---     How Google Works posted with カエレバ   エリック・シュミット,ジョナサン・ローゼンバーグ,アラン・イーグル,ラリー・ペイジ 日本経済新聞出版社 2014-10-17       Amazonで購入  楽天市場で購入     2014-10-18 - naoyaのはてなダイアリー この3つを読んで何も感じることがないようなら、あなたにはエンジニアにとって良いなにがしを構築する素養はないと思うし、本なんて読んでられるかというのには、その程度のことにも時間を割けないならそもそも諦め ...  &gt; この3つを読んで何も感じることがないようなら、あなたにはエンジニアにとって良いなにがしを構築する素養はないと思うし、本なんて読んでられるかというのには、その程度のことにも時間を割けないならそもそも諦めろとしか言えない。たまたまTwitterのTLで見かけたので、読んでみた。## この本から得たいことは？- 働き方の指針を得る- 今後の5年間をどんなものにするのか？- どんな人材になれば通用するのか？- チームの作り方経営者側に向けたメッセージが多いが、逆に自分がどんなところで働きたいか？という目線で、まずはキャリアについての章に注目した。{% include ga.html%}## キャリアはサーフィンのように Surfing Kommetjie / FRAMES OF MIND ~ Chris Preen**一番大切なのは、正しい業界を選ぶことだ。**なぜなら、長いキャリア人生のなかでは何度か転職する可能性が高いが、別の業界に移るのはとても難しいからである。業界はサーフィンする場所、企業は波だ。常に最大かつ最高の波が来る場所に身を置くようにしよう。## キャリア計画を立てよう Good Job Smiley Face Inspirational Quotes Qiqi Emma January 18, 20105 / stevendepolo### 1. 現在ではなく5年後の自分にとって理想の仕事を考える- どこで、何をしていたいか- いくら稼いでいたいか- 仕事内容を書き出す- 例えば、その仕事を転職サイトに載せるとしたら、どんな説明になるだろうか？### 2. 時計の針を4~5年進めてみる自分がその理想の仕事に就いている。  その時点の経歴書は、どんな内容になっているだろうか？その理想の職につくために、その間あなたは何をしたのだろう。### 3. 理想の仕事を念頭に置きながら、自分の強みと弱みを評価してみるその仕事にたどりつくために、どんなスキルを磨く必要があるか？  どうすればその仕事に就けるのか。どんなトレーニングや実務経験が必要だろうか？  ここでは、他の人からのインプットが必要である。同僚、上司の意見を聞いてみる。**「目的地がどこかわからないときは、注意したほうがいい。おそらくそこに辿りつけないから」**最近目的地が、分からなくなっている。どこへ向かっているのだろう？どこへ向かっていっているのだろう？## 統計学を学ぶ Statistics about statistics about... / HikingArtist.com&gt; インターネットの世紀で最高に魅力的な仕事には、必ず統計学が必要になる。データは21世紀の剣であり、それをつかいこなせる者がサムライだ。「個人にとって間違いのない選択肢は、値下がりしているモノと補完性のある分野で専門性を磨くこと」どんな業界で働いていようとも、適切なデータを適切に処理することが、正しい意思決定にどのように役立つかを理解する。数字に強くなくても、懸命な選択のための数学の使い方を習得することは可能である。## 資料を読むどんな分野でも、他の人々に一歩先んじる最高かつ最も簡単な方法は、それについて知識を深めることだ。最適な方法は、文献を読むことだ。同じような価値観を持つ優秀な人達とサークルを立ち上げ、面白い本記事の情報を交換しよう。## エレベーター・ピッチを準備しよう elevator / Gideon Tsangエレベーター・ピッチとは、エレベーターで偉い人(CEO,上司の上司)にあったときに、30秒程度で満足してもらえる内容を答えるというもの。エレベーター・ピッチでは以下の内容について自信を持って話せるようになるべきだ。- 今取り組んでいる仕事- その根底にある技術アイデア- 想定される成果(特に、顧客ににとってのメリット)- 会社全体の事業でどのような役割を果たすか？求職者の人も、- 自分がどんな仕事をしたいか- どのようなインパクト(顧客や会社にとってのメリット)を生み出せるかといった、他の誰でもなく、あなたにしか語れない内容を語れるようにしよう。## 情熱と仕事を結びつける Autumn Tree Farm and road / The Knowles Gallery&gt; 自分の情熱と仕事を結びつけることができるのは、究極の贅沢です。そして間違いなく幸せにつながるみちでもあります。　　シェリル・サンドバーグでも、大抵の人は自分の情熱が何かわからないか、わかっていても手がとどかない。社会に出る時点では、情熱どうこうより、単に仕事があるだけで満足かもしれない。そしてキャリアをつんでいくうちに、そこがおもっていたような刺激的な舞台ではないことに気づくのだ。おそらく情熱と満足のいく仕事の、どちらも見つけられずに。すべてを捨てて、やり直すこともできなくもないが、もっと堅実なやり方もある。それは、軌道修正すること。「生まれ変わったら就きたい仕事」に近く、それでいて現在のキャリアパスからでも手の届く「5年後の理想の仕事」を考え、ゴールに設定する。適切なゴールを設定するという簡単な作業によってキャリアを好転させることができる。  "歳をとるのを苦に思わない。自分が憧れてた人の当時の年齢に近づくことができるから。自分がその人自身になることはできない。でも、その人に憧れた部分っていうのは真似できる。歳をとりながら、方向修正をしながらその憧れ部分を目指して近づいていくのって楽しくない？" なるほどって思った。 — めがにい (@meganii) August 28, 2011 5年前憧れてた人に近づけてるのかな？軌道修正しながら、近づいていけてるのかな？分からないなら分からないなりに、考えて動き続けるようにしたい。
---title: "未来を形作る5つの要因と32の要素"date: 2014-11-03T20:15:00+09:00comments: truecategory: ['Life']tags: ['book','WorkShift']published: trueslug: five-factor-work-shift---     ワーク・シフト　─孤独と貧困から自由になる働き方の未来図&lt;2025&gt; posted with カエレバ   リンダ グラットン プレジデント社 2012-09-28       Amazonで購入  楽天市場で購入     {{% googleadsense %}}## 未来を形づくる5ちの要因 32の要素### 要因1 テクノロジーの進化1. テクノロジーが飛躍的に発展する2. 世界の50億人がインターネットで結ばれる3. 地球上のいたるところで「クラウド」を利用できるようになる4. 生産性が向上し続ける5. 「ソーシャルな」参加が活発になる6. 知識のデジタル化が進む7. メガ企業とミニ起業家が台頭する8. バーチャル空間で働き、「アバター」を利用することが当たり前になる9. 「人工知能アシスタント」が普及する10. テクノロジーが人間の労働者に取って代わる### 要因2 グローバル化の進展1. 24時間・週7日休まないグローバルな世界が出現した2. 新興国が台頭した3. 中国とインドの経済が目覚ましく成長した4. 倹約型イノベーションの道が開けた5. 新たな人材輩出大国が登場しつつある6. 世界中で都市化が進行する7. バブルの形成と崩壊が繰り返される8. 世界のさまざまな地域に貧困層が出現する### 要因3 人口構成の変化と長寿化1. Y世代の影響力が拡大する2. 寿命が長くなる3. ベビーブーム世代の一部が貧しい老後を迎える4. 国境を超えた移住が活発になる### 要因4 社会の変化1. 家族のあり方が変わる2. 自分を見つめなおす人が増える3. 女性の力が強くなる4. バランス重視の生き方を選ぶ男性が増える5. 大企業や政府に対する不信感が強まる6. 幸福感が弱まる7. 余暇時間が増える### 要因5 エネルギー・環境問題の深刻化1. エネルギー価格が上昇する2. 環境上の惨事が原因で住居を追われる人が現れる3. 持続可能性を重んじる文化が形成されはじめる## 自分の未来予想図を描く1. 不要な要素を捨てる2. 重要な要素に肉付けをする3. 足りない要素を探す4. 集めた要素を分類し直す5. 1つの図柄を見出す     ワーク・シフト　─孤独と貧困から自由になる働き方の未来図&lt;2025&gt; posted with カエレバ   リンダ グラットン プレジデント社 2012-09-28       Amazonで購入  楽天市場で購入     
---title: "ゼネラリストから「連続スペシャリスト」へ"date: 2014-11-03T15:25:00+09:00comments: truecategory: ['Life']tags: ['book','WorkShift']published: trueslug: specialist-work-shift---**2025年、私たちはどんな風に働いているのだろうか？「漠然と迎える未来」には孤独で貧困な人生が待ち受け、「主体的に築く未来」には自由で創造的な人生がある。**本書の扉にこのようなコトバが書いてあった。     ワーク・シフト　─孤独と貧困から自由になる働き方の未来図&lt;2025&gt; posted with カエレバ   リンダ グラットン プレジデント社 2012-09-28       Amazonで購入  楽天市場で購入     ## 未来を形づくる5ちの要因 32の要素### 要因1 テクノロジーの進化1. テクノロジーが飛躍的に発展する2. 世界の50億人がインターネットで結ばれる3. 地球上のいたるところで「クラウド」を利用できるようになる4. 生産性が向上し続ける5. 「ソーシャルな」参加が活発になる6. 知識のデジタル化が進む7. メガ企業とミニ起業家が台頭する8. バーチャル空間で働き、「アバター」を利用することが当たり前になる9. 「人工知能アシスタント」が普及する10. テクノロジーが人間の労働者に取って代わる### 要因2 グローバル化の進展1. 24時間・週7日休まないグローバルな世界が出現した2. 新興国が台頭した3. 中国とインドの経済が目覚ましく成長した4. 倹約型イノベーションの道が開けた5. 新たな人材輩出大国が登場しつつある6. 世界中で都市化が進行する7. バブルの形成と崩壊が繰り返される8. 世界のさまざまな地域に貧困層が出現する### 要因3 人口構成の変化と長寿化1. Y世代の影響力が拡大する2. 寿命が長くなる3. ベビーブーム世代の一部が貧しい老後を迎える4. 国境を超えた移住が活発になる### 要因4 社会の変化1. 家族のあり方が変わる2. 自分を見つめなおす人が増える3. 女性の力が強くなる4. バランス重視の生き方を選ぶ男性が増える5. 大企業や政府に対する不信感が強まる6. 幸福感が弱まる7. 余暇時間が増える### 要因5 エネルギー・環境問題の深刻化1. エネルギー価格が上昇する2. 環境上の惨事が原因で住居を追われる人が現れる3. 持続可能性を重んじる文化が形成されはじめる## 自分の未来予想図を描く1. 不要な要素を捨てる2. 重要な要素に肉付けをする3. 足りない要素を探す4. 集めた要素を分類し直す5. 1つの図柄を見出す専門性の低いゼネラリストは、現状のサービスにとって変えられてしまう。&gt; 広く浅い知識しかもっていない「なんでも屋」のライバルは、オフィスの隣に座っている同僚や、インド企業で同じ仕事をしている人たちではなく、ウィキペディアやグーグルなど浅い知識や分析結果を手軽に提供するテクノロジである。「主体的に築く未来」をつくるには、どうするべきであろうか？自分自身の場合を考えた時、ゼネラリストなんて言葉にすればちょっとは、響きがいいかもしれないが、どんどん器用貧乏になっている気がする。自分には、専門技能って身に付いてきているのだろうか？そもそも、専門技能ってなんだろうか。自分の武器を探したいのだが、何を磨いていけばよいのか？{{% googleadsense %}}&gt; 未来の仕事の世界で生活できるかは、その時代に価値を生み出せる知的資本を築けるかどうかである。&gt; 同じ作業を何度も何度も繰り返して、技能や知識を血肉化できる1. ある技能がほかの技能より高い価値をもつのは、どういう場合なのかをよく考える(未来を予測するうえで重要)2. 未来の世界で具体的にどういう技能が価値を持つのかという予測を立てる未来を正確に言い当てることは不可能だが、働き方の未来を形づくる５つの要因に関する知識をもとに、根拠のある推測はできる3. 未来に価値をもちそうな技能を念頭に置きつつ、自分の好きなことを職業に選ぶ4. その分野で専門技能に磨きをかける5. ある分野に習熟した後も、移行と脱皮を繰り返してほかの分野に転身する覚悟を持ち続ける
---title: "[こつこつ勉強]統計学入門#1" date: 2014-11-04T23:02:00+09:00comments: truecategory: ['Study']tags: ['統計学']published: trueslug: statisticsimg: "https://images-na.ssl-images-amazon.com/images/I/41OfaN1i6qL._SL160_.jpg"---統計、統計と言われても全然ぴんと来ないので、こつこつ勉強し始めようかと思います。ネットを見てると、以下の本がおすすめされてたので、まずはざっと読んでみることにします。     完全独習 統計学入門 posted with カエレバ   小島 寛之 ダイヤモンド社 2006-09-29       Amazonで購入  楽天市場で購入          マンガでわかる統計学 posted with カエレバ   高橋 信,トレンドプロ オーム社 2004-07       Amazonで購入  楽天市場で購入     {{% googleadsense %}}## 度数分布表を作成する縮約・・・データとして並んでいるたくさんの数字を何かの基準で、整理整頓して意味のある情報だけを抽出する。頭に入れておく言葉- 階級- 階級値- 度数- 相対度数- 累積度数  ## 平均値とは何か？改めて、算術平均、相乗平均(幾何平均)、二乗平均、調和平均という平均を確認した。  ## 標準偏差標準偏差(Standard Deviation) S.D. 広がり・散らばりを評価する。    ## シャープレシオ金融の世界の指標として頭にいれておきたい。    ## 母平均  
---title: "AngularJSでFlickrの埋め込みタグを作成する"date: 2014-11-08T20:37:00+09:00comments: truecategory: ['Tech']tags: ['AngularJS']published: true slug: angular-flickr---ブログ用に自分のFlickrフォトストリームから画像を選択して、貼り付け用URLを作りたくなったので、AngularJSで作ってみた。[meganii.com/angularjs-flickr.html](http://meganii.com/angularjs-flickr.html)## 参考- [AngularJS — Superheroic JavaScript MVW Framework](https://angularjs.org/)- [AngularJS入門 (全12回) - プログラミングならドットインストール](http://dotinstall.com/lessons/basic_angularjs)- [daisy1754/angular-simple-demo-flickr-cat · GitHub](https://github.com/daisy1754/angular-simple-demo-flickr-cat)こういうときのドットインストールはとても便利。{{% googleadsense %}}### angularjs-flickr.html ```html                           Make Markdown URL for Flickr            Time:             Search                         My photos                                                                {{photo.title}}                                                                   Selected         {{markdown}}                    {{photo.title}}                                 ```## photo_contoroller.js```jsvar App = angular.module('FlickrPhotos', []);App.controller('PhotoCtrl', function RepoListCtrl($scope, $http) {  $scope.markdown = "";  $scope.doSearch = function() {    $http.jsonp("https://api.flickr.com/services/rest/?method=flickr.photos.search&amp;api_key=API_KEY&amp;user_id=35571855%40N06&amp;sort=date-posted-desc&amp;format=json&amp;jsoncallback=JSON_CALLBACK")      .success(function(data) {        $scope.photos = data.photos.photo;        $scope.loadingIndicator = false;      });    $scope.loadingIndicator = true;  }  $scope.selectedFilter = function(photo) {    return photo.selected == true;  }  $scope.selected = function(index) {  	$scope.photos[index].selected = true;  	$scope.markdown = $scope.markdown + makeLinkTag($scope.photos[index]);  }  function makeLinkTag(photo) {  	return '  \n';  }  $scope.titleFilter = function(photo) {    if (!$scope.filterWord || $scope.filterWord.length == 0) return true;    return photo.title.indexOf($scope.filterWord) &gt;= 0;  }})```     AngularJSアプリケーション開発ガイド posted with カエレバ   Brad Green,Shyam Seshadri オライリージャパン 2014-04-18       Amazonで購入  楽天市場で購入     
---title: "[こつこつ勉強]L2スイッチ、L3スイッチの違い"date: 2014-11-11T07:27:00+09:00comments: truecategory: ['Study']tags: ['network']published: trueslug: network-ip-1---[平成26年度秋期試験 ネットワークスペシャリスト](https://www.jitec.ipa.go.jp/1_04hanni_sukiru/mondai_kaitou_2014h26_2/2014h26a_nw_pm2_qs.pdf "平成26年度秋期試験")ネットワークスペシャリストの問題を解いていて、L2スイッチ、L3スイッチの再確認。### レイヤ2スイッチ(L2スイッチ)データリンク層によるスイッチング。MACアドレスによる### レイヤ3スイッチ(L3スイッチ)データリンク層部分のスイッチングと、ルーターが行うネットワーク層部分のルーティングを同時に実現する機器。IPアドレスを用いたルーティングができる。異なるネットワークを接続するという意味では、ルーターと同じだが、L3スイッチでは、物理的に(ハードウェアで)ルーティングを実現している。一方、ルーターは論理的に(ソフトウェアで)ルーティングを行う点が違う。     マスタリングTCP/IP 入門編 第5版 posted with カエレバ   竹下 隆史,村山 公保,荒井 透,苅田 幸雄 オーム社 2012-02-25       Amazonで購入  楽天市場で購入     {{% googleadsense %}}  ## 参考- [L2スイッチ, L3スイッチ, ルータの違い | 情報セキュリティの勉強部屋](http://sc.ipsecdh.net/entry/656)- [ゼロから始めるスイッチ講座 (15) レイヤ3スイッチの仕組み - VLANとVLAN間ルーティング(前) | マイナビニュース](http://news.mynavi.jp/series/networkswitch/015/)
---title: "万年筆LAMY safariのインク洗浄・交換"date: 2014-11-16T23:59:00+09:00comments: truecategory: ['Stationery']tags: ['万年筆','LAMY']published: trueimg: "https://farm8.staticflickr.com/7491/15800656071_6da29ae104_s.jpg"slug: fountain-pen-cleaning---今まで、LAMY safariのカートリッジ ⇛ 色彩雫「朝顔」と色を変えてきたので、万年筆の洗浄は必要ありませんでした。今回、色彩雫「月夜」に色を変えたので、万年筆のインク洗浄(入れ替え方法)を調べてみた。     パイロット 万年筆インキ iroshizuku 朝顔 posted with カエレバ    PILOT        Amazon  楽天市場          パイロット 万年筆インキ iroshizuku 月夜 posted with カエレバ    パイロット        Amazon  楽天市場     {{% googleadsense %}}## 1. まずは、ペン先、コンバーターを分解する## 2. 40℃ぐらいのお湯の中に数時間つけておく  ペン先から出てくるインクによって、色がゆらゆらと溶け出す様子はとても綺麗。あんまり漬けすぎると、樹脂が水を吸ってしまいよくないとのこと。## 3. ペン先とコンバータつけて、お湯(水)を吸い上げ、ペン先に残ったインクを押し出す  何度も水の中で、吸い上げたり押し出したりして、ペン先、コンバータに残ったインクを押し出す。意外と、ペン先とかコンバータの端っこにインクが残ってそうなので何度も洗い流してみた。## 4. キッチンペーパー等で水気を抜き取り、乾燥させる  ## 5. インクを入れ替える新しく買った「月夜」をるんるん気分で入れ替えました！！## 参考万年筆と高級筆記具専門店｜NAGASAWA　PenStyle DEN　の動画とサイトを参考にさせていただきました。  万年筆の使い方・書き方・お手入れ方法・洗浄方法  インクを変えるためだけに、ちょっと手間が必要な万年筆だけど、その作業をやってるだけで楽しい。インクの色もたくさんの種類があるので、いろんなモノを試してみたい。     LAMY サファリ レッド 万年筆(EF) スチールペン先 L16-EF 〔正規輸入品〕 posted with カエレバ    LAMY 2012-12-10       Amazon  楽天市場          LAMY サファリ スケルトン 万年筆(EF) スチールペン先 L12-EF 〔正規輸入品〕 posted with カエレバ    LAMY 2012-12-10       Amazon  楽天市場          LAMY コンバーター (アルスター・サファリ 用) LZ24 〔正規輸入品〕 posted with カエレバ    LAMY 2012-11-23       Amazon  楽天市場     ## 万年筆をよく使われるならモレスキンからミドリMDノートに乗り換え(万年筆の利用、価格の観点)  
---title: "TED APIを触ってみる"date: 2014-11-21T22:34:00+09:00comments: truecategory: ['Tech']tags: ['api','ted']published: true slug: ted-api---TED - Welcome to TEDLabs  いつのまにかTEDのAPIが公開されていたので、少し触ってみる。{{% googleadsense %}}昔は、APIが公開されてなかったので、スクレイピングで取得していた。(htmlの構造が今は変わってるので、以下のコードでは取得できません)TEDの英語原稿を取得する - ギークを夢見るじょーぶん男子  ```rubyrequire 'rubygems'require 'open-uri'require 'json'require 'nokogiri'url = "http://www.ted.com/talks/brene_brown_listening_to_shame.html"doc = Nokogiri::HTML(open(url))ted_id = doc.xpath("//div[@id='share_and_save']").first.attribute("data-id")open("http://www.ted.com/talks/subtitles/id/#{ted_id}/lang/en") do |f|  json = JSON.parse(f.read)  json['captions'].each do |j|    puts j['content']  endend```TED APIを使い、以下のエンドポイント(言い方あってる？)を叩くと、結果がjsonで返ってくる。```htmlhttps://api.ted.com/v1/talks.json?api-key=#{TED_API}&amp;filter=slug:matt_cutts_try_something_new_for_30_day```この id が、動画の固有IDになる。すばらしい。```json{"talks":  [{"talk":    {"id":1183,     "event_id":64,     "name":"Matt Cutts: Try something new for 30 days",     "description":"Is there something you've always meant to do, wanted to do, but just ... haven't? Matt Cutts suggests: Try it for 30 days. This short, lighthearted talk offers a neat way to think about setting and achieving goals.",     "slug":"matt_cutts_try_something_new_for_30_days",     "native_language_code":"en",     "published_at":"2011-07-01 15:14:00",     "recorded_at":"2011-03-03 00:00:00",     "updated_at":"2014-11-12 20:04:29",     "released_at":"2014-11-12 20:04:29"}}],    "counts":{"this":1,"total":1}}```## ドキュメントメモ書き程度に書き散らかす。TED I/O Docs  ### EventsTEDのイベントがあった箇所を取得する{    "event": {        "id": 1,        "name": "TED2008",        "description": "",        "header_text": "",        "slug": "2008",        "url": "",        "starts_at": "2008-02-27 00:00:00"    }}### Ratingsランキング？### Rating Words投票するときの、表現？{    "rating_words": [{        "rating_word": {            "id": 1,            "name": "Beautiful"        }    }, {        "rating_word": {            "id": 2,            "name": "Confusing"        }    }, {        "rating_word": {            "id": 3,            "name": "Courageous"        }    }, {        "rating_word": {            "id": 7,            "name": "Funny"        }    }, {        "rating_word": {            "id": 8,            "name": "Informative"        }    }, {        "rating_word": {            "id": 9,            "name": "Ingenious"        }    }, {        "rating_word": {            "id": 10,            "name": "Inspiring"        }    }, {        "rating_word": {            "id": 11,            "name": "Longwinded"        }    }, {        "rating_word": {            "id": 21,            "name": "Unconvincing"        }    }, {        "rating_word": {            "id": 22,            "name": "Fascinating"        }    }, {        "rating_word": {            "id": 23,            "name": "Jaw-dropping"        }    }, {        "rating_word": {            "id": 24,            "name": "Persuasive"        }    }, {        "rating_word": {            "id": 25,            "name": "OK"        }    }, {        "rating_word": {            "id": 26,            "name": "Obnoxious"        }    }],    "counts": {        "this": 14,        "total": 14    }}### Speakers:id スピーカの固有IDスピーカーの情報を得る### Talks### Themes題名、テーマに関する取得### Playlistsプレイリスト関連の検索### Search### Queryカテゴリと検索文字列を指定して検索結果を得る
---title: "Macのsedで改行コードを出力させる 〜改行コードの違い再確認〜"date: 2014-11-25T22:55:00+09:00comments: truecategory: ['Tech']tags: ['unix','jekyll']published: trueslug: sed-cr-lf---Octpressで各ブログ記事に利用していた\/'"$LF"'\{\{% googleadsense %\}\}/g | safeHTML }}## 参考sedで改行を出力する - rcmdnk’s blog  図解DTP用語辞典 改行コードの違い  日本語組版でいう改行は、行を改めて次の行の初めから文字を組み始めることである。しかし欧文組版では、タイプライターの操作メカニズムの制約から日本語の改行に当たる操作は２段階に分かれ、 ...  [改行コードの違いを体感してみる - ザリガニが見ていた...。](http://d.hatena.ne.jp/zariganitosh/20131115/diff_cr_lf_feeling)
---title: "[コツコツ勉強]よくわからないままJavaScriptを使っている自分へ"date: 2014-11-28T23:32:00+09:00comments: truecategory: ['Tech']tags: ['javascript']published: true slug: javascriptimg: "https://images-na.ssl-images-amazon.com/images/I/51c9uCrhHgL._SL160_.jpg"---jQuery、AngularJSとかサンプルを触ってみるけど、いまいちJavaScript自身がわかっていないので全然ピンと来ないので、巷でうわさの「サイ本」を読んでみる。     JavaScript 第6版 posted with カエレバ   David Flanagan オライリージャパン 2012-08-10       Amazon  楽天市場     {{% googleadsense %}}## 学んだ点- スコープ- 関数- オブジェクト### スコープ関数スコープ・・・変数は、その変数が定義された関数と、その関数に入れ子にされている関数痛からアクセスできる。### 関数- JavaScriptでは、関数はオブジェクト- 変数には関数そのものをいれることができる。- 関数の入れ子ができる- クロージャー- 無名関数グローバル変数をむやみに増やさないために、関数でラップしているイメージ。### オブジェクト- 不変な基本型と、可変なオブジェクト参照- プロトタイプ (すべてのJavaScriptオブジェクトにはもうひとつ別のオブジェクトが関連付けられる)- 暗黙の参照	- メモリの使用量を節約する	- メンバの追加・変更をインスタンスがリアルタイムに反映できる    ## 参考- [JavaScript 徹底入門のための資料＆書籍まとめ - 酒と泪とRubyとRailsと](http://morizyun.github.io/blog/javascript-learning-tech-yourself_01/)- [jQueryのソースコードを読むための参考サイト２０選 - DQNEO起業日記](http://dqn.sakusakutto.jp/2012/05/jquery-sourcecode-reading.html)- [[JavaScript]　猿でもわかるクロージャ超入門　まとめ - DQNEO起業日記](http://dqn.sakusakutto.jp/2009/01/javascript_5.html)## 感想受験のときに、手にした「化学の新研究」並の万能感を得られました。何かを学ぶときには、ネットの情報をちまちま読むよりは、ちゃんとした書籍を読んだ方がいいなと思いました。     JavaScript 第6版 posted with カエレバ   David Flanagan オライリージャパン 2012-08-10       Amazon  楽天市場          化学の新研究―理系大学受験 posted with カエレバ   卜部 吉庸 三省堂 2013-01-22       Amazon  楽天市場     
---title: "UTF-8-MACとは何か？〜Jekyllのカテゴリ(タグ)ページで濁点を含むページが表示されない〜"date: 2014-11-29T23:01:00+09:00comments: truecategory: ['Tech']tags: ['jekyll','文字コード']published: true slug: jekyll-tags-unread-because-of-utf-8-macimg: "https://farm9.staticflickr.com/8582/15904473402_eeaa56b76f_z.jpg"---Macでファイル作成し、その後、rsyncでさくらVPS(CentOS)に転送しているのだが、濁点を含むファイルだけが表示されない。例えば、「リファクタリング」など。http://meganii.com/blog/tag/リファクタリング/{{% googleadsense %}}## 原因Mac OSXが作成した濁点、半濁点を含むファイル名を、CentOS側では異なる文字と認識しているのが原因みたい。一般的に、UTF-8と表現される場合、NFC(Normalization Form C)でエンコードされたものを指す。一方、Mac OSXでは、NFD(Normalization Form D)で符号化したUTF-8が用いられ、iconvではこれをUTF-8-MACと呼んでいる。同じUTF-8でも、NFCとNFDという解釈の違いが存在するため、この現象が起きる。例えば、「が」を例にすると、NFCだと、「が」と1文字で表現されるところが、NFDだと、分解されて「か」と「゜」で表現される。  ## 解決策- rsyncのバージョンを3.0に上げる- オプション`--iconv=UTF-8-MAC,UTF-8`をつけて実行※ オプション`iconv`は、バージョン3.0からしか利用出来ないこれによって、`UTF-8-MAC`を`UTF-8`に変換して、サーバに転送する。### rsyncアップロードHomebrewでインストール。```bashbrew tap homebrew/dupesbrew install libiconvbrew install rsync```### Rakefileの変更```diff desc "deploy_to_sakura" task :deploy_to_sakura do   sh "jekyll build"-  sh 'rsync -e -avz --delete _site/ meganii@11.111.111.111:/home/meganii/jekyll+  sh 'rsync --iconv=UTF-8-MAC,UTF-8 -e -avz --delete _site/ meganii@11.111.111.111/home/meganii/jekyll end```## 手書きメモ  ## 参考カテゴリー名に濁点を含んだ日本語が使えない問題を解決する(Rsyncのiconvオプションを使う) - gam0022.net brew tap homebrew/dupes #リポジトリを追加 brew install libiconv #iconvオプションを使うために必須のよう brew install rsync ...  Mac OS Xの濁点ファイルがやってきた - miauの避難所  MacWiki - UTF-8-MAC  [UTF-8にもいろいろある - ザリガニが見ていた...。](http://d.hatena.ne.jp/zariganitosh/20131124/utf8_nfd_nfc_bom)[文字エンコードとロケールを体感する - ザリガニが見ていた...。](http://d.hatena.ne.jp/zariganitosh/20131118/text_encoding_locale_feeling)
---title: "Jekyllにタグクラウドを実装する"date: 2014-12-01T07:46:00+09:00comments: truecategory: ['Tech']tags: ['jekyll']published: true slug: jekyll-tag-cloud---タグクラウドが欲しくなったので、以下のページを参考にタグクラウドタグを実装した。Jekyllのタグクラウドプラグインを開発する  {{% googleadsense %}}### tag_generator.rb```rubymodule Jekyll  class TagPage &lt; Page    def initialize(site, base, dir, tag)      @site = site      @base = base      @dir = dir      @name = 'index.html'      self.process(@name)      self.read_yaml(File.join(base, '_layouts'), 'tag_index.html')      self.data['tag'] = tag      tag_title_prefix = 'Tag: '      self.data['title'] = "#{tag_title_prefix}#{tag}"    end  end    class TagPageGenerator &lt; Generator    safe true    def generate(site)      if site.layouts.key? 'tag_index'        dir = site.config['tag_path'] || 'tag'        site.tags.keys.each do |tag|          site.pages &lt;&lt; TagPage.new(site, site.source, File.join(dir, tag), tag)        end      end    end  endend```### tag_index.html```------{% raw %}{% assign posts = site.tags[page.tag] %}{% endraw %} Tag: {{page.tag}}  {% raw %}{% for post in posts %}{% endraw %}       {{ post.date | date: "%b %-d, %Y" }}    {{ post.title }}     {{ post.content | strip_html | strip_newlines | truncate: 100 }}    {% raw %}{% endfor %}{% endraw %} ```### tagcloud.rb```rubymodule Jekyll  class TagCloud &lt; Liquid::Tag    def initialize(tag_name, text, tokens)      super    end    def render(context)      tag_array = []      site = context.registers[:site]      site.tags.each do |tag, tag_pages|        tag_array &lt;&lt; tag      end      tag_array.sort!      tagcloud = ""      tag_array.each do |tag|        tagcloud &lt;&lt; "#{tag}\n"      end      "#{tagcloud}"    end  endendLiquid::Template.register_tag('tag_cloud', Jekyll::TagCloud)```### 利用箇所```{% raw %}{% tag_cloud %}{% endraw %}```## TODOこのままだと、タグがそのまま羅列されているだけなので、カテゴリ別に出力するように変更する。
---title: "Jekyllに月別アーカイブを実装する"date: 2014-12-02T07:54:00+09:00comments: truecategory: ['Tech']tags: ['jekyll']published: trueslug: jekyll-monthly-archive---以下のページを参考に、月別アーカイブを実装した。## 参考[Octopress - 月別アーカイブ！ - mk-mode BLOG](http://www.mk-mode.com/octopress/2013/02/15/octopress-monthly-archives/)[shigeya/jekyll-monthly-archive-plugin](https://github.com/shigeya/jekyll-monthly-archive-plugin)## 用途- monthly_archive_plugin.rb 月別アーカイブページを生成- monthly_archive.html 月別アーカイブページのレイアウト- monthly_archive.rb 月別アーカイブの出力カスタムタグ{{% googleadsense %}}### monthly_archive_plugin.rb```Rubymodule Jekyll  module MonthlyArchiveUtil    def self.archive_base(site)      site.config['monthly_archive'] &amp;&amp; site.config['monthly_archive']['path'] || '/blog'    end  end  # Generator class invoked from Jekyll  class MonthlyArchiveGenerator &lt; Generator    def generate(site)      posts_group_by_year_and_month(site).each do |ym, list|        site.pages &lt;&lt; MonthlyArchivePage.new(site, MonthlyArchiveUtil.archive_base(site),                                             ym[0], ym[1], list)      end    end    def posts_group_by_year_and_month(site)      site.posts.each.group_by { |post| [post.date.year, post.date.month] }    end  end  # Actual page instances  class MonthlyArchivePage &lt; Page    ATTRIBUTES_FOR_LIQUID = %w[      year,      month,      date,      content    ]    def initialize(site, dir, year, month, posts)      @site = site      @dir = dir      @year = year      @month = month      @archive_dir_name = '%04d/%02d' % [year, month]      @date = Date.new(@year, @month)      @layout =  site.config['monthly_archive'] &amp;&amp; site.config['monthly_archive']['layout'] || 'monthly_archive'      self.ext = '.html'      self.basename = 'index'      self.content = &lt;&lt;-EOS{% for post in page.posts %} {{ post.title }} {% endfor %}      EOS      self.data = {          'layout' =&gt; @layout,          'type' =&gt; 'archive',          'title' =&gt; "Monthly archive for #{@year}/#{@month}",          'posts' =&gt; posts,          'url' =&gt; File.join('/',                     MonthlyArchiveUtil.archive_base(site),                     @archive_dir_name, 'index.html')      }    end    def render(layouts, site_payload)      payload = {          'page' =&gt; self.to_liquid,          'paginator' =&gt; pager.to_liquid      }.merge(site_payload)      do_layout(payload, layouts)    end    def to_liquid(attr = nil)      self.data.merge({                               'content' =&gt; self.content,                               'date' =&gt; @date,                               'month' =&gt; @month,                               'year' =&gt; @year                           })    end    def destination(dest)      File.join('/', dest, @dir, @archive_dir_name, 'index.html')    end  endend```### monthly_archive.html```html------        Monthly archive for {{page.year}}/{{page.month}}           {{ content }}         ```### monthly_archive.rb```Rubymodule Jekyll  class MonthlyArchive &lt; Liquid::Tag    def initialize(tag_name, markup, tokens)      @opts = {}      if markup.strip =~ /\s*counter:(\w+)/i        @opts['counter'] = ($1 == 'true')        markup = markup.strip.sub(/counter:(\w+)/i, '')      end      super    end    def render(context)      html = ""      posts = context.registers[:site].posts.reverse      posts = posts.group_by{|c| {"month" =&gt; c.date.month, "year" =&gt; c.date.year}}      posts.each do |period, post|        month_dir = "/blog/#{period["year"]}/#{"%02d" % period["month"]}/"        html &lt;&lt; " #{period["year"]}-#{"%02d" % period["month"]}"        html &lt;&lt; "  (#{post.count})" if @opts['counter']        html &lt;&lt; " "      end      html    end  endendLiquid::Template.register_tag('tag_monthly_archive', Jekyll::MonthlyArchive)```### 利用箇所```               月別アーカイブ        {% raw %}{% tag_monthly_archive %}{% endraw %}      ```
---title: "現場でプロが培った Google Analyticsの使い方"date: 2014-12-03T07:21:00+09:00comments: truecategory: ['Book']tags: ['book','GoogleAnalytics']published: true slug: google-analyticsimg: "https://images-na.ssl-images-amazon.com/images/I/51gLaE5xkBL._SL160_.jpg"---Google Analyticsのレポートをたまにみるのだが、どこに着目すればいいのか？どんな指標を比べればいいのかわからなかったため、一度読んでみる。     現場でプロが培った Google Analyticsの使い方 (WEB PROFESSIONAL) posted with カエレバ   中野 克平 アスキー・メディアワークス 2010-02-12       Amazon  楽天市場     ## Google Analyticsの罠デフォルトのビューが31日間の単一指標になっている=&gt;- ページビューが○○PV- 直帰率が○○%といった個々の指標にしか目がいかなくなる。## アクセス解析の基本アクセス解析の基本は、 **「同じ長さの期間の比較」** である。最近の31日間とその前の31日間、最近の31日間と前年の同じ時期など、一定の期間を比較して、傾向の変化に気づけるようにする。## Webトラフィック- ノーリファラートラフィック ブックマーク、メルマガ、直接URL指定- 参照トラフィック ブログ、掲示板のリンク経由- 検索エンジントラフィック Google、Yahoo!などの検索エンジン経由ノーリファラーってのが、何者かがようやく分かった。本の中では常連さん## 感想Google Analyticsのデータを出力して、Excelベースで必要なデータを抽出しているのは、面白かった。Google Analyticsを使って、データから考える力を身につけたい。### 切り口- どんなユーザがみているか- どんなキーワードで検索- MacAppを買ってくれた人はどんな人か- 商品を買ってくれた人がどういう動きをしているか- 関連記事で読まれているのはどんな記事か## 参考【完全版】Google Analytics のディメンション＆指標チートシート 2014 | ビットエーブログ - 株式会社BITA  
---title: "統計学が最強の学問である"date: 2014-12-09T00:12:00+09:00comments: truecategory: ['Art']tags: ['book','statistics', '統計学']published: true slug: statistics-is-literacy-for-the-next-generationimg: "https://images-na.ssl-images-amazon.com/images/I/41-4aLbrvpL._SL160_.jpg"---     統計学が最強の学問である posted with カエレバ   西内 啓 ダイヤモンド社 2013-01-25       Amazon  楽天市場     ## この本から何を得たいか？- 統計学の用語(キーワード)の理解- データをどう解釈するか- ビックデータという言葉に惑わされないため統計学が最強の武器になるワケ ⇛　どんな分野の議論においても、データを集めて分析することで最速で最善の答えを出すことができる。{{% googleadsense %}}## データをビジネスに使うための「3つの問い」1. 何かの要因が変化すれば利益は向上するのか？2. そうした変化を起こすような行動は実際に可能か？3. 変化を起こす行動が可能だとしてそのコストは利益を上回るのか？## 抑えておきたい用語### A/Bテスト「A/Bテスト」とは、デザインにせよ機能にせよ、AパターンとBパターンを両方試してみて比較する、という意味である。多くの場合はユーザのアクセスに対してランダムにAパターンとBパターンのサイトを開き、一定期間収集されたアクセスログをもとにAパターンとBパターンの比較を行うことになる(ランダムに表示を分けることが難しい場合、1週間などの決まった期間ごとに表示を変える場合もある)統計学においては、ランダム化比較実験と呼ぶ。AパターンとBパターンの条件の変え方にランダムさが含まれていない場合は準実験と呼ぶ。### カイ二乗検定クロス集計表について「意味のある偏り」なのか、それとも「誤差でもこれぐらいの差は生じるか」といったことを確かめる解析手法### p値「実際には何の差もないのに誤差や偶然によってたまたまデータのような差(正確にはそれ以上に極端な差を含む)が生じる確率」のこと。このp値が小さければ(慣例的には5%以下)、結果が偶然得られたとは考えにくいと判断できる。## 「フェアではない」ものをどうあつかうか「フェアではない」とはどういったものかというと、比較する集団が同じ条件ではないということ。本書の例では、暴力的なゲームと少年犯罪の関連性をみたいのであれば、「ほかの条件は全く同じだが、暴力的なゲームのプレーの有無だけが異なっている」という集団同士を比べれば理想的な比較になる。しかし、現実問題として、「ほかの条件」たとえば、親の性格や考え方、子供のもともとの心理的傾向なども異なるかもしれないため難しい。統計学では、この問題に対して以下２つの解決方法がある。1. 「関連しそうな条件」を考えうる限り継続的に追跡調査し、統計学的な手法を用いて、少なくとも計測された条件については「フェアな比較」を行う2. 解析ではなくそもそものデータの取り方の時点で「フェアに条件を揃える」## ランダム化比較実験**人間の制御しうる何物についても、その因果関係を分析できる**ランダム化してしまえば、比較したい両グループの諸条件が平均的にはほぼ揃う。そして、揃っていない最後の条件は実験で制御しようとした条件だけであり、その状態で両グループに「誤差とは考えにくい差」が生じたのであれば、それは因果関係があると実証できることになる。「諸条件をランダム化してしまえば、平均的に比較したい両グループ間で同じになる」⇛　顧客や従業員の年齢や性別、心理的特性といったものが仮に結果を歪める可能性があったとしても、「ある程度の数でランダム化してしまえば問題にならない」という性質を示す。&gt; ランダム化  ランダム化比較実験で得られた仕事のアイデアに新規性があるならば、論文になる。ある程度の数ってどのぐらい取ればいいのだろうか？## ランダム化の限界1. 現実の壁2. 倫理の壁3. 感情の壁ケースコントロール研究## 回帰分析回帰分析とは、データ間の関係性を記述する、あるいは一方のデータから他方のデータを予測する数式を推定する考え方。こうした数式で記述される直線を**回帰直線**と呼ぶ### 平凡への回帰、平均値への回帰実際のデータは理論上の推測よりも「平均値に近づく」という意味。「無制限にデータを得ればわかるはずの真の知りたい値」を真値と呼び、たまたま得られたデータから計算された統計量がどの程度の誤差で真値を推定しているかを数学的に整理することで、無限にデータを集めることなく適切な判断が下せる現実のデータから得られた回帰係数などの統計量はあくまでこの真値に対する妥当な推定値であり、それな真値に対してどの程度の誤差を持っているかを考えれば、間違った判断を犯すリスクは減らすことができる。## 重回帰分析重回帰分析は、説明変数(予測したい結果に影響する要因)が複数ある状況へ拡張された回帰分析⇛　「フェアな比較」を行うために重要な手法## ロジスティック回帰ロジスティック回帰とは、もともと0か1という二値の結果変数を変換し、連続的な変数として扱うことで重回帰分析を行えるようにしたもの## 一般化線形モデル表の使い方  ### 男女別で顧客の一人当たりの売り上げを知りたい顧客の一人当たりの売り上げ =&gt; 結果変数 連続値男女別の違い =&gt; 説明変数 2グループ間の比較2グループそれぞれの平均値を記述して、t検定によって得られた「この平均値の差は誤差の範囲と言えるかどうか」というp値や信頼区間を示す### 来客回数が多い人ほど売り上げも高まるか？売上金額 =&gt; 結果変数 連続値来客回数 =&gt; 説明変数 連続値の多寡で比較回帰分析を行い、回帰係数の推定値や信頼区間、p値を示す### 連続値でもなく二値でもない、「何カテゴリーかに分類される」結果変数の扱い方例えば、1.まったくない、2.あまりない、3.たまにある、4.よくあるというアンケート項目の場合、1. 1〜2、3〜4と二分して二値として扱う2. 「よくある」と「それ以外」3. 1〜4の連続値として扱ってしまう     統計学が最強の学問である posted with カエレバ   西内 啓 ダイヤモンド社 2013-01-25       Amazon  楽天市場          完全独習 統計学入門 posted with カエレバ   小島 寛之 ダイヤモンド社 2006-09-29       Amazon  楽天市場     
---title: "Jekyllのタグとカテゴリを整理するために、一覧表示するWebアプリ(個人用)をつくった"date: 2014-12-13T18:15:00+09:00comments: truecategory: ['Tech']tags: ['jekyll','ruby']published: trueslug: jekyl-front-matter-viewerimg: "https://farm9.staticflickr.com/8650/16007934641_502fe07015_z.jpg"---カテゴリ名を一括変換したり、タグ名を整理する際に、今どうなっているか一覧にしたかったので、Railsで作ってみた。無事一覧が出来たので気持ちいい。こういう庭いじり好きかも笑。  [https://github.com/meganii/JekyllFFviewer](https://github.com/meganii/JekyllFFviewer){{% googleadsense %}}## Postsテーブル作成`metadata`として、JekyllのFront Matterを格納する。[Front Matter](http://jekyllrb.com/docs/frontmatter/)### create_posts.rb```rubyrequire 'rubygems'require 'sqlite3'db = SQLite3::Database.new("/Users/meganii/Work/Site/JekyllFFViewer/db/development.sqlite3")sql = &lt; "sqlite3",  "database" =&gt; "/Users/meganii/Work/Site/JekyllFFViewer/db/development.sqlite3")class Post&lt; ActiveRecord::Base  serialize :metadataendfiles = Dir.glob(File.join("/Users/meganii/Dropbox/Sites/meganii.com/_posts", "*"))files.each do |f|  ff = YAML.load_file(f)  file = open(f)  content = file.read  if content =~ /\A(---\s*\n.*?\n?)^(---\s*$\n?)/m    post_content = $POSTMATCH  end  filename = File.basename(f)  unless filename =~ /~\z/    post = Post.new    post.filename = filename     post.metadata = ff    post.content = post_content    post.save  endend```## ソート項目毎にソートされていた方が嬉しいので、ソート処理を実装してみる。[Railsのテーブル並び替えを実装する | Scimpr Blog](http://blog.scimpr.com/2012/08/26/rails%E3%81%AE%E3%83%86%E3%83%BC%E3%83%96%E3%83%AB%E4%B8%A6%E3%81%B3%E6%9B%BF%E3%81%88%E3%82%92%E5%AE%9F%E8%A3%85%E3%81%99%E3%82%8B/)単純なソートであれば、取得時にソート処理をかませばよいのだが、今回は、ハッシュの配列を、あるキー値でソートしないといけないので注意が必要。```ruby  def index    @posts = Post.all    hash = []        if params[:sort] != nil      sortkey = params[:sort]       @posts.each do |post|        hash &lt;&lt; post.metadata      end      hash.each {|h| puts h }      result = hash.sort {|a, b| compare(a[sortkey], b[sortkey]) }      hash = result    end    a = []    @posts.each do |post|      data = post.metadata      data.keys.each do |key|        a &lt;&lt; key      end    end    @column = a.uniq.sort    @posts = hash  end  def compare(a, b)    return -1 unless b     return 1 unless a    a = a[0] if a.instance_of? Array    b = b[0] if b.instance_of? Array    a &lt;=&gt; b  end```## 今後・TODO- 一覧上から修正して、再出力できるようにしたい- 一括変換したい
---title: "春の松島、秋の宮島、冬の天橋立〜日本三景巡り〜"date: 2014-12-17T21:19:00+09:00comments: truecategory: ['Travel']tags: ['日本三景','松島','宮島','天橋立','食べ歩き','旅行記']published: trueimg: "https://farm8.staticflickr.com/7489/16016656396_c9014ddef1_s.jpg"slug: matsushima-miyajima-amanohashidate-travel---春の松島で、牛たんを食べ、秋の宮島で牡蠣を食べ、冬の天橋立で蟹を食べ、この一年で日本三景を制覇しました。見返すと・・・・ああ、牛たん食べたい。{{% googleadsense %}}## 春の松島4月28日。関空から仙台へ。ARABAKI RockFEST.14 に行った際に、松島へ行ってきました！  フェリーに乗り、松島湾をめぐると、かもめが寄ってくる寄ってくる。  「松島や ああ松島や 松島や」そんな景色に見とれるやいなや、食べ歩く。まずは、笹かまぼこをじっくり焼いて食べる。実は、ここでも牡蠣を食べている。  仙台と言ったら、牛たん！！！このときは、「喜助」の牛たんだったと思うが、また食べにいきたい！  ## 秋の宮島9月14日。広島へ。実は、ちゃんと広島へ行くのは初めてかもしれない。フェリーに乗り、宮島へ。宮島行きのフェリーが、2つの会社で運行してるみたいで最初戸惑ったが、一方は鳥居により近くまで寄ることができるのが売りらしい。なんとなく、行きと帰りでそれぞれ別の会社の便で渡った。  水の上に建物があるのは、なんとなく不思議で、より神聖な気分がしました。  広島といったら、・・・牡蠣！！！！！「牡蠣屋」の牡蠣が美味しいと聞いたので、しばしならんで食す。美味かった。    牡蠣の旨味を堪能するために、あえて何もかけずに食べるカキフライは、絶品。ああ、牡蠣食べたい。  ## 冬の天橋立12月7日。雪がちらつく、寒い冬の天橋立。  カニが美味しかった！！！天橋立の近くのお店で食べた、セイコガニ丼!!!  ああ、カニ食べたい。天橋立へ向かう前日は、城崎温泉でひたすら外湯を巡ってました。まさか、雪が積もってるとは思っていなかったので、普通にスニーカーを履いていったのが間違いでした。しもやけ状態になる⇛温泉で温まる⇛しもやけ状態になる⇛足湯であたたまるをひたすら繰り返し、一時的にすべすべのお肌を手に入れました笑。雪が積もる温泉街は、情緒あふれる素敵な町並みで、夜はさらに雰囲気が出ていた。(寒すぎて、部屋に戻ってからは外に出たくなくなる病にかかったのはもったいなかった)  さあ、次はどこへいこっか？
---title: "達人に学ぶSQL, DB設計をぽちった"date: 2014-12-24T23:34:00+09:00comments: truecategory: ['Tech']tags: ['DB','sql']published: trueslug: kindle-db-sqlimg: "https://images-na.ssl-images-amazon.com/images/I/41ITBBEjKgL._SL160_.jpg"---Kindleで安くなってたので、勢いでポチった。SQL周り、モデリング周りの理論武装しておきたいと思って買った2冊。     達人に学ぶ SQL徹底指南書 (CodeZine BOOKS) posted with ヨメレバ   ミック 翔泳社 2008-02-07       Amazon  Kindle  楽天ブックス                   	  	  	               達人に学ぶDB設計 徹底指南書 初級者で終わりたくないあなたへ posted with ヨメレバ   ミック 翔泳社 2012-03-16       Amazon  Kindle  楽天ブックス                   	  	  	          ちょっとずつ、読み進めていきます。
---title: "札幌・すすきの「だるま」ジンギスカンと「開陽亭」でウニ・イクラ・イカの踊りを食べてきた!!"date: 2015-01-26T23:37:00+09:00comments: truecategory: ['Travel']tags: ['グルメ','北海道','旅行記']published: trueimg: "https://farm9.staticflickr.com/8657/16354201512_520a96a72a_s.jpg"slug: hokkaido-susukino---2015年1月17日〜19日と、北海道・札幌へいってきました。天候不良により、あやうく、関空から出発して羽田に戻る可能性もありましたが、無事飛行機は飛んで、北海道にたどり着きました。昼間は、北海道のパウダースノーでボードを楽しみ、夜は北海道の美味しいものを食べてきました。まずは、北海道の美味しいものを思い出として残しておきます。{{% googleadsense %}}## ジンギスカン「だるま」だるま 本店 - すすきの/ジンギスカン [食べログ]  札幌ジンギスカンだるま  じん、じん、ジンギスカ～ン♪ということで雪が吹雪く中、結構並ぶことを覚悟しながらいったが、意外とすんなり入れたので助かった。注文する前に、羊脂と玉ねぎ、ネギが鉄板にのせられ、じゅーじゅーといい音がしてくる。  へんな臭いもなく、美味しく食べられました！2人で3人前食べたところで一旦ストップ。(まだまだ食べられたが、この後は、スープカレーを食べに行こうとしていたのでオーダーストップです)席は、カウンターのみで結構お客の回転は早かったので、多少並んでも問題なさそうでした。着ていった服が、ジンギスカン臭くなることは、注意すべし。## 「開陽亭」開陽亭 すすきの店 （かいようてい） - すすきの/魚介料理・海鮮料理 [食べログ]  すすきのでかに・海鮮を堪能するなら「函館開陽亭すすきの店」へ  北海道に来たからには、美味しい	海鮮が食べたいということで、海鮮系で人気の居酒屋「開陽亭」へ！場所は、１日目のだるまの近くだった。まずは、お刺身盛り合わせを頂きます！お刺身も旨い！サーモンはとろけるし、ホタテはうまいし。エビはあまいし、最高でした。  続いて、名物はイカの踊り食いとのことだったので、さっそく1尾注文。まだ生きてるので、手を近づけると吸盤がくっつく。光ってるのも見える。イカさんごめんなさい、いただきます。本体は、フライにしてもらって美味しかった。  ### ウニ・イクラ・カニいくら丼に、ウニを乗せながら、蟹を食べる贅沢の極み。  カニも色々種類があって、また食べ方も刺し身、ゆで、焼きと悩んでしまう。今回は、毛ガニのゆでで、身もほぐしてもらった。自分でむいて食べるのも美味しいが、何も考えずぱくぱくカニの身を食べるのも美味しい！贅沢ですね。  ウニは、ミョウバンを使っていないとのことで、なぜか漫画「将太の寿司」がフラッシュバック。ミョウバンを使ってないウニは、すぐに溶けてしまうが、薬品の味がせず美味しいと聞いたことがある。味の違いはわからないが、食べた瞬間、ほんとに口の中で溶けて、ふわーっとウニの味が広がる。ずっと食べていたいウニでした！  数時間で食べるんじゃなくて、一週間ちょっとずつに分けて、それをおかずにひたすら白米を食べたい気持ちになりました。「はっちょう」のいくら丼も食べたかったが、予約がいっぱいで入れず。「開陽亭」も予約必須だったため、行く予定がある方ははやめに予約をおすすめします。## 行きたかった「はちきょう」北海道札幌の居酒屋「はちきょう」  はちきょう - すすきの/郷土料理（その他） [食べログ]  また、冬の北海道も行かねばー！
---title: "Vagrant上のCentOS6.4にOracle Database Express Edition11gをインストールする"date: 2015-02-08T15:11:00+09:00comments: truecategory: ['Tech']tags: ['Oracle','database']published: trueimg: "https://farm9.staticflickr.com/8640/16468400201_39ccfefbac_s.jpg" slug: oracle-express-edition-11g-install---学習用として、ローカルにOracleが欲しかったので、無償版のExpress EditionをVagrantで作成したCentOSにインストールした。Vagrantで作成したCentOS6.4にOracle XEをインストールする流れは、以下のとおり。1. Vagrantの設定(ホスト側作業)2. Oracle Database Express Edition 11gのダウンロード(ホスト側作業)3. Oracleインストールに必要なパッケージのインストール(ゲストOS側作業)4. Oracleインストール(ゲストOS側作業){{% googleadsense %}}## 前提- VirtualBox version 4.3.14- Vagrant 1.6.3- Oracle Database Express Edition 11g R2- ホストOS: Mac OS X Mavericks- ゲストOS: CentOS 6.4 x86_64 Minimal(20140116)[Release CentOS 6.4 x86_64 Minimal (2014-01-16) · 2creatives/vagrant-centos](https://github.com/2creatives/vagrant-centos/releases/tag/v6.4.2)## 1. Vagrantの設定(ホスト側作業)### Vagrantの追加Vagrantのインストール、Virtualboxのインストールについては、割愛する。### ネットワークの設定Vagrantfileに、利用したいIPアドレスを記載する。```# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!VAGRANTFILE_API_VERSION = "2"Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|  config.vm.box = "centos64-x86_64-20140116"  # using a specific IP.  config.vm.network "private_network", ip: "192.168.33.10"end```### 共有フォルダ設定CentOS側からみれる共有フォルダを用意する。  ### CentOSを立ち上げる```vagrant up```## 2. Oracle Database Express Edition 11gのダウンロード(ホスト側作業)下記のリンクからExpress Editionをダウンロードする。(要オラクルアカウント。登録は無料です)http://www.oracle.com/technetwork/jp/database/database-technologies/express-edition/downloads/index.htmlダウンロードが完了したら、共有フォルダに格納しておく。3. Oracleインストールに必要なパッケージのインストール(ゲストOS側作業)[公式ドキュメント](http://docs.oracle.com/cd/E17781_01/install.112/e18802/toc.htm#XEINL102)を見てみると、必要なパッケージは以下のものとなっている。- glibc should be greater than or equal to 2.3.4-2.41- make should be greater than or equal to 3.80- binutils should be greater than or equal to 2.16.91.0.5- gcc should be greater than or equal to 4.1.2- libaio should be greater than or equal to 0.3.104### libaio, bcのインストール今回は、`yum`で`libaio`と`bc`をインストールでOracle XEのインストール要件は満たされた。```yum install libaio bc```### hostsファイルにコンピュータ名を追加```vi /etc/hosts``````diff- 127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4+ 127.0.0.1   localhost localhost.localdomain localhost4 localhost4.localdomain4 vagrant-centos64.vagrantup.com::1         localhost localhost.localdomain localhost6 localhost6.localdomain6```コンピュータ名は、`hostname`で得ることができる。## 4. Oracleインストール### rpmによるインストール```rpm -ivh oracle-xe-11.2.0-1.0.x86_64.rpm``````$ rpm -ivh oracle-xe-11.2.0-1.0.x86_64.rpmPreparing...                ########################################### [100%]   1:oracle-xe              ########################################### [100%]Executing post-install steps...You must run '/etc/init.d/oracle-xe configure' as the root user to configure the database.```### 構築以下のコマンドを叩いて、databaseを構築する。```/etc/init.d/oracle-xe configure``````Oracle Database 11g Express Edition Configuration-------------------------------------------------This will configure on-boot properties of Oracle Database 11g ExpressEdition.  The following questions will determine whether the database shouldbe starting upon system boot, the ports it will use, and the passwords thatwill be used for database accounts.  Press  to accept the defaults.Ctrl-C will abort.Specify the HTTP port that will be used for Oracle Application Express [8080]:Specify a port that will be used for the database listener [1521]:Specify a password to be used for database accounts.  Note that the samepassword will be used for SYS and SYSTEM.  Oracle recommends the use ofdifferent passwords for each database account.  This can be done afterinitial configuration:Confirm the password:Do you want Oracle Database 11g Express Edition to be started on boot (y/n) [y]:yStarting Oracle Net Listener...DoneConfiguring database...DoneStarting Oracle Database 11g Express Edition instance...DoneInstallation completed successfully.```## 稼働確認iptablesを一時的に無効にして、http://192.168.33.10:8080 にアクセスした。(IPアドレス192.168.33.10の部分は、Vagrantfileに記載のもの)ユーザ名とパスワードは下記の通り。- ユーザ名： system- パスワード： インストール時に設定したもの以下のページが表示されて、Oracleが動いていることがわかる。  ##参考- [ swapon /swapfile](https://gist.github.com/koudaiii/0ed6a8558aa297af463e)- [linux スワップ（swap）領域の作成](http://kazmax.zpp.jp/linux_beginner/mkswap.html)- [http://docs.oracle.com/cd/E11882_01/install.112/e24326/toc.htm#BHCGJCEA](http://docs.oracle.com/cd/E11882_01/install.112/e24326/toc.htm#BHCGJCEA)
---title: "SQL*PlusをMacOSX Marvericsにインストール"date: 2015-02-11T22:54:00+09:00comments: truecategory: ['Tech']tags: ['Oracle', 'sqlplus']published: trueslug: install-sqlplus---Oracle Express Edition 11gをインストールしたので、SQL*Plusも合わせてインストールする。[Vagrant上のCentOS6.4にOracle Database Express Edition11gをインストールする](http://meganii.com/blog/2015/02/08/oracle-express-edition-11g-install/){{% googleadsense %}}[http://www.oracle.com/technetwork/topics/intel-macsoft-096467.html)](http://www.oracle.com/technetwork/topics/intel-macsoft-096467.html)上記のリンク先から以下をダウンロード- instantclient-basic-macos.x64-11.2.0.4.0.zip- instantclient-jdbc-macos.x64-11.2.0.4.0.zip- instantclient-sqlplus-macos.x64-11.2.0.4.0.zip- instantclient-sdk-macos.x64-11.2.0.4.0.zip適当な場所にディレクトリを作成して、解凍したファイルを一箇所に格納する。```mkdir ~/bin/sqlplus``````unzip instantclient-basic-macos.x32-11.2.0.4.0.zip -d ~/bin/sqlplus/unzip instantclient-jdbc-macos.x32-11.2.0.4.0.zip -d ~/bin/sqlplus/unzip instantclient-sdk-macos.x32-11.2.0.4.0.zip -d ~/bin/sqlplus/unzip instantclient-sqlplus-macos.x32-11.2.0.4.0.zip -d ~/bin/sqlplus/```下記の通り、パスを通す。```vim ~/.bash_profile## oracle clientexport ORACLE_HOME=~/bin/sqlplus/instantclient_11_2export PATH=$ORACLE_HOME:$PATHexport DYLD_LIBRARY_PATH=~/bin/sqlplus/instantclient_11_2export NLS_LANG=American_America.AL32UTF8``````source ~/.bash_profile```## rlwrapのインストールsqplusは、素のままだと↑↓での履歴が出せなかったりするので、rlwrapをインストールする。```meganii-air:oracle meganii$ brew install rlwrap==&gt; Installing rlwrap dependency: readline==&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/readline-6.3.8.mavericks.bottle.tar.######################################################################## 100.0%==&gt; Pouring readline-6.3.8.mavericks.bottle.tar.gz==&gt; CaveatsThis formula is keg-only, which means it was not symlinked into /usr/local.Mac OS X provides similar software, and installing this software inparallel can cause all kinds of trouble.OS X provides the BSD libedit library, which shadows libreadline.In order to prevent conflicts when programs look for libreadline we aredefaulting this GNU Readline installation to keg-only.Generally there are no consequences of this for you. If you build yourown software and it requires this formula, you'll need to add to yourbuild variables:    LDFLAGS:  -L/usr/local/opt/readline/lib    CPPFLAGS: -I/usr/local/opt/readline/include==&gt; Summary🍺  /usr/local/Cellar/readline/6.3.8: 40 files, 2.1M==&gt; Installing rlwrap==&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/rlwrap-0.42.mavericks.bottle.tar.gz######################################################################## 100.0%==&gt; Pouring rlwrap-0.42.mavericks.bottle.tar.gz🍺  /usr/local/Cellar/rlwrap/0.42: 29 files, 312K```これで、`rlwrap sqlplus`とすれば、履歴も出せるようになる。## 参考[Mac OSXに64ビット版sqlplus(11.2)をインストールしてAmazon RDS for Oracleに接続 - yoshidashingo](http://yoshidashingo.hatenablog.com/entry/2014/08/08/165311)
---title: "モレスキンからミドリMDノートに乗り換え(万年筆の利用、価格の観点)"date: 2015-03-01T08:22:00+09:00comments: truecategory: ['Stationery']tags: ['ノート','万年筆']published: true img: "https://images-na.ssl-images-amazon.com/images/I/31cYjEMPI1L._SL160_.jpg"slug: moleskine-to-mdnote---数年前までは、モレスキンユーザーだった。でも、万年筆も使うようになってからは、どうも裏写りが激しかったり、値段が高かったりするのもあって徐々に使用頻度が落ちていった。その中で、前から補助のノートとして利用していた、MDミドリノートが自分の中で今はベストになってきたので紹介したい。     ミドリ MDノート&lt;文庫&gt; 方眼罫 posted with カエレバ    デザインフィル        Amazon  楽天市場     {{% googleadsense %}}## MDミドリノートの良い点- (モレスキン)と比べて安い- 万年筆でも裏抜け(裏移り)しない- 変ないいコト書かないといけないプレッシャーがない    万年筆でも、インクが裏に滲まない。## モレスキンの良い点- 高級感あふれるため、持ってるだけで幸せな気分になれる- ポケットがついてるので、ちぎったロディアやメモを挟める- ゴムバンドがついてるので、物を挟める    若干、裏抜け(裏写り)してる。インクが多く出るタイプの万年筆・インクだと確実に裏抜け(裏写り)してしまう。モレスキンのずっと触っていたい高級感も捨てがたいのだが、カバーをかければ、問題ないという結論に至った。モレスキンを使ってて、万年筆の裏写りが気になるという人や、流石にモレスキンを買い続けるのはお金的に厳しいという人は、ミドリMDノートもいい感じですよ。使ってる万年筆とインクはこちら。     Pelikan ペリカン クラシック 万年筆 F(細字) 黒 M200 吸入式 正規輸入品 posted with カエレバ    Pelikan        Amazon  楽天市場          パイロット 万年筆インキ iroshizuku 月夜 posted with カエレバ    パイロット        Amazon  楽天市場     ミドリMDノートと、モレスキン     ミドリ MDノート&lt;文庫&gt; 方眼罫 posted with カエレバ    デザインフィル        Amazon  楽天市場          Moleskine Pocket Squared Notebook Classic posted with カエレバ   Moleskine Moleskine 2008-01-01       Amazon  楽天市場     
---title: "AnsibleでさくらVPSの初期設定"date: 2015-03-02T07:31:00+09:00comments: truecategory: ['Tech']tags: ['ansible','さくらvps']published: trueimg: "https://images-na.ssl-images-amazon.com/images/I/31u6VLGX2kL._SL160_.jpg"slug: ansible-sakura-vps---行き当たりばったりで、設定を繰り返してきた、さくらのVPS。いい加減、自動化したいと思い、CentOSを初期化して、Ansibleで初期設定をしていきます。{{% googleadsense %}}## 方針1. rootでの初期設定2. nginxの設定rootでの作業と、作業用ユーザでログインして作業をするタスク分けておくことで、初期設定と各アプリケーションのインストールをやりやすいようにしておく。## 前提 ansible インストールHomebrewからインストールする。```brew install ansible```### 実行環境```## ローカル環境$ ansible --versionansible 1.6.10$ ruby -vruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-darwin12.5.0]## さくらVPSの標準インストールで入るCentOS$ cat /etc/redhat-releaseCentOS release 6.6 (Final)```## 1. rootでの初期設定(sakura_init.yml)まっさらな状態のCentOSに対して、最低限のセキュリティの設定を行う。- SSHのポートを変える- rootでのsshを禁止する- パスワードでのsshを禁止する- iptablesを設定する- adminユーザを作成して、sudoできるようにする- 鍵の設定を行う### hosts```[test]192.168.33.33[vagrant]vagrant:10022[sakura_init]49.212.XXX.XXX[sakura]sakura:10022```test, vagrantは、vagrantの設定である。`vagrant:10022`としているのは、さらに、この`vagrant`と`sakura`は、下記の通り、`~/.ssh/config`に設定している。### ~/.ssh/config```Host vagrant  Hostname 192.168.33.33  Port 10022  User admin  IdentityFile ~/.ssh/id_rsaHost jekyll_vagrant  Hostname 192.168.33.33  Port 10022  User jekyll  IdentityFile ~/.ssh/id_rsaHost 192.168.33.33  User root  IdentityFile ~/.vagrant.d/insecure_private_key  IdentitiesOnly yesHost 49.212.138.148  User root  IdentityFile ~/.ssh/id_rsa  IdentitiesOnly yesHost sakura  Hostname 49.212.138.148  Port 10022  User admin  IdentityFile ~/.ssh/id_rsa```この設定により、下記ようにポート、ホスト名などを省略して接続できる。```ssh vagrantssh sakura```### sakura_init.yml```yaml---- hosts: sakura_init  user: root  vars:    admin_name: admin    admin_password: password    admin_public_key_path: ~/.ssh/id_rsa.pub    ssh_port: 10022  tasks:    - name: change SSH port      lineinfile: dest=/etc/ssh/sshd_config regexp="^#Port" line="Port {{ ssh_port }}" state=present    - name: create iptables      template: src=iptables.j2 dest=/etc/sysconfig/iptables    - name: disallow root SSH access      lineinfile: dest=/etc/ssh/sshd_config regexp="^#PermitRootLogin " line="PermitRootLogin no" state=present    - name: disallow password authentication      lineinfile: dest=/etc/ssh/sshd_config regexp="^#PasswordAuthentication " line="PasswordAuthentication no" state=present    - name: Add a new user      user: name={{admin_name}} password={{ admin_password }} groups=wheel state=present    - name: allow wheel users to sudo      lineinfile: dest=/etc/sudoers regexp="^#\s*(%wheel\s+ALL=\(ALL\)\s+NOPASSWD{{':'}}\s+ALL)" line="\1" backrefs=yes state=present    - name: resister a public key      authorized_key: user={{ admin_name }} key="{{ item }}"      with_file:        - "{{ admin_public_key_path }}"    - name: restart sshd and restart iptables      shell: service sshd restart &amp;&amp; /etc/init.d/iptables restart```### iptables.j2```*filter:INPUT   ACCEPT [0:0]:FORWARD ACCEPT [0:0]:OUTPUT  ACCEPT [0:0]:RH-Firewall-1-INPUT - [0:0]-A INPUT -j RH-Firewall-1-INPUT-A FORWARD -j RH-Firewall-1-INPUT-A RH-Firewall-1-INPUT -i lo -j ACCEPT-A RH-Firewall-1-INPUT -p icmp --icmp-type any -j ACCEPT-A RH-Firewall-1-INPUT -p 50 -j ACCEPT-A RH-Firewall-1-INPUT -p 51 -j ACCEPT-A RH-Firewall-1-INPUT -p udp --dport 5353 -d 224.0.0.251 -j ACCEPT-A RH-Firewall-1-INPUT -p udp -m udp --dport 631 -j ACCEPT-A RH-Firewall-1-INPUT -p tcp -m tcp --dport 631 -j ACCEPT-A RH-Firewall-1-INPUT -m state --state ESTABLISHED,RELATED -j ACCEPT# add start-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport {{ ssh_port }} -j ACCEPT# add end-A RH-Firewall-1-INPUT -j REJECT --reject-with icmp-host-prohibitedCOMMIT```### ansible実行```$ ansible-playbook -i hosts sakura_init.yml -k -c paramiko# さくらVPSで設定したrootパスワード```## 2. nginxの設定`playbook.yml`で、jekyllのフォルダ、nginxのインストール、設定を行う。### playbook.yml```yaml---- hosts: sakura  sudo: yes  user: admin  vars:    user_name: jekyll    user_password: password    user_public_key_path: ~/.ssh/id_rsa.pub    httpd_port: 80  tasks:    - name: Add a new user      user: name={{user_name}} password={{ user_password }} state=present    - name: register a public key      authorized_key: user={{ user_name }} key="{{ item }}"      with_file:        - "{{user_public_key_path}}"    - name: Create Jekyll directory      file: path=/home/jekyll/www/meganii.com/ state=directory owner=jekyll group=jekyll mode=0755    - name:  Add 755      file: path=/home/jekyll    - name: Copy the EPEL repository definition      copy: src=epel.repo dest=/etc/yum.repos.d/epel.repo    - name: Create the GPG key for EPEL      copy: src=RPM-GPG-KEY-EPEL-6 dest=/etc/pki/rpm-gpg    - name: Install nginx      yum: name=nginx state=present    - name: add iptables rule for httpd      lineinfile: dest=/etc/sysconfig/iptables regexp="{{ httpd_port }}" line="-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport {{ httpd_port }} -j ACCEPT" insertbefore="^# add end" state=present    - name: Copy nginx congiguration for jekyll      template: src=default.conf dest=/etc/nginx/conf.d/default.conf    - name: iptables restart      command: /etc/init.d/iptables restart    - name: restart nginx      command: service nginx restart```### epel.repo```[epel]name=Extra Packages for Enterprise Linux 6 - $basearch#baseurl=http://download.fedoraproject.org/pub/epel/6/$basearchmirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-6&amp;arch=$basearchfailovermethod=priorityenabled=1gpgcheck=1gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6[epel-debuginfo]name=Extra Packages for Enterprise Linux 6 - $basearch - Debug#baseurl=http://download.fedoraproject.org/pub/epel/6/$basearch/debugmirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-debug-6&amp;arch=$basearchfailovermethod=priorityenabled=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6gpgcheck=1[epel-source]name=Extra Packages for Enterprise Linux 6 - $basearch - Source#baseurl=http://download.fedoraproject.org/pub/epel/6/SRPMSmirrorlist=https://mirrors.fedoraproject.org/metalink?repo=epel-source-6&amp;arch=$basearchfailovermethod=priorityenabled=0gpgkey=file:///etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-6gpgcheck=1```### RPM-GPG-KEY-EPEL-6```-----BEGIN PGP PUBLIC KEY BLOCK-----Version: GnuPG v1.4.5 (GNU/Linux)mQINBEvSKUIBEADLGnUj24ZVKW7liFN/JA5CgtzlNnKs7sBg7fVbNWryiE3URbn1JXvrdwHtkKyY96/ifZ1Ld3lE2gOF61bGZ2CWwJNee76Sp9Z+isP8RQXbG5jwj/4BM9HK7phktqFVJ8VbY2jfTjcfxRvGM8YBwXF8hx0CDZURAjvf1xRSQJ7iAo58qcHnXtxOAvQmAbR9z6Q/h/D+Y/PhoIJp1OV4VNHCbCs9M7HUVBpgC53PDcTUQuwcgeY6pQgo9eT1eLNSZVrJ5Bctivl1UcD6P6CIGkkeT2gNhqindRPngUXGXW7Qzoefe+fVQqJSm7Tq2q9oqVZ46J964waCRItRySpuW5dxZO34WM6wsw2BP2MlACbH4l3luqtpXo3Bvfnk+HAFH3HcMuwdaulxv7zYKXCfNoSfgrpEfo2Ex4Im/I3WdtwME/Gbnwdq3VJzgAxLVFhczDHwNkjmIdPAlNJ9/ixRjip4dgZtW8VcBCrNoL+LhDrIfjvnLdRuvBHy9P3sCF7FZycaHlMWP6RiLtHnEMGcbZ8QpQHi2dReU1wyr9QgguGU+jqSXYar1yEcsdRGasppNIZ8+Qawbm/a4doT10TEtPArhSoHlwbvqTDYjtfV92lC/2iwgO6gYgG9XrO4V8dV39Ffm7oLFfvTbg5mv4Q/E6AWo/gkjmtxkculbyAvjFtYAQARAQABtCFFUEVMICg2KSA8ZXBlbEBmZWRvcmFwcm9qZWN0Lm9yZz6JAjYEEwECACAFAkvSKUICGw8GCwkIBwMCBBUCCAMEFgIDAQIeAQIXgAAKCRA7Sd8qBgi4lR/GD/wLGPv9qO39eyb9NlrwfKdUEo1tHxKdrhNz+XYrO4yVDTBZRPSuvL2yaoeSIhQOKhNPfEgT9mdsbsgcfmoHxmGVcn+lbheWsSvcgrXuz0gLt8TGGKGGROAoLXpuUsb1HNtKEOwPQ4z1uQ2nOz5hLRyDOV0I2LwYV8BjGIjBKUMFEUxFTsL7XOZkrAg/WbTH2PW3hrfSWtcRA7EYonI3B80d39ffws7SmyKbS5PmZjqOPuTvV2F0tMhKIhncBwoojWZPExftHpKhzKVh8fdDO/3P1y1Fk3Cin8UbCO9MWMFNR27fVzCANlEPljsHA+3Ez4F7uboFp0OOEov4Yyi4BEbgqZnthTG4ub9nyiupIZ3ckPHr3nVcDUGcL6lQD/nkmNVIeLYPx1uHPOSlWfuojAYgzRH6LL7Idg4FHHBA0to7FW8dQXFIOyNiJFAOT2j8P5+tVdq8wB0PDSH8yRpn4HdJ9RYquau4OkjluxOWf0uRaS//SUcCZh+1/KBEOmcvBHYRZA5Jl/nakCgxGb2paQOzqqpOcHKvlyLuzO5uybMXaipLExTGJXBlXrbbASfXa/yGYSAGiVrGz9CE6676dMlm8F+s3XXE13QZrXmjloc6jwOljnfAkjTGXjiB7OULESed96MRXtfLk0W5Ab9pd7tKDR6QHI7rgHXfCopRnZ2VVQ===V/6I-----END PGP PUBLIC KEY BLOCK-----```### default.conf```## The default server#server {    listen 	 80;    server_name  meganii.com;    #charset koi8-r;    #access_log  logs/host.access.log  main;    location / {        root   /home/jekyll/www/meganii.com;        index  index.html index.htm;    }    error_page  404              /404.html;    location = /404.html {        root   /usr/share/nginx/html;    }    # redirect server error pages to the static page /50x.html    #    error_page   500 502 503 504  /50x.html;    location = /50x.html {        root   /usr/share/nginx/html;    }    # proxy the PHP scripts to Apache listening on 127.0.0.1:80    #    #location ~ \.php$ {    #    proxy_pass   http://127.0.0.1;    #}    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000    #    #location ~ \.php$ {    #    root           html;    #    fastcgi_pass   127.0.0.1:9000;    #    fastcgi_index  index.php;    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;    #    include        fastcgi_params;    #}    # deny access to .htaccess files, if Apache's document root    # concurs with nginx's one    #    #location ~ /\.ht {    #    deny  all;    #}}```### 実行```$ ansible-playbook -i hosts playbook.yml```## ハマったポイント### パスワードは、以下の処理をしなければならない```$ openssl passwd -salt hoge -1 fuga$1$hoge$DP2bw0KOW0ZhAg2ssVHY7.```### オプションの指定-k -c paramiko のオプションを付けないとエラー```$ ansible-playbook -i hosts playbook.yml -k -c paramiko設定した root のパスワードを入力```## まとめvagrantで、centosを立てて、ansibleのテストを行なった。vagrant上のcentosでは上手くいくが、本番のさくらVPSに対してはエラーになることがあったので、その度再インストールを繰り返した。問題になったのは、hostsの設定部分であったり、ファイルコピーの部分であったりまだ原因がよくわかっていない。でも、何度も繰り返し同じことを行えるのは、すごく心強い。秘伝のサーバー設定に陥りがちだけど、いざとなれば、再インストールで元に戻せる安心感を手に出来た。## 参考[Ansible でさくらのVPS の環境構築を自動化　～ハマりポイントとともに～ - akiyoko blog](http://akiyoko.hatenablog.jp/entry/2013/12/16/020529)SSDプランが月々685円から使える！さくらのVPS## 参考(Infrastructure as Code)     入門Chef Solo - Infrastructure as Code[Kindle版] posted with ヨメレバ   伊藤直也 伊藤直也 2013-03-11       Kindle  Amazon[書籍版]                               	  	  	  	    
---title: "数世代バージョンを持つファイル名から最新版以外を抽出する"date: 2015-03-27T23:54:00+09:00comments: truecategory: ['Tech']tags: ['ruby']published: true slug: leave-latest-filename---数世代バージョンを持っているようなファイルから、最新版だけ残す(2世代以上持っているものを抽出する)方法。## 前提ファイル名_yyyymmddという形式になっている。あらかじめファイル名をソートしておく。ファイルリスト。```TBTA1001_20140222TBTA1001_20150520TBTA1002_20151212TBTA1002_20151222TBTA1003_20140609```## スクリプト```rubyFile.open('filename.txt') do |f|  prev = ""  f.each_line do |line|    name = line.split(/_\d{8}/)    if prev.split(/_\d{8}/) == name      puts prev    end    prev = line  endend```## 結果```TBTA1001_20140222TBTA1002_20151212````sed`とか`awk`とか使ってさくっと出来ないものかと思ってるのだが・・・。勉強不足。
---title: "ほぼ日手帳におすすめの革カバー！HERZ(ヘルツ)の「ほぼ日手帳カバー(KB-104)」"date: 2015-04-01T19:55:00+09:00comments: truecategory: ['Stationery']tags: ['ほぼ日手帳','革小物']published: trueimg: "https://farm8.staticflickr.com/7628/16989114741_12323fb8ba_s.jpg"slug: hobonichi-planner-leather-cover---  ほぼ日手帳の革カバーにHERZのほぼ日手帳カバーを買って、３ヶ月ぐらい経ちました。ちょっと良い革カバーをお探しなら、HERZ(ヘルツ)工房のほぼ日手帳カバーをおすすめします！{{% googleadsense %}}前までは、ほぼ日手帳カズンを使っていたが、今年からは一回り小さいHobonichi Plannerを使い始めた。サイズを変えたことでカバーが欲しくなり探していた。LOFT、東急ハンズ、革小物の店を色々と探したが、売られているラインナップはだいたい1000円〜2000円台のカバーであり、ペラペラだったり、手触りがあんまり好きじゃなくて、どれもあんまりピンとこなかった。その中で、革小物手作り工房「HERZ(ヘルツ)」が良さそうだよと彼女に教えてもらい、直接店に向かった。  触った瞬間に、「探してたのはこれだっ！」と思って衝動買いしてしまった。触ってるだけでウキウキする感じ。初めてMacを手に入れた時、初めて万年筆を手に入れたときのあの万能感。モレスキンを触っているときのようなうっとりするような気持ち。HERZの革カバーは、ずっと手元に持っておきたい感じがあった。安っぽい、ペラペラの革ではなく、重みがあって、手に馴染む感じ。色、質感も求めていたものだった。「うんうん、これこれ！」ぼくはもう、カバーを手に抱えていた。## ほぼ日手帳 Hobonichi Planner 2015にカバーをつけた状態ほぼ日手帳にカバーを付けたところ。ほぼ日手帳用に作られているだけあって、収まりはよい。    ## ペンホルダーペンホルダーは、こんな感じで、小さめの万年筆ならすっぽり入り、ジェットストリームもご覧のとおり、ちゃんと収まります。  ## ２つのしおり若干硬いのでいつのまにか、しおりとしての機能を果たしてないときもありますが、２つあるおかげで、今月と今日のしおりとして機能する。  皮のカバーをお探しの方は、ヘルツにいってみてはいかがでしょうか？ほぼ日手帳カバー(KB-104)はHERZオリジナルレザーを使用した柔らかい風合いの手帳カバー「HERZ(ヘルツ)公式通販」  決して安くはないけれども、自分が毎日使うものなら心がウキウキするような、自分が好きなものを使ってみませんか？     ほぼ日手帳カバーSサイズ（文庫オリジナルサイズ） 手作り鞄工房HERZ（ヘルツ）[nouki]【楽ギフ_包装】《KB-104-S》P27Mar15 posted with カエレバ     楽天市場  Amazon       普段使うノート類も全部、カバーをかけたい気持ちになりましたが我慢我慢。最近、安くていいじゃんよりも、ちょっと高くても自分の好きなもので身の回りを満たしたい願望が高まってきた。
---title: "vagrant plugin install hostmanager実行時のnokogiriインストールエラーの解決"date: 2015-04-05T19:23:00+09:00comments: truecategory: ['Tech']tags: ['vagrant']published: trueslug: vagrant-plugin-install-hostmanager-nokogiri-error---マルチドメインのテストがしたくて、vagrantでホスト名を指定するにはどうすればよいか調べた。`vagrant-hostmanager`というプラグインが使えそうなのでインストールしてみたところ、nokogiriインストールエラーが発生したので、解決方法をメモする。{{% googleadsense %}}## 前提- Mac OS mavericks- vagrant -v 1.6.4- ruby 2.0.0p353 (2013-11-22 revision 43784) [x86_64-darwin12.5.0]## vagrant-hostmanager`vagrant up`するときに、`/etc/hosts` を書き換えるみたい。[smdahlen/vagrant-hostmanager · GitHub](https://github.com/smdahlen/vagrant-hostmanager)## インストール時のinstall nokogiriのエラー```bashvagrant plugin install vagrant-hostmanager```上記コマンドで簡単にインストールできるかとおもいきや、nokogiriのインストールでコケる。```bash$ vagrant plugin install vagrant-hostmanager --verboseInstalling the 'vagrant-hostmanager' plugin. This can take a few minutes...Fetching source index from http://gems.hashicorp.com/Fetching gem metadata from https://rubygems.org/.........Fetching additional metadata from https://rubygems.org/..........Resolving dependencies...Using builder 3.2.2Using gyoku 1.1.1Using mini_portile 0.6.2Gem::Installer::ExtensionBuildError: ERROR: Failed to build gem native extension.    /Applications/Vagrant/embedded/bin/ruby extconf.rbchecking if the C compiler accepts ... nochecking if the C compiler accepts -Wno-error=unused-command-line-argument-hard-error-in-future... noBuilding nokogiri using packaged libraries.checking for gzdopen() in -lz... yeschecking for iconv using --with-opt-* flags... nochecking for iconv... no-----libiconv is missing.  Please locate mkmf.log to investigate how it is failing.-----*** extconf.rb failed ***Could not create Makefile due to some reason, probably lack of necessarylibraries and/or headers.  Check the mkmf.log file for more details.  You mayneed configuration options.Provided configuration options:	--with-opt-dir	--with-opt-include	--without-opt-include=${opt-dir}/include	--with-opt-lib	--without-opt-lib=${opt-dir}/lib	--with-make-prog	--without-make-prog	--srcdir=.	--curdir	--ruby=/Applications/Vagrant/embedded/bin/ruby	--help	--clean	--use-system-libraries	--enable-static	--disable-static	--with-zlib-dir	--without-zlib-dir	--with-zlib-include	--without-zlib-include=${zlib-dir}/include	--with-zlib-lib	--without-zlib-lib=${zlib-dir}/lib	--enable-cross-build	--disable-cross-buildGem files will remain installed in /Users/meganii/.vagrant.d/gems/gems/nokogiri-1.6.6.2 for inspection.Results logged to /Users/meganii/.vagrant.d/gems/gems/nokogiri-1.6.6.2/ext/nokogiri/gem_make.outBundler, the underlying system Vagrant uses to install plugins,reported an error. The error is shown below. These errors are usuallycaused by misconfigured plugin installations or transient networkissues. The error from Bundler is:An error occurred while installing nokogiri (1.6.6.2), and Bundler cannot continue.Make sure that `gem install nokogiri -v '1.6.6.2'` succeeds before bundling.````libiconv is missing.  Please locate mkmf.log to investigate how it is failing.`　あたりのエラーから、libiconvのインストールが出来てなさそうと当たりをつけて調べてみた。以下を参考に、`brew install`, `brew link`の後、パラメタを指定して、`gem install nokogori`を試すと、成功した。[Nokogiri on OSX - Qiita](http://qiita.com/maestro/items/4e287824e62bb8c2eda4)```bashbrew install libxml2 libxslt libiconv``````bash$ brew install libxml2 libxslt libiconvWarning: libiconv-1.14 already installed==&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/libxml2-2.9.2.mavericks.bottle.tar.gz######################################################################## 100.0%==&gt; Pouring libxml2-2.9.2.mavericks.bottle.tar.gz==&gt; CaveatsThis formula is keg-only, which means it was not symlinked into /usr/local.Mac OS X already provides this software and installing another version inparallel can cause all kinds of trouble.Generally there are no consequences of this for you. If you build yourown software and it requires this formula, you'll need to add to yourbuild variables:    LDFLAGS:  -L/usr/local/opt/libxml2/lib    CPPFLAGS: -I/usr/local/opt/libxml2/include==&gt; Summary🍺  /usr/local/Cellar/libxml2/2.9.2: 275 files, 11M==&gt; Downloading https://downloads.sf.net/project/machomebrew/Bottles/libxslt-1.1.28.mavericks.bottle.1.tar.gz######################################################################## 100.0%==&gt; Pouring libxslt-1.1.28.mavericks.bottle.1.tar.gz==&gt; CaveatsTo allow the nokogiri gem to link against this libxslt run:  gem install nokogiri -- --with-xslt-dir=/usr/local/opt/libxsltThis formula is keg-only, which means it was not symlinked into /usr/local.Mac OS X already provides this software and installing another version inparallel can cause all kinds of trouble.Generally there are no consequences of this for you. If you build yourown software and it requires this formula, you'll need to add to yourbuild variables:    LDFLAGS:  -L/usr/local/opt/libxslt/lib    CPPFLAGS: -I/usr/local/opt/libxslt/includeIf you need Python to find bindings for this keg-only formula, run:  echo /usr/local/opt/libxslt/lib/python2.7/site-packages &gt;&gt; /usr/local/lib/python2.7/site-packages/libxslt.pth==&gt; Summary🍺  /usr/local/Cellar/libxslt/1.1.28: 145 files, 3.3M``````bashbrew link libxml2 --forcebrew link libxslt --forcebrew link libiconv --force``````bashARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future NOKOGIRI_USE_SYSTEM_LIBRARIES=1 gem install nokogiri -- --use-system-libraries --with-iconv-dir="$(brew --prefix libiconv)" --with-xml2-config="$(brew --prefix libxml2)/bin/xml2-config" --with-xslt-config="$(brew --prefix libxslt)/bin/xslt-config"``````bashNOKOGIRI_USE_SYSTEM_LIBRARIES=1 vagrant plugin install vagrant-hostmanager```## 別のプラグインを入れたら`vagrant`が壊れたので、結局vagrantも最新化した以下のサイトから、最新版を入れなおした。http://www.vagrantup.com/downloads## 参考- [Nokogiri on OSX - Qiita](http://qiita.com/maestro/items/4e287824e62bb8c2eda4)- [【Ruby2.0.0 or 1.9.3 on Rails4.0】 Nokogiri 1.6.0 インストールできない？！ - TACATAKATACA BLOG](http://tacatakatca.hatenablog.com/entry/20131020/1382270726)
---title: "ページ毎の検索キーワードを知る"date: 2015-04-11T19:27:00+09:00comments: truecategory: ['Tech']tags: ['GoogleAnalytics','web']published: trueslug: search-keyword-by-pageimg: "https://farm9.staticflickr.com/8711/17105512542_883c372f86_z.jpg"---ページ毎の検索キーワードを確認する方法としては、以下のとおり。1. Google Analyticsを使う2. ウェブマスターツールを使う{{% googleadsense %}}## 1. Google Analyticsを使う1. 行動 &gt; サイト コンテンツ &gt; すべてのページを選択する2. 「ページ別訪問数」を選択する3. セカンダリ ディメンションで「キーワード」を選択する   これで、ページごとにどんな検索キーワードでアクセスされたかが分かる。  ただし、(not provided)	とか、(not set)が目立ち、何で検索されたのかがほとんど分からない。これは、Google検索がSSL通信で行われるようになったためらしい。回避するためには、ウェブマスターツールを利用する。Google Analyticsのnot provided対策方法まとめ | 株式会社LIG  ## 2. ウェブマスターツールを使う1. 検索トラフィック &gt; 検索クエリを選択する2. 「上位のページ」タブを選択する  これで、各ページ毎のキーワードを解析できる。そもそものアクセス数が少ないので、たいした解析なんてできないが、どんなキーワードで検索されているのかという興味を満たすことができるようになった。無料でできる！ 世界一やさしいGoogle Analytics アクセス解析入門[Kindle版] 丸山耕二 秀和システム 2014-02-13             売り上げランキング : 9299  Kindle  Amazon[書籍版]                                                                                           				  				  				  				by ヨメレバ
---title: "[読書メモ]99%の人がしていない たった1%の仕事のコツ"date: 2015-04-26T19:13:00+09:00comments: truecategory: ['Art']tags: ['biz']published: trueimg: "https://images-na.ssl-images-amazon.com/images/I/41XG-xJvZSL._SL160_.jpg"slug: 99-percent-people-can-not-do---ざーっと流し読みして、自分の中に引っかかった点は、以下の3点。1. 「とりあえず」、ではなく「まず」！  2. 聞かれたことに答える 3. 優先順位を決める {{% googleadsense %}}## 1. 「とりあえず」、ではなく「まず」！「時間がなくてとりあえず作りました」ではなくて、「結構まとまってると思います」と前置きすることで、相手の印象が違ってくるというもの。&gt; 自分からわざわざ、逆風を作り出して、無用な労力・時間を生むような愚はあえておかさない確かに、自分からわざわざマイナスのイメージを与えてもしょうがない。ただし、自分でもやりかねないと思うのは、「とりあえず。仕掛品です」と言っておけば、資料に満足してもらえなかったときの言い訳を作ってるのだと思う。「とりあえず作りました」は、やめておこう。## 2. 聞かれたことに答えるまず、相手が一番聞きたいことに最初に答えること。これは、自分もやりかねないし。自分が質問したときも、必要な回答が返ってこないとうーんとなる。## 3. 優先順位を決める&gt; 迷うという時間ほど無駄なものはない。今日何をすべきか。次に何をすべきか。あらかじめ決めておかなければ、なかなかつらい。     99%の人がしていない たった1%の仕事のコツ posted with ヨメレバ   河野 英太郎 ディスカヴァー・トゥエンティワン 2012-03-12       Amazon  Kindle  楽天ブックス                   	  	  	          
---title: "Middleman getting start"date: 2015-05-09T12:57:00+09:00comments: truecategory: ['Tech']tags: ['middleman']published: trueslug: middleman-getting-start---Middlemanでの構築メモ。{{% googleadsense %}}## MiddlemanにBlog機能を持たせる素の状態のMiddlemanで`middleman init new_site`をしたときに、デザインがあまりにもアレだったので、心が折られてしまった。そこで、以下の記事を参考に、最低限のデザインをもったサイトを構築する。(何もない状態から、ガシガシ作っていけるひとはいいんだが、自分も心が折れました。。。)[Sass - Middleman を使ってブログを作る (心折られずに) - Qiita](http://qiita.com/5t111111/items/7a7600b463256f1d4122)```gem install middleman``````middleman init my_new_project --template=blog-bootstrap``````cd my_new_projectbower installbundle install``````bundle exec middleman server``````middleman init```
---title: "Middlemanで静的サイト構築 -Middlemanで複数ブログを構築-"date: 2015-05-10T09:05:00+09:00comments: truecategory: ['Tech']tags: ['middleman']published: trueslug: middleman-multiple-blogs---Middlemanで複数ブログを設定する際のメモ。{{% googleadsense %}}## Middleman[Sass - Middleman を使ってブログを作る (心折られずに) - Qiita](http://qiita.com/5t111111/items/7a7600b463256f1d4122)上記のサイトを見ながら、middleman-blog-bootstrap-templateを導入済み。## 複数ブログの前提### blogの名前blog1, blog2は以下の2つを運用する。- http://domain.com/blog1/posttitle/- http://domain.com/blog2/posttitle/### ディレクトリの構成ディレクトリの構成は、`source`ディレクトリに`blog1`, `blog2`を作成する。その配下に`posts`ディレクトリを作成し、ブログ記事を格納する。```source├─blog1　　├─posts├─blog2　　├─posts```## Middlemanで複数ブログ設定をするポイント### ポイント1 name, prefixの設定以下のブログ機能の設定を複数定義する。そのとき、`name`,`prefix`を別々に定義する。- name- prefix```rubyactive :blog do |blog|end```上記の設定を複数定義すればよい。&gt; Middleman は 1 つのサイトの中で複数のブログを設置できます。1 つ以上のブログを作るには, 単に :blog 拡張を複数回有効化するだけです#### config.rb```ruby## １つ目のブログ設定activate :blog do |blog|  blog.name = "blog1"  blog.prefix = "blog1"  blog.permalink = "{title}/index.html"  blog.sources = "posts/{year}-{month}-{day}-{title}.html"  blog.taglink = "tags/{tag}/index.html"  blog.layout = "post"  blog.year_link = "{year}/index.html"  blog.month_link = "{year}/{month}/index.html"  blog.day_link = "{year}/{month}/{day}/index.html"  blog.default_extension = ".md"  blog.tag_template = blog.prefix + "/tag.html"  blog.calendar_template = blog.prefix + "/calendar.html"  # Enable pagination  blog.paginate = true  blog.per_page = 10end## 2つ目のブログ設定activate :blog do |blog|  blog.name = "blog2"  blog.prefix = "blog2"  blog.permalink = "{title}/index.html"  blog.sources = "posts/{year}-{month}-{day}-{title}.html"  blog.taglink = "tags/{tag}/index.html"  blog.layout = "post"  blog.year_link = "{year}/index.html"  blog.month_link = "{year}/{month}/index.html"  blog.day_link = "{year}/{month}/{day}/index.html"  blog.default_extension = ".md"  blog.tag_template = blog.prefix + "/tag.html"  blog.calendar_template = blog.prefix + "/calendar.html"  # Enable pagination  blog.paginate = true  blog.per_page = 10end```### ポイント2 blog_controller.nameを設定するconfig.rbに、:blog拡張を複数回有効にした後、テンプレートのページや、タグページの中で、ブログ記事を取得している部分に、どちらのブログを取得するか指定する必要がある。以下のとおり、ヘルパーメソッドを修正していく。```diff- page_articles.each_with_index+ page_articles(blog_controller.name).each_with_index ``````diff- blog.tags.each do |tag, articles|+ blog(blog_controller.name).tags.each do |tag, articles|``````diff- tag_path(tag)+ tag_path(tag, blog_controller.name)``````diff- blog_year_path(year)+ blog_year_path(year, blog_controller.name)```### ポイント3 Frontmatterに、`blog: blog_name`の設定を追加するブログ記事の読込の際は、`page_articles(blog_controller.name).each_with_index`で自動的に(階層から識別している？)対象のブログを読み込んでくれる。しかし、タグページや、カレンダーのページに記載しているものについては、上手く対象を読み込んでくれなかった。そこで、`source`ディレクトリ直下においていた、`index.html.slim`, `calandar.html`と`tag.html`をblog1, blog2のディレクトリ直下にコピーして、Fontmatterにblogの識別子を記載することで解決した。下記は、blog1の設定だけだが、blog2も同様に設定する。#### index.html.slim ```ruby---pageable: trueper_page: 10blog: blog1---h1 blog1- page_articles(blog_controller.name).each_with_index do |article, i|  h1    = link_to article.title, article  p    - article.tags.each do |tag|      small.label.label-default        = tag  hr  p    span.glyphicon.glyphicon-time    |  Posted on     = article.date.strftime('%b %e')  hr  - if article.data.image_src    img.img-responsive src=article.data.image_src    hr  = article.summary  a.btn.btn-primary href=article.url    | Read More    span.glyphicon.glyphicon-chevron-right  hr- if paginate  - if num_pages &gt; 1    .well-sm      ul.pager        - if page_number &gt; 1          li.previous            = link_to '←', prev_page        span.text-center          | Page           = page_number          |  of           = num_pages        - if page_number &lt; num_pages          li.next            = link_to '→', next_page```#### calandar.html```ruby---pageable: trueblog: blog1--- h1  | Archive for   - case page_type  - when 'day'    = Date.new(year, month, day).strftime('%b %e %Y')  - when 'month'    = Date.new(year, month, 1).strftime('%b %Y')  - else    = year- if paginate &amp;&amp; num_pages &gt; 1  p    | Page     = page_number    |  of     = num_pages  - if prev_page    p      = link_to 'Previous page', prev_pageul  - page_articles(blog_controller.name).each_with_index do |article, i|    h2      = link_to article.title, article    p      - article.tags.each do |tag|        small.label.label-default          = tag    hr    p      span.glyphicon.glyphicon-time      |  Posted on       = article.date.strftime('%b %e')    hr    - if article.data.image_src      img.img-responsive src=article.data.image_src      hr    = article.summary    a.btn.btn-primary href=article.url      | Read More      span.glyphicon.glyphicon-chevron-right    hr- if paginate  - if next_page    p      = link_to 'Next page', next_page```#### tag.html```ruby---pageable: trueper_page: 12blog: blog1---h1  | Articles tagged '  = tagname  | '- if paginate &amp;&amp; num_pages &gt; 1  p    | Page     = page_number    |  of     = num_pages  - if prev_page    p      = link_to 'Previous page', prev_pageul  - page_articles(blog_controller.name).each_with_index do |article, i|    h2      = link_to article.title, article    p      - article.tags.each do |tag|        small.label.label-default          = tag    hr    p      span.glyphicon.glyphicon-time      |  Posted on       = article.date.strftime('%b %e')    hr    - if article.data.image_src      img.img-responsive src=article.data.image_src      hr    = article.summary    a.btn.btn-primary href=article.url      | Read More      span.glyphicon.glyphicon-chevron-right    hr- if paginate  - if next_page    p      = link_to 'Next page', next_page```## ハマった点:blog拡張を複数有効にした後、試しに`bundle exec middleman`で確認する際に、以下のエラーメッセージに悩まされた。```You must either specify the blog name in calling this method or in your page frontmatter (using the 'blog' blog_name)```2つのblogを認識できてないため、識別子を指定しなければならないのだが、指定方法がなかなか分からなかった。指定方法については、ポイント2、ポイント3の記述で解決できた。## 参考- [Middleman: ブログ機能](https://middlemanapp.com/jp/basics/blogging/)- [初めてのMiddleman：Middleman-blogでマルチブログを試してSkeletonを作った | Webデザイン、フロントエンド系の技術に関する備忘録 - whiskers](http://whiskers.nukos.kitchen/2015/03/04/middleman-multi-blog-skeleton.html)
---title: "[SQL実践入門]結合のアルゴリズム Nested Loops, Hash, Sort Merge"date: 2015-06-01T00:48:00+09:00comments: truecategory: ['Tech']tags: ['DB']published: trueimg: "https://images-na.ssl-images-amazon.com/images/I/51pl3HrLCjL._SL160_.jpg"slug: how-to-move-join-nestedloops-hash-sortmerge---データベースの結合のイメージがいまいち掴めていなかったため、「SQL実践入門」を読んで、結合のアルゴリズムをまとめておく。     SQL実践入門──高速でわかりやすいクエリの書き方 (WEB+DB PRESS plus) posted with ヨメレバ   ミック 技術評論社 2015-04-11       Amazon  Kindle  楽天ブックス                   	  	  	          ## 結合の種類結合の種類としては、以下の3種類が存在する。- Nested Loops- Hash- SortMerge{{% googleadsense %}}## Nested Loops入れ子のループを使うアルゴリズム。  外側のループの対象となるテーブル(Table_A)を駆動表(driving table)もしくは、外部表(outer table)と呼ぶ。### 結合の流れ1. 駆動表の1行に対して、内部表を1行ずつスキャンして、結合条件にマッチするものを返却する。2. 駆動表の全ての行に対して繰り返す。Table_A、Table_Bの結合対象の行数をそれぞれR(A)、R(B)とすると、アクセスする行数は`R(A)×R(B)`となる。### どちらのテーブルを駆動表にするか？一見、どちらのテーブルを駆動表にしてもアクセス行数は、`R(A)×R(B)`と`R(B)×R(A)`で変わらないように思われるが、駆動表の選択はNested Loopsの性能において重要な意味を持つ。⇛「駆動表が小さいほど、Nested Loopsの性能は良い」ここで重要な点は、内部表の列にインデックスが存在すること。内部表の結合キーの列にインデックスが存在する場合、そのインデックスをたどることによって、DBMSは駆動表の1行に対して内部表を馬鹿正直にループする必要がなくなる。  理想的なケースとして、駆動表のレコード1行に対して内部表のレコードが1行に対応していれば、内部表のインデックスをたどることでループすることなく1行を特定できる。その結果、アクセス行数は、`R(A)×2`となる。### 内部表のループをどれだけスキップできるかがポイント  - 内部表が結合キーで一意だと内部ループを完全にスキップ可能- 内部表が結合キーで一意にならないと内部ループが残る### SQLチューニングの基本1. 駆動表の小さなNested Loops2. 内部表の結合キーにインデックス## Hash  - 結合テーブルからハッシュテーブルを作成するため、Nested Loopsと比べるとメモリを多く消費する- メモリ内にハッシュテーブルが収まらないとストレージを使用して、遅延が発生する　⇛　 **「Temp落ち」**- 出力となるハッシュ値は、入力値の順序性を保存しないため、等値結合でしか使用できない### Hash Joinが有効なケース- Nested Loopsで適切な駆動表(相対的に十分に小さいテーブル)が存在しない場合- 駆動表として小さいテーブルは指定できるが、内部表のヒット件数が多い場合- Nested Loopsの内部表にインデックスが存在しない場合## SortMerge  - 対象テーブルをどちらもソートする必要があるため、Nested Loopsよりも多くのメモリを消費する- Hashと違い、等値結合だけでなく、不等式(&lt;.&gt;, &lt;=, &gt;=)を使った結合にも利用できる## 参考図書     SQL実践入門──高速でわかりやすいクエリの書き方 (WEB+DB PRESS plus) posted with ヨメレバ   ミック 技術評論社 2015-04-11       Amazon  Kindle  楽天ブックス                   	  	  	          
---title: "[SQL実践入門]内部結合と外部結合のイメージ"date: 2015-06-10T07:58:00+09:00comments: truecategory: ['Tech']tags: ['DB']published: trueimg: "https://images-na.ssl-images-amazon.com/images/I/51pl3HrLCjL._SL160_.jpg"slug: inner-join-outer-join---内部結合と外部結合の「内部」と「外部」はどこから来ているのかクロス結合を元に説明している箇所を抜き出してまとめる。     SQL実践入門──高速でわかりやすいクエリの書き方 (WEB+DB PRESS plus) posted with ヨメレバ   ミック 技術評論社 2015-04-11       Amazon  Kindle  楽天ブックス                   	  	  	          {{% googleadsense %}}  ## クロス結合(Cross Join) すべての結合の母体数学的には、直積、デカルト積と呼ばれる演算である。結合対象となる2つの手0ブルのレコードから可能なすべての組み合わせ網羅を行う演算。## 内部結合(Inner Join)### 何の内部？内部とは「直積の部分集合」相関サブクエリとして書き換え可能だが、基本的に結合で記述できる限りは結合を選択するのがよい。### Why？内部結合を相関サブクエリとして書き換えた場合、結果行数だけ相関サブクエリを実行するためコストが高くなる。## 外部結合(Outer Join)### 何の外部か？外部とは、直積の部分集合にならないという意味である。外部結合の結果には、マスタ側のテーブルだけに存在するキーがあった場合、そのキーを削除せずに、結果に保存するように動作する。キーの値をすべて網羅するレイアウトのレポートを作成する場合に多用される。## 感想数年前は、外部結合の意味が全然分からず、Oracleでいうと(+)をつけておけばとりあえずいいんでしょうという理解しかなかったので、今思うと恐ろしい。## 参考     SQL実践入門──高速でわかりやすいクエリの書き方 (WEB+DB PRESS plus) posted with ヨメレバ   ミック 技術評論社 2015-04-11       Amazon  Kindle  楽天ブックス                   	  	  	          
---title: "アジャイルレトロスペクティブズ"date: 2015-06-11T22:47:00+09:00comments: truecategory: ['Book']tags: ['ファシリテーション','ふりかえり']published: trueimg: https://images-na.ssl-images-amazon.com/images/I/51c-0ixFQUL._SL160_.jpgslug: agile-retrospectives---漠然と「ふりかえり」をやってきたが、ふりかえりとはどのようにすべきか？何を目的とするか？どういった方法で行うのがよいのか？という疑問が浮かんできた。本書が、これらの疑問への回答のヒントになるのではないかと思い、内容を押さえていく。「アジャイルレトロスペクティブズ」と銘打っているが、要は、「ふりかえり」の教科書である。     アジャイルレトロスペクティブズ　強いチームを育てる「ふりかえり」の手引き posted with ヨメレバ   Esther Derby,Diana Larsen オーム社 2007-09       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     ふりかえりは、以下の5つの内容で構成されるべきである。1. 場を設定する2. データを収集する3. アイデアを出す4. 何をすべきか決定する5. レトロスペクティブスを終了する{{% googleadsense %}}## 1. 場を設定するまず、ふりかえりの始めに、以下の点を合意を取る。- 目的-  何にフォーカスするか、何に着目するか-  所要時間-  時間の使い方また、チームの約束を決める・レビューする。（ファシリテートの文脈だと、「グランドルール」に該当するのかもしれない）場を決定する時間を飛ばしたり、「節約」してはいけない。後々、ふりかえり中、口を開かない。集中できないなど、場を設定しないことは高くつく。これは、経験がある。ふりかえりの目的がはっきりしていないと、何をふりかえればよいかが分からなくなり、話がまとまらない。また、いきなり本題から入っていっても周りの人のモードが切り替わっておらず、集中できていないことがあった。まずは、場をあたためる、目的・ゴールを定めることが重要である。## 2. データを収集するPhoto: undefined by Garrett Coakleyまずは、客観的なデータを収集することから始める。客観的なデータとは、以下のイベントやメトリクスなどである。### イベント- ミーティング- 何らかの決定- チームメンバの変更- マイルストーン- お祝い事- 新しい技術など、チームの誰かに関係のあるすべてのイベントを指す。### メトリクス- バーンダウンチャート- ベロシティ（速度）- 不具合の発生数- 完了したストーリーの数- リファクタリングされたコード量- エフォートデータ（工数の算出元になるデータ）次に、感情のデータを集める。感情のデータとは、怒り、悲しい、楽しいなど各個人の気持ちを表すものである。例えば、カラードットシールなどで、気持ちの浮き沈みを表すなどが挙げられる。データ（客観的データ、感情データ）を集めることで、共通の理解を作ることができる。この共通理解がなければ、ふりかえりでメンバが集まってきても、個々の自分だけが知っているデータだけでものを考えることになってしまう。共通理解ができることで、「チーム」として変更や試みにコミットできるようになる。## 3. アイデアを出すチームに、以下のことを調査・検討してもらう。- 成功へと繋がる状況、相互作用、パターン- 不具合や欠陥はどうだったか？なぜ起きたか？- リスクと予期しないイベントや結果問題が起きると、人はすぐに解決策を求めるが、最初に思いつく策は、だいたい間違っている。このフェーズでやるべきことは、- どんな解決策があるか、さらなる可能性を調べること- 問題の原因とその影響をみて、分析的に考えること- 上記2点を、「チーム」が一緒に考えること。このフェーズでアイデアを出すことで、チームはより効果的な働き方に気付くことができる。その気づきこそが、レトロスペクティブス、ふりかえりの効果である。## 4. 何をすべきか決定する試みやアクションを計画するチームに、構成やガイダンスを提供すること。計画を作ったら、担当者の割り振りを決めること。個人のコミットメントがないと、人々はチームのタスクだと思い、誰もやらなくなってしまう。## 5. レトロスペクティブスを終了する経験を文書化する方法を決めて、フォローアップを計画すること。1. 場を設定する2. データを収集する3. アイデアを出す4. 何をすべきか決定する5. レトロスペクティブスを終了するを使うと、チームに以下の考えるが身に付く。- 異なる視点を理解する- 自然な順番で考える- 現在の仕事のやり方やプラクティスに包括的な視点を持つ- 予定調和で終わらせず、必要なところでは議論を許容する- 具体的なアクションや試みを次のイテレーションで使えるようにしてふりかえりを終える## 参考     アジャイルレトロスペクティブズ　強いチームを育てる「ふりかえり」の手引き posted with ヨメレバ   Esther Derby,Diana Larsen オーム社 2007-09       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     
---title: "scrum boot camp the book"date: 2015-06-21T20:20:00+09:00comments: truecategory: ['Tech']tags: ['scrum','agile']published: trueslug: scrum-boot-camp-the-bookimg: "https://images-na.ssl-images-amazon.com/images/I/51q3GMM3rjL._SL160_.jpg"---     SCRUM BOOT CAMP THE BOOK posted with ヨメレバ   西村 直人,永瀬 美穂,吉羽 龍太郎 翔泳社 2013-02-13       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     {{% googleadsense %}}
---title: "ワールド・カフェのプロセス"date: 2015-06-28T12:06:00+09:00comments: truecategory: ['Life']tags: ['ファシリテーション']published: trueimg: "https://images-na.ssl-images-amazon.com/images/I/41Xz5nbHwbL._SL160_.jpg"slug: process-for-world-cafe---{{% googleadsense %}}## ワールド・カフェの標準プロセス### 第1ラウンド テーマについて探求する参加者が4〜5名ずつのグループに分かれて、テーブルの上の模造紙に、話した内容を落書き(ラフに書きながら)しながら会話をする。### 第2ラウンド アイデアを他花受粉する各テーブルプ一人だけ「テーブル・ホスト」を残して、他の参加者は「旅人」になって、他のテーブルに移動する。移動先のテーブルでは、テーブル・ホストが出迎えて、自己紹介を行なった後、テーブル・ホストが第1ラウンドでどのようなアイデアが話し合われたのかを「旅人」に説明する。説明を聞いた旅人は、自分がいたテーブルでの話し合いの内容を紹介し、模造紙の上に新しいアイデアを追加したり、つながりを表現したりする。ミツバチが花から花へと移動することにより、他花受粉するのと同じような効果### 第3ラウンド　気づきや発見を統合する第3ラウンドでは、旅人が再び元のテーブルに戻し、旅先で得たアイデアを持ち帰ってメンバーとのダイアログを続ける。### 全体セッション 集合的な発見を収穫し、共有する第3ラウンドを終えると、カフェ・ホストがファシリテーターになって、参加者全員でダイアログを行い、それまでに得られたアイデアを共有する。
---title: "ワールドカフェの問いを作るには？"date: 2015-06-28T11:27:00+09:00comments: truecategory: ['Life']tags: ['world cafe','ファシリテーション']published: trueimg: "https://images-na.ssl-images-amazon.com/images/I/51HYAe3SrUL._SL160_.jpg" slug: what-is-good-questions-for-world-cafe---ワールド・カフェにおいて大切な問いを作るためにはどう考えればよいか？ワールド・カフェにおいて、「問い」の設定が大切なのは分かるが、どのような「問い」を設定すればよいのか？以下の2冊のワールド・カフェ本を読んで内容をまとめる。     ワールド・カフェをやろう！ posted with カエレバ   香取 一昭,大川 恒 日本経済新聞出版社 2009-11-13       Amazon  楽天市場          ワールド・カフェ~カフェ的会話が未来を創る~ posted with カエレバ   アニータ ブラウン / デイビッド アイザックス / ワールド・カフェ・コミュニティ ヒューマンバリュー 2007-09-28       Amazon  楽天市場     {{% googleadsense %}}書籍「ワールド・カフェ　カフェ的会話が未来を創る」では、問いをつくる際の留意点を以下のように述べている。## 留意点- 参加者がぜひとも話したくなるような問いを提示する- 主催者がテーマに基づき、その時にどんな場を作りたいか？どんな対話が起こって欲しいかを意識して問いを作る- 本当に大切なテーマに対しての目的意識、焦点、エネルギー、直接的な関心を向けられるようによく練ること- オープンな問いにする(イエス・ノーでは答えられないもの)- 直接的なアクション項目、あるいは問題解決を求めるものである必要はない- 探求を引き起こすものであるほうがよい- ポジティブな問いを立てる- 力強い問いを作る### 「オープン」「ポジティブ」「力強い問い」「オープンな質問」であることが必要なのは、間違いない。イエス・ノーでは答えらないオープンな質問だからこそ、どんなものが考えられるか？など探求が引き起こされるはずだし、話しがいのある問いになりうる。また、「ポジティブな問い」とは次のような考える上での意識がネガティブではなく、ポジティブになるような問いにするということである。- ネガティブな問い: 「なぜうちの学校はこんなにも問題が多いのか？」- ポジテイブな問い: 「よりよい学校とはどうあるべきか？」この例だと、「うちの学校」-&gt; 「学校全体」という考える視点、範囲もより広く、上を向くことになる。では、「力強い問い」とはどんなものだろうか？これも、本書の中で以下のように定義している。## 力強い問いとは？- シンプルで明確な問い- 発想を促す問い- エネルギーが湧いてくる問い- テーマに集中して探求することを促す問い- これまでの仮設や思い込みを気づかせる問い- 理想の状態、新しい可能性を開く問い- より深い内省を促す問い- 自分事として考えられる問い## 参照図書     ワールド・カフェをやろう！ posted with カエレバ   香取 一昭,大川 恒 日本経済新聞出版社 2009-11-13       Amazon  楽天市場          ワールド・カフェ~カフェ的会話が未来を創る~ posted with カエレバ   アニータ ブラウン / デイビッド アイザックス / ワールド・カフェ・コミュニティ ヒューマンバリュー 2007-09-28       Amazon  楽天市場     
---title: "Swiftで初めてのMacOSXアプリケーション-FFViewer-"date: 2015-07-04T18:23:00+09:00comments: truecategory: ['Tech']tags: ['Swift','Cocoa','Xcode']published: true img: "https://c4.staticflickr.com/4/3877/19396261452_c2ec154bfd_n.jpg" slug: building-cocoa-os-x-application-with-swfit-in-xcode---  ## つくりたいものJekyllのPost用として書いたMarkdownのFrontFormatterの情報を読み込んで表示し、編集、再出力ができるツール。WebアプリケーションとしてViewerまでは作ったけど、編集まで考えるとなかなかめんどくさいので活用できなかった。(今どんな情報を書いていたのかは把握出来たが)[Jekyllのタグとカテゴリを整理するために、一覧表示するWebアプリ(個人用)をつくった](http://meganii.com/blog/2014/12/13/jekyl-front-matter-viewer/)Objective-Cは、ちょっと触りたくなかったが、SwiftでMacアプリケーションも作成できるらしいので試しにつくってみた。{{% googleadsense %}}## 作ったもの  [meganii/FFViewer](https://github.com/meganii/FFViewer)## 前提- Xcode Version 6.4 (6E35b)- Swift1.2 重い腰をあげて、Yosemiteにアップグレードした。## ハマった点- Xcodeが分からない- Swiftの文法が分からない- tableViewの実装の仕方が分からない## 正規表現```let pattern = "---"let regex = NSRegularExpression(pattern: pattern, options: NSRegularExpressionOptions.CaseInsensitive, error: nil)let regex = NSRegularExpression(pattern: pattern, options: NSRegularExpressionOptions.CaseInsensitive, error: nil)var matches=regex?.matchesInString(content, options: nil, range:NSMakeRange(0,  content.length)) as Array```## tableViewの実装- `optional func numberOfRowsInTableView(_ aTableView: NSTableView) -&gt; Int`- `optional func tableView(_ aTableView: NSTableView, objectValueForTableColumn aTableColumn: NSTableColumn?, row rowIndex: Int) -&gt; AnyObject?`tableViewを利用する際に、必ず実装しないといけないのが、上記２つの関数である。[SwiftでOS Xアプリケーションのプログラミング - 表](http://www.ne.jp/asahi/room/kuro/programmingTable.html)## tableViewのソート処理  - Xcode側で、紐付けをしておく`tableView(tableView: NSTableView, sortDescriptorsDidChange oldDescriptors: [AnyObject])`を実装すると、ヘッダ部分をクリックしたときにこの関数が呼ばれる。sortDescriptorに、降順か昇順かが入っているのでそれをみて判断する。```    func tableView(tableView: NSTableView,        sortDescriptorsDidChange oldDescriptors: [AnyObject])  {            for sortDescriptor in tableView.sortDescriptors.reverse() as! [NSSortDescriptor] {                var key = sortDescriptor.key() as String!                if sortDescriptor.ascending {                    data.sort {(item1, item2) in return item1.prop[key] &lt; item2.prop[key]}                } else {                    data.sort {(item1, item2) in return item1.prop[key] &gt; item2.prop[key]}                }            }        tableView.reloadData()    }```## 今後実装したい- カテゴリ、タグの置換機能- 記事の中身の簡易編集- カテゴリ、タグのフィルター機能
---title: "「ワールド・カフェをやろう！」の事例からからみる目的と問い"date: 2015-07-05T20:46:00+09:00comments: truecategory: ['Facilitation']tags: ['ファシリテーション','ワールドカフェ']published: trueimg: "https://images-na.ssl-images-amazon.com/images/I/41Xz5nbHwbL._SL160_.jpg"slug: world-cafe-case---     ワールド・カフェをやろう！ posted with ヨメレバ   香取 一昭,大川 恒 日本経済新聞出版社 2009-11-13       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     書籍「ワールド・カフェをやろう！」には、企業・団体が実際に行なった事例が載っているため、内容をピックアップして、どんな目的や、どんな問いを行なっていたのかをみてみる。{{% googleadsense %}}## 合併直後のチームビルディング支社内で価値観共有の合意形成、意識付けコミュニケーションが活発で関係性の高い組織を作ることを目的とした。### 問い「強いチームとはどんなチームか？」## コスト削減カフェ### 目的1. 悩みの解決(本音で共通の悩みを話し合うことにより各人に解決策を持って帰ってもらう)2. モチベーションアップ### 問い　「全員参加で楽しくコスト削減活動を盛り上げるためには何をすればよいか」### 気をつけたポイント最後に感想を述べることは伝えずに進行した。## 戦略立案カフェ### ラウンドごとに違う問い1. 前期でできたこと、できなかったことは何だったか？2. 時期の研修は、どうあるべきか？ありたい姿はどんなものか？3. 時期の研修に具体的にどう取り組むか？⇛　最後全体セッションでグループ発表## ワークライフ・バランス推進カフェ### テーブルごとに別々の問い- ワークライフバランスが実現した状態とはどのような状態をいうのでしょうか？- ワークライフバランスを実現するためには、どのようなことが必要でしょうか？- これまであなたが経験した最もワークライフバランスがとれた状態はいつでしたか？- 男性にとっても女性にとっても働きやすい職場とはどのような職場ったのでしょうか？- ワークライフバランスは女性の活躍の場を広げるために、どのような意味を持つのでしょうか？全体セッションでは、ポストイットに以下のことを１件ずつ書いてもらって壁に貼っていった。1. 今回のカフェで最も印象に残ったキーワード(実際に話していないことでもOK)2. 明日から実行しようと考えていること## 宇都宮プライドのキックオフプライドカフェ普段なかなか話さない「宇都宮」の魅力を語る。### ラウンドごとにことなる問い1. 宇都宮に魅力を自慢したいことがあるとしたら、それは何でしょうか？場所など目に見えることでも、人々の気質など目に見えないことでもかまいません。2. 100年後の未来の宇都宮に住んでいる子孫や人々が誇りに思える宇都宮ならではの価値があるとしたらそれはどんなものでしょうか＞## 事例をみてみて事例を見てみると、企業が実施したワールドカフェでは、最後全体セッションで発表を設けることが多かった。ワールドカフェの標準プロセスだと、最後発表することは、自由な意見を出すことを妨げるためやらないとしていたが、そこは、企業向けとして何かしら結果を出すことを求めているからかもしれない。しかし、そこは初めから発表するから意見をまとめておいてとは伝えずにすることなど工夫をしている。実施した結果得られることとして、さまざまな意見を言い合うことにより、価値観が共有され、組織としてコミュニケーションが取れるようになったという。どのワールドカフェの事例でも、開始前にはアイスブレイクで、参加者の緊張を解いて、スムーズに対話に入れるように工夫をしていた。(自己紹介、チェックイン、ワークライフバランスの天秤などのワーク)
---title: "ワールド・カフェをやってみて"date: 2015-07-12T22:16:00+09:00comments: truecategory: ['Facilitation']tags: ['ワールドカフェ','ファシリテーション']published: trueimg: "https://images-na.ssl-images-amazon.com/images/I/41Xz5nbHwbL._SL160_.jpg"slug: hold-a-world-cafe---組合のイベントにて、１年間の振り返りを実施する際に、ワールド・カフェを用いて振り返りを行なった。{{% googleadsense %}}## 前提- ３ラウンド- 32人程度## 問い「誰かに魅力を」問いを作るためには、以下の記事も参考にしていただきたい。[ワールドカフェの問いを作るには？](http://meganii.com/blog/2015/06/28/what-is-good-questions-for-world-cafe/)## 構成- ワールドカフェの説明 10分- ラウンド1 20分- ラウンド2 20分- ラウンド3 15分- 全体セッション 20分まずは、ワールド・カフェの説明として、そもそもワールド・カフェとはどういうものか、他花受粉のようにいろんな意見を持ち寄り、気付きが得られるようにという説明を行なった。その後、今回のカフェの目的と問いを説明した。また、毎回のラウンドの前には、簡単な自己紹介と１年間で頑張ったことを各グループ内で話してもらうことを「チェックイン」とした。## 実際の流れ最初の1ラウンド目は、物珍しさもあって、比較的声も大きく会話が弾んでいた。一方、なかなかこちらが思い描くようには、中央の模造紙に何かを書いてもらうことが出来なかった。各グループを回りながら、「ぜひ模造紙に書いていってくださいねー」と何度もアナウンスをすることでちょっとずつ書いてくれるようになった。最初の自己紹介のときに、名前を書いてもらうとか、「問い」を中央に書いてもらうようにすることで、書くことに対する障壁が低くなったのかもしれない。2ラウンド目は、グループを変えての対話がスタート。ひと通り、前までのセッションの話題を説明した後は、ざっくばらんに笑い声や、付箋紙に書かれる文字が増えていった。3ラウンド目は、元のグループに戻ってもらい、再度どんな話があったのかを共有してもらった。このラウンドでは、気付きの統合を行なってもらう予定だったのがだ、若干飽き気味になってしまっていた感があったので、時間配分に気をつけた。休憩と同時に、隣のグループに書かれている内容で気になるものをピックアップ(ペンで印をつける)してもらった。休憩を終えた後は、全体セッションと言う形で、休憩中につけてもらったピックアップ箇所を中心に、各グループでどんな内容を話していたかを全体に向けて共有してもらった。本当なら、ホワイトボードに出てきた意見をまとめながら、やっていけばよかった。今回は、発表するだけに留めた。## Keep 良かった点・続けたい点- 自由に話をしてもらうことができた。- 全体セッションで、出てきた意見を紹介してもらうことで、意見の共有を行うことができた。## Problem 良くなかった点・反省点- ワールドカフェに参加したいと思って参加しているわけではないので、対話を行う上での-  全然関係のない雑談になってしまっているテーブルも出てきてしまった。- 自分たちが何も出来なかったので、何か作業を行えばよかった。## Try- ポイントシールを使って、それぞれの聞きたい点を可視化すればよかった## 注意点- 完全な雑談になってしまう。- 最後は、全体セッションで共有。もうちょっと、ファシリテートできたのではないか？- 自分だけが話してしまうような人がいると対話が成り立たない。## 自分自身やっててよかった点は？- 人前での発表練習- 総評、気づきをシェアする練習になった- まとめる練習
---title: "Capybaraで「Request failed to reach server, check DNS and/or server status」のエラー"date: 2015-07-25T17:29:00+09:00comments: truecategory: ['Tech']tags: ['capybara']published: trueimg: "https://images-na.ssl-images-amazon.com/images/I/51qDobozaNL._SL160_.jpg"slug: capybara-connect-error---## 現象Capybaraでhttpsのサイトにvisit('')したときに、以下のエラーが発生する。Request failed to reach server, check DNS and/or server status```/usr/local/lib/ruby/gems/2.1.0/gems/poltergeist-1.6.0/lib/capybara/poltergeist/browser.rb:323:in `command': Request failed to reach server, check DNS and/or server status (Capybara::Poltergeist::StatusFailError)	from /usr/local/lib/ruby/gems/2.1.0/gems/poltergeist-1.6.0/lib/capybara/poltergeist/browser.rb:31:in `visit'	from /usr/local/lib/ruby/gems/2.1.0/gems/poltergeist-1.6.0/lib/capybara/poltergeist/driver.rb:95:in `visit'	from /usr/local/lib/ruby/gems/2.1.0/gems/capybara-2.4.4/lib/capybara/session.rb:227:in `visit'	from /usr/local/lib/ruby/gems/2.1.0/gems/capybara-2.4.4/lib/capybara/dsl.rb:51:in `block (2 levels) in '	from itunes.rb:24:in `login'	from itunes.rb:61:in `'```{{% googleadsense %}}## 原因SSLの通信にエラーが起きてるため。&gt;The problem is most likely due to SSL certificate errors. If you start phantomjs with the --ignore-ssl-errors=yes option, it should proceed to load the page as it would if there were no SSL errors:[screen scraping - PhantomJS failing to open HTTPS site - Stack Overflow](http://stackoverflow.com/questions/12021578/phantomjs-failing-to-open-https-site/24679134#24679134)## 対処法以下のオプションを設定することで解決した。phantomjs_options: ['--ignore-ssl-errors=yes']上記オブションのみで解決しない場合は、`--load-images=no`, `--ssl-protocol=any`のオプションも試してみるとよいとのこと。```Capybara.register_driver :poltergeist do |app|  Capybara::Poltergeist::Driver.new(app, {                    js_errors: false,                    timeout: 1000,                    phantomjs_options: [                              '--load-images=no',                              '--ignore-ssl-errors=yes',                              '--ssl-protocol=any']})end```ローカル環境では、上記の「phantomjs_options」を指定しなくても動作するが、CentOS上だとエラーになる。インストールしているphantomjsの違いなのか、SSL通信をする際の挙動が違うのか理解していないため、要調査。## 参考- [Capybara と Phantomjs で ChatWork をアレしようと思ったら Capybara::Poltergeist::StatusFailError とかいわれてなにも取得できなくて困った。 - MMMPA](http://mmmpa.hatenablog.com/entry/2015/01/05/Capybara_%E3%81%A8_Phantomjs_%E3%81%A7_ChatWork_%E3%82%92%E3%82%A2%E3%83%AC%E3%81%97%E3%82%88%E3%81%86%E3%81%A8%E6%80%9D%E3%81%A3%E3%81%9F%E3%82%89_Capybara%3A%3APoltergeist%3A%3AStatusFailError_%E3%81%A8)- [selenium - Ruby: Phantom.js blocked on specific site? - Stack Overflow](http://stackoverflow.com/questions/25706563/ruby-phantom-js-blocked-on-specific-site)- [screen scraping - PhantomJS failing to open HTTPS site - Stack Overflow](http://stackoverflow.com/questions/12021578/phantomjs-failing-to-open-https-site/24679134#24679134)- [Command Line Interface | PhantomJS](http://phantomjs.org/api/command-line.html)     Rubyによるクローラー開発技法 巡回・解析機能の実装と21の運用例 posted with ヨメレバ   るびきち,佐々木 拓郎 SBクリエイティブ 2014-08-25       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     
---title: "「第4回 リアル・ウォンテッドリー」に行ってきました"date: 2015-08-04T20:39:29+09:00comments: truecategory: ['Tech']tags: ['転職','wantedly']published: trueslug: real-wantedlyimg: realwantedly-4.jpg---![wantedly](/images/realwantedly-4.jpg)[「第4回 リアル・ウォンテッドリー」運命のチームやシゴト・インターンに出会えるイベント　by Wantedly](https://www.wantedly.com/campaign/real_wantedly_4)隣の芝は青いというように元々Web系やベンチャー系にも興味があり、大阪から東京へ移動しようとしていたタイミングでもあったため、前から気になっていたWantedlyのイベントに参加してきました。{{% googleadsense %}}渋谷マークシティのワンフロアに迷いながらも到着。名前シールにエンジニアかデザイナーを記入し、今やってる仕事内容を書き、フロアに入っていく。30ぐらいの会社がブースを出していて、それぞれの会社のエンジニアやデザイナー、人事が来ていて話を聞くことができた。リアルウォンテッドリーに来ていた会社は、ベンチャー系の企業だけかと思っていたら、名前を知ってるような楽天、サイバーエージェント、accentureといった企業も来ていた。行ってみた素直な感想としては、「世の中には、いろんな仕事があるんだなぁ」という月並みな感想を抱いた。自分が知らなかった世界の話や、サービスの話を聞くのは面白い。不動産のWebサービスもあれば、地図データの可視化サービス、ソーシャルゲーム、アドテクの話、映画評価のWebサービスなどなど今まで聞いたことない話のオンパレードだった。当たり前だけど、会社によって全然雰囲気が違う。安易にWeb系の会社に飛び込むと、痛い目に合いそうだなっていうのは感じました。入る動機としては、やっぱり提供してるサービスが好きなこと、そのサービスのこういうところを改善したいっていうそう考えると、そこまで思い入れのあるサービスってないのかもしれない。自分がやったことが、直に見える、やったことが直接フィードバックされるっていうことには憧れるけど、それって例えば、自分でWebサービスを作ってみても同じことが言えるのかもしれない。もっとも、みんなに使ってもらっているサービスを改善していけるというのは面白いのかもしれないけど、ちょっと考えてみれば、どんな仕事でも工夫次第なのかと。リクナビNEXT開発の仕方を聞くと、だいたいGithub workflow, AWS, スクラム, 継続的インテグレーションは必須っぽい感じはしました。
---title: "[Alexandros] ワタリドリと私 -ROCK IN JAPAN 2015-"date: 2015-08-06T21:43:00+09:00comments: truecategory: ['Music']tags: ['Alexandros', 'ROCK IN JAPAN']published: trueimg: "https://images-na.ssl-images-amazon.com/images/I/51zFFtMtglL._SL160_.jpg"slug: alexandros-wataridori---  いきなり「ワタリドリ」で始まったAlexandros。一曲目から観客の心を掴んでいた。{{% googleadsense %}}[Champagne]改め、[Alexandros]も結成6年目だという。いつの間にか、ROCK IN JAPANの1日目のトリを務めるまで駆け上がってきた。運もあったんだろうけど、NIKEとのタイアップ、映画の主題歌の提供など、チャンスをモノにしてバンドとして毎年大きくなっていく姿を見ていると、見ていると成るべくしてなっていったのかもと思えてくる。  「もっと大きいステージでやらせてくれ」、「日の沈んだ時間帯にやらせてくれ」とステージ上で公言してきたという。確かに、毎回そんなMCをしていたかもしれない。金沢のミリオンロックでも、トリを務めていたアレキサンドロスの川上氏は、次のような話をしていた。&gt; 金沢にはあんまりいい思い出がなかった。物販の手伝いをしていた。売れているバンドのグッズの販売をしていて悔しい、いつか自分たちもあの場所に立ちたい。絶対あの場所に立ってやる。そう思っていた。でも、今年はこうやって金沢ミリオンロックのトリのステージに立つことができて最高です。有言実行して、バンドとして、毎年大きくなって行く姿をみていると、自分も頑張ろうと思えてくる。## 音楽をやっている最大の理由は自分がすきだからだけど、それと同じぐらい誰かを楽しませたいんだよね&gt; 第96話：明日発売「ワタリドリ」曲解説。長いっす。｜川上洋平オフィシャルブログ「あれきさんどろす日記」Powered by Ameba  &gt;音楽をやっている最大の理由は自分が好きだからだけど、それと同じぐらい誰かを楽しませたいんだよね。それに対する理由は特にないけど。 (中略)&gt; &gt; "傷ついたあなたを笑わせたいから"&gt; と思っても大まかな言葉では俺はしませんって事を含んでいるって事だ。"笑われたなら、笑い返せば良い"って汗だくでギターかきむしりながら演奏していたら何か笑えるじゃん。楽しいじゃん。と。その姿を観て「あーこんなアホもいるんだなー。俺はこうしよう」とか思ってくれたらそういう事。結局それが一番のためになる気がする。んだよね。アンコールで出てきた洋平の「ハハッ」と本当に楽しそうに笑って演奏する姿は、見ているこっちまで楽しくなる。人を楽しませるためには、何よりも自分が楽しんでやらないとダメなんだなぁと思う。&gt;俺の「伝え方」は考えを提示して姿を見せるって事なんだと思う。そうした時に初めて受け取り側は自分とその姿に照らし合わせるからね。客観的に。「この人はこういう人だけど自分はどんな人間なんだろう？」ってな具合にね。"city"という曲の最後は「おう、聴いてくれてありがとな。でもこの歌を聴き終わってイヤホン外したらもうあとはお前の番だ。この曲は何にも助けてくれないぞ。」って事が言いたかった。結局今も相変わらずそういうスタンスできている。## 自分はどうなの？では、社会人6年目の自分はどうだろう？自分は、チャンスをものにできているだろうか？  そもそもバッターボックスに立っているか？立とうとしているか？  そもそもそもそも、バッターボックスに立つための準備をしてきているだろうか？  現状に甘えているだけじゃないだろうか？  &gt;ワタリドリのように今、旅に立つよ。&gt;ありもしないストーリーを描いて見せるよ。読んでくれてありがとう。こっから先は、自分自身と、お前の番だよ。## まとめ「city」のときの、バックで流れている映像の疾走感。アンコールのときのアレンジの効いたワタリドリ。そして、夜空の下、また映像もそのまま宇宙へ連れて行かれそうなstarrrrrrr。視覚と聴覚で魅了される時間でした。     ALXD posted with カエレバ   [Alexandros] ユニバーサル ミュージック 2015-06-17       Amazon  楽天市場     
---title: "正規化とは何か？"date: 2015-08-07T08:46:00+09:00comments: truecategory: ['Tech']tags: ['DB']published: trueimg: "https://images-na.ssl-images-amazon.com/images/I/51vol70XHoL._SL160_.jpg"slug: normalization---達人に学ぶDB設計を読んだときのメモ。{{% googleadsense %}}## 第１正規形　スカラ値(Scalar value)「１つのセルの中には１つの値しか含まない」関数従属性(functional dependency)`Y = f(X)` : 入力Xに対して出力Yを決めるための式このとき、**YはXに従属する**という。この関係をデータベースで表すと、`{X} -&gt; {Y} `となる。Xの値を決めれば、Yの値が１つに決まる。(XおよびYは１つの列ではなく、複数の列の組み合わせであっても構わない)**i.e. 正規化とは、テーブルのすべての列が関数従属性を満たすように整理していくこと。**## 第２正規形**会社コード**, 会社名, **社員ID**, 社員名, 年数, 部署コード, 部署名{会社コード} -&gt; {会社名}主キーの一部である「会社コード」に従属している。主キーの一部の列に対して従属する列がある場合、この関係を**部分関数従属**と呼ぶ。## 正規化のポイント- 正規化とは、更新時の不都合・不整合を排除するために行う- 正規化は、従属性を見抜くことで可能となるテーブルの形式だけ見ててもわからない。どの列がどのキーに従属しているかは、業務ロジック(ビジネスロジック)で決まる。部分関数従属推移的関数従属## 参考     達人に学ぶDB設計 徹底指南書 初級者で終わりたくないあなたへ posted with ヨメレバ   ミック 翔泳社 2012-03-16       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     
---title: "fireworks"date: 2015-08-10T00:56:00+09:00comments: truecategory: ['Art']tags: ['Photo']published: trueimg: "https://farm1.staticflickr.com/390/20242948698_6335e85edf_z.jpg"slug: fireworks---  {{% googleadsense %}}
---title: "初めてのテント泊ライブ。初めてのRISING SUN ROCK FESTIVAL 2015(ライジングサン)"date: "2015-08-17T08:12:12+09:00"comments: truecategory: ['Music']tags: ['RSR','夏フェス']published: trueimg: "https://farm1.staticflickr.com/592/20653177685_d5acc4460a_q.jpg"slug: rising-sun-festival-2015---  2015/8/14-8/16と北海道で行われる夏フェス「RISING SUN FESTIVAL 2015」に行ってきました。初めてテント泊での夏フェスに参加したので、その所感をまとめます。{{% googleadsense %}}## ライジングサンの魅力RISING SUN ROCK FESTIVAL 2015 in EZO  北海道、石狩市で行われる「RISING SUN ROCK FESTIVAL」(以下RSR)は、ライジングサンと銘打っているだけあって、最終日の最後のバンドでは会場のみんなで朝日を見て、終わりを告げます。テント泊がメインになっていることもあり、テントを囲むようにステージが設置されています。BBQをしながら音楽を楽しんだり、夫婦でのんびりとテント泊をしながら、ゆったりと時間を過ごしたりする姿をいたるところで見ることができました。自分たちも、夫婦二人でテント泊でのんびりと楽しむことができました。来場数も多いですが、会場が広いことで、他のフェスと比べて、飲食ブースも並ばずに買うことができ、快適でした。また、北海道ならでは美味しい店が多かったです！会場全体にのんびりとした雰囲気が醸しだされているのもRSRの魅力のひとつです。ステージから見て、スタンディングエリア、シートエリア、テントサイトと区分けされていて、シートエリアではゴロンと横になりながら、椅子に座りながらゆっくりと見ることもできます。テントサイト(ヘブンズエリア)では、テントにいながら常に音楽を聞くことができました。まさに、音楽を1日中楽しむにはもってこいの空間でした。## 見たバンド### １日目- KANA-BOON- BIGMAMA- Fear, and Loathing in Las Vegas- MONOEYES- MAN WITH A MISSION- ASIAN KUNG-FU GENERATION- FRIDAY NIGHT SESSIONBIGMAMAで、誰かさんの熱いまなざしの背中を見つつ、セトリ自体は攻め攻め。「Fear, and Loathing in Las Vegas」は、ピコピコ自然と体を動かしたくなりました。「 MAN WITH A MISSION」は、初めてまともに聴くことができ、ガウガウしながら、楽しみました。最後の「FRIDAY NIGHT SESSION」は、テント泊の人達だけが、参加出来るお得なセッションです。椅子に座りながら聞いていましたが、レキシの話しか頭に残っていません笑。アラバキ2014でも、時間を押していたが、今回のMCでもスケジュールが押すと、「レキシ」のせいになると自虐ネタを飛ばしていました。### 2日目- クリープハイプ- キュウソネコカミ- [Alexandros]- THE BOWDIES- レキシ- 聖飢魔II- Perfume- 東京スカパラダイスオーケストラ- Nothing’s Carved In Stone- フジファブリック- THE BACK HORN- back number- 10-FEET「キュウソネコカミ」では、ヤンキーこわいーと叫びつつ、 [Alexandros]にお熱な誰かさんの後ろ姿をまたまた眺めつつ、「THE BOWDIES」で安心・安定のHOTDOGを聴きます。初めて見るバンドは、「Nothing’s Carved In Stone」「フジファブリック」「back number」。「back number」は、「SISTER」「花束」爽やかだなぁー。好きだなぁーと思いながら聴き、 最後、トリは、10-FEETで、騒いで朝を迎えました。   ## 服装について行く前は、どのぐらい寒いのか気になったので、体感した感想を残しておきます。### RSR2015期間中の石狩市の気温- 8/14(金) 最高28.8℃	最低 18.7℃- 8/15(土) 最高26.1℃	最低 19.4℃- 8/16(日) 最高26.5℃	最低 18.6℃[気象庁](http://www.data.jma.go.jp/obd/stats/etrn/index.php)参考までに、気温を載せましたが、日中は、半袖で全然問題ありませんでした。むしろ、日が射している間は、暑くて、ビールが美味しい！(バドワイザーが多いフェスでの提供ビールですが、さすが北海道、サッポロビールです。)日が落ちてきて、夜中から明け方にかけては、ウィンドブレーカー上下を着ていても、座っていると寒かったです。半袖の人たちがなぜ耐えれるのかと疑問に思うぐらいに寒い。真夏とはいえ、北海道なので、寒さ対策は忘れずに！## テント泊について  そもそも、テント泊するには、どんなチケットを買えばよいか。また、テントサイトにも種類が分かれていて、それぞれどんな特徴があるのか。また、実際にテント泊をする際に、利用したもの、あれればよかったものをまとめてみます。### テント泊に必要なチケットチケットの種類は、以下のとおり。- 通し入場券- 1日券- HEAVEN'Sテントサイト付入場券- FORESTテントサイト付入場券- オートキャンプ付入場券テント泊をするためには、テントスペースを1区画を利用するチケットを買わないといけないです。例えば、2人だったら、1区画の「テントサイト付チケット」と、通常のチケット(通し入場券 or 1日券)を買えばよいです。2人とも「テントサイト付チケット」を買う必要はありません。### HEAVEN'S テントサイトとFORESTテントサイトの違いHEAVEN'Sテントサイトは、ステージに隣接しています。場所がよければ、音だけでなく、メインステージのスクリーンも観ることができます。ステージが観れることもあり、人気のテントサイトですが、結構詰め詰めなイメージでした。また、終始人が往来するので、テント前でぐでーんとしてるとちょっと恥ずかしいです。一方、FORESTサイトは、会場から結構離れています。荷物を置いておき、気軽に取りにいける距離ではありません。とはいえ、終始どこかのステージでやっている演奏は聞こえてきます。HEAVEN'Sと比べると、十分な広さがあり、ゆったりした印象でした。僕たちは、FORESTサイトでした。もし来年も行くならのんびりしたいので、FORESTかなぁと思います。### お風呂問題テント泊の場合は、お風呂の選択肢として、以下の3つがあります。1. お風呂ツアー2. シャワーブース3. 自分たちで行く「3. 自分たちで行く」は車がないと厳しいです。自分たちは、お風呂ツアーを申し込もうと思ったのですが、すでにチケットは完売だったので、シャワーブースを利用しました。シャワーブースは、当日の先着順で予約する必要があります。先着順のため、1日目の10時頃に予約しにいったときには、すでに1日目の主要な時間帯は埋まってしまい、二日目の15時以降しか空いていないという状況でした。何がなんでも、１日目のいい時間帯に入ろうと思ったら、会場に着いた瞬間に、予約しにいくことをオススメしたいです。シャワーブースは、5分500円。シャンプーだけは備え付けのものがあったが、持参した方がよいと思います。## どんな装備が必要か？### テント 必須度 ★★★★★RSRのテントを見渡してみると、8割〜9割ぐらいが、Coleman(コールマン)のテントでした。オフィシャルで斡旋しているテントがColeman(コールマン)なので、そうなるのかもしれないし、キャンプと言えば、Coleman(コールマン)てのもあるのかもしれません。     コールマン テント ツーリングドーム/LX [2~3人用] 170T16450J posted with カエレバ    Coleman(コールマン) 2012-03-08       Amazon  楽天市場  Yahooショッピング     自分たちが今回利用したテントは、monbel(モンベル)のステラリッジ3型です。山岳用のテントですが、同じ山岳用テントを利用している人も、ちらほらいました。     モンベル(mont-bell) テント ステラリッジテント 3型 [3人用] サンライトイエロー 1122477-SUYL posted with カエレバ    モンベル(mont-bell)        Amazon  楽天市場     山岳用テントで快適だったかというと、昼間は以外は快適でした。(昼間は、テントの中に入っていられなかった。。。)朝、夜は冷え込むのでちょうどよかったです。### 銀マット 必須度 ★★★★★ホームセンターで買っていった600円ぐらいの銀マットを利用しました。これがないと、背中がゴツゴツして痛いんです。快適に寝るなら、ぜひ必要です。     キャプテンスタッグ(CAPTAIN STAG) シルバーキャンピングマット180×60cm S ブルー M-7381 posted with カエレバ    キャプテンスタッグ(CAPTAIN STAG) 2012-03-09       Amazon  楽天市場     ### ヘッドライト・ランタンなどのライト類 必須度 ★★★★★     PRIMUS(プリムス) IP-2245A-S ランタン【日本正規品】 posted with カエレバ    PRIMUS(プリムス) 2012-04-17       Amazon          モンベル(mont-bell) ヘッドランプ コンパクトヘッドランプ インディゴ 1124587-IND posted with カエレバ    モンベル(mont-bell)        Amazon     ヘブンズサイトはまだしも、フォレストサイトでは周りに明かりがないので、ライト必須です。ヘッドライトに合わせて、テントに吊るしておけるランタンタイプがおすすめです。### 寝袋 必須度 ★★★★☆     キャプテンスタッグ 寝袋 シュラフ フォルノ封筒型シュラフ800 ダークネイビー [最低使用温度12度] M-3473 posted with カエレバ    キャプテンスタッグ(CAPTAIN STAG) 2012-03-09       Amazon     山岳用のテントを利用してたこともあり、以外となくてもなんとかなるのでは？と思っていましたが、やはり明け方は寒かったです。夏用のシェラフは、必要でした。### モバイルバッテリー 必須度 ★★★☆☆会場には、WiFiと充電コーナーが設置されていましたが、テントサイトには充電できるところはありません。3日間は、さすがにバッテリーが持たないので必要です。     cheero Power Plus 3 13400mAh 大容量 モバイルバッテリー  [ 国産Sanyo/Panasonic高品質電池搭載 ]  iPhone 6 5S 5 / iPad / Android / Xperia / Galaxy / 各種スマホ / タブレット / ゲーム機 / Wi-Fiルータ 等 急速充電 対応 posted with カエレバ    cheero        Amazon  楽天市場     ### 持ち運び椅子 必須度 ★★★☆☆ゆったりと、見たい場合、テントの前でのんびりしたい方は、あると便利でしょう。朝露で、地面が濡れていても、椅子があれば安心です。     (ヘリノックス)HELINOX hnx-001ヘリノックス コンフォートチェア オレンジ posted with カエレバ    HELINOX(ヘリノックス)        Amazon  楽天市場     ### あったらよかったもの- BBQ機材来年も行くとしたら、テント泊と合わせて、BBQが出来る機材を買って行きましょう！
---title: "マーケティング22の法則を図解してみた"date: "2015-08-29T17:13:12+09:00"comments: truecategory: ['Book']tags: ['book','マーケティング']published: trueimg: "https://farm6.staticflickr.com/5631/20737197559_f22008a21c_z.jpg"slug: marketing-22-raws---22の法則もあって、読んでても繋がりが頭にはいってこなかったので、1枚の図にまとめた。  ## 「マーケティングとは、商品をめぐる戦いではなく、知覚をめぐる戦いである」。知覚の法則、心の法則  マーケティング22の法則の核になっているのは、- 1.知覚の法則- 3.心の法則であると感じたため、左下を中心として描いた。この知覚と心の法則は、本書で語られている「マーケティングとは、商品をめぐる戦いではなく、知覚をめぐる戦いである」の言葉に集約される。マーケティングとは、良い商品を売るのがよいのではなく、いかに相手の知覚・心に入り込むかが大事だということ。ここでいう知覚とは、どういったものか？{{% googleadsense %}}### 知覚とは&gt;マーケティング担当者は、事実を把握することに没頭しているが、マーケティングの世界には、「客観的な現実、事実、ベストな商品」は存在しない。あるのは、顧客や、見込み客の心にある知覚だけである。知覚こそ、マーケティングの世界における現実である。知覚とは、自分たちのモノの見方、思い込み、価値観、メンタル・モデル、バイアス、色眼鏡、・・・などだと捉えた。人は、現実をありのままに捉えることはできなくて、どうしてもこれらの知覚を通じてしか、世界を捉えることが出来ない。いくら、周りがこの商品がよいと薦めたとしても、買う人の頭の中の世界では違う商品が占めているとしたら、その商品しかきっと見えない。それぞれの頭の世界が、それぞれの人にとっては絶対的な判断基準である。よって、マーケティングとは、これらの知覚にどのような影響をあたえるか、どのように作用するのか、どのように操作するかに尽きる。どのように作用するか、どう影響するか、どのように操作するのかを法則としてまとめたのが後の20法則だと受け取った。## どうやって顧客の心に入り込むか？  知覚に作用するのが、大事だとわかったことで、どのように顧客の心に入り込むかという観点で、以下を分類した。- 1.一番手の法則- 2.カテゴリーの法則- 16.一撃の法則- 5.集中の法則- 13.犠牲の法則## マーケティングアンチパターン次に、マーケティングのアンチパターンとして以下を分類した。企業がやってしまいがちなアンチパターンとして語られている。- 12.製品ライン拡張の法則- 13.独占の法則## 時間経過と共に  時間経過という観点で分類した。カテゴリはどんどん細かくなっていき、それら1つのカテゴリの中は、二極化が進んでいくというもの。でも、最終的には、予測不能なので、上手くトレンドを読むしかないとのこと。- 8.二極分化の法則- 10.分割の法則- 22.遠近関係の法則- 21.成長促進の法則- 17.予測不能の法則## 分析・対応方法  では、今自分の場所はどこなのか？どこへ向かえばよいのか？どう対応すればいいか？という「分析・対応方法」という観点で以下のとおり分類した。- 7.梯子(はしご)の法則- 9.対立の法則- 14.属性の法則- 15.正直の法則- 18.成功の法則- 19.失敗の法則     売れるもマーケ 当たるもマーケ―マーケティング22の法則 posted with ヨメレバ   アル ライズ,ジャック トラウト 東急エージェンシー出版部 1994-01       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     
---title: "JekyllからHugoへの移行ポイント"date: "2015-08-30T11:56:00+09:00"comments: truecategory: ['Tech']tags: ['jekyll','hugo']published: trueslug: migration-jekyll-to-hugoimg: "https://farm6.staticflickr.com/5741/23486283416_07bf2b94bc.jpg"---Hugoが爆速であること、HugoがGolangで作られていて読みながら勉強したいという理由からJekyllからHugoに移行することにした。基本的には、`_post`ディレクトリにあるものを、Hugoでいう`content/post`ディレクトリに配置すればよい。テーマを指定せずに、`hugo`としても何も出力されないのでそこは注意すること。JekyllからHugoに移行する際にハマった点を残しておく。{{% googleadsense %}}## 日付フォーマットの変更```yaml:2015-08-30-post.markdown---title: "タイトル"date: "2015-08-29T17:13:12+09:00"---```jekyll だと、`2015-08-30 10:30`で認識していたが、Hugoで読み取る日付フォーマットは、以下の通り。- 2006-01-02T15:04:05Z07:00- 2006-01-02T15:04:05- Mon, 02 Jan 2006 15:04:05 -0700- Mon, 02 Jan 2006 15:04:05 MST- 02 Jan 06 15:04 -0700- 02 Jan 06 15:04 MST- Mon Jan _2 15:04:05 2006- Mon Jan _2 15:04:05 MST 2006- Mon Jan 02 15:04:05 -0700 2006- 2006-01-02 15:04:05Z07:00- 02 Jan 06 15:04 MST- 2006-01-02- 02 Jan 2006- 2006-01-02 15:04:05 -07:00- 2006-01-02 15:04:05 -0700`hugo new`で作成されるのは、おそらく`2006-01-02T15:04:05Z07:00`の形式(実際には、2015-08-29T17:13:12+09:00のようになる)のため、この形式に変換する必要がある。別に、作成したときの秒まで管理する必要はなく、年月日だけでよいのであれば、`2006-01-02`とかでよいだろう。ワンライナーで、変更する。```find . -type f | xargs gsed -i -e 's/date: \([0-9]\{4\}-[0-9]\{2\}-[0-9]\{2\}\) \([0-9]\{2\}:[0-9]\{2\}\).*$/date: \1T\2:00+09:00/g'```### 不要frontmatterの削除`layout:`を削除する。```find . -type f | xargs gsed -i -e 's/layout:.*$//g'```### 日付をparseしている箇所```golang:github.com/spf13/cast/caste.go// StringToDate casts an empty interface to a time.Time.func StringToDate(s string) (time.Time, error) {	return parseDateWith(s, []string{		time.RFC3339,		"2006-01-02T15:04:05", // iso8601 without timezone		time.RFC1123Z,		time.RFC1123,		time.RFC822Z,		time.RFC822,		time.ANSIC,		time.UnixDate,		time.RubyDate,		"2006-01-02 15:04:05Z07:00",		"02 Jan 06 15:04 MST",		"2006-01-02",		"02 Jan 2006",		"2006-01-02 15:04:05 -07:00",		"2006-01-02 15:04:05 -0700",	})}func parseDateWith(s string, dates []string) (d time.Time, e error) {	for _, dateType := range dates {		if d, e = time.Parse(dateType, s); e == nil {      fmt.Println(dateType)			return		}	}	return d, fmt.Errorf("Unable to parse date: %s", s)}```[time - The Go Programming Language](http://golang.org/pkg/time/#pkg-constants)## URLを決めるJekyllのときは、`http://meganii.com/blog/2015/08/30/title/`のようなURL形式だったため、その形式に合わせる。合わせ方は、config.ymlで定義する。```yml:config.yml---baseurl: "http://meganii.com"permalinks:  post: "/blog/:year/:month/:day/:slug/"---``````permalinks:  post: "/blog/:year/:month/:day/:slug/"```baseurlからみた、URL形式を`post:`で定義する。`:slug`は、frontmatterで定義しないと使えないため、以下のように、各記事に`slug`を埋め込む。```---title: "マーケティング22の法則を図解してみた"date: "2015-08-29T17:13:12+09:00"category: ['Book']tags: ['book','マーケティング']slug: marketing-22-raws---```自分は、[Swiftで初めてのMacOSXアプリケーション-FFViewer- | じょーぶん部](http://meganii.com/blog/2015/07/04/building-cocoa-os-x-application-with-swfit-in-xcode/)で作成したソフトを利用して、frontmatterを埋め込んでいった。ファイル名から判断して、slugを決めるようにした。## テーマ Robustを利用する上で直したポイント### Summaryにimgタグも含まれてしまう問題。`\
---title: "「システムインテグレーション崩壊」を読んで生存戦略を考える"date: "2015-08-31T23:53:00+09:00"comments: truecategory: ['Book']tags: ['SIer','システム']slug: system-integrators-collapsepublished: trueimg: "https://images-na.ssl-images-amazon.com/images/I/51pplTGqXXL._SL160_.jpg"---ぼくらは、どこへ向かえばよいのか？生存戦略を考える。何を書きたいか？生存戦略を見つめなおす。どこへ向かうべきか？僕はどこへ向かおうとしていたのか？     システムインテグレーション崩壊 ~これからSIerはどう生き残ればいいか? posted with ヨメレバ   斎藤 昌義 技術評論社 2014-06-05       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     {{% googleadsense %}}## 収益モデル- サブスクリプション(月額定額)- レベニューシェア- 成果報酬SIビジネスには、以下2パターンある。1. 収益モデルとしてのSIビジネス2. 顧客価値としてのSIビジネスここでいう、崩壊する「システムインテグレーション」とは、「1. 収益モデルとしてのSIビジネス」であり、これは、人月で金額を確定させ、瑕疵担保責任を負うビジネスのこと。顧客側は、出来るだけ多くの要求を盛り込もうとするが、引き受けたベンダは、できるだけ要求を少なくしてリスクを少なくしたい。システム開発を行うベンダと、顧客が同じゴールを向いてない、お互いが不幸になる。では、どんなSIビジネスに展開していけばよいのか？どんなSIビジネスなら、未来はあるのだろうか？それは、「顧客価値と事業者価値を一致させるビジネス」である。システムインテグレーションの本来の役割とは、「テクノロジーを使ってお客様のビジネス価値を高めること」それが、いつのまにか「情報システムを作ること」に目的がすり変わっていないだろうか## 新規事業の考えコンセプトとデザインに気を配る + ソリューションでビジネス開発コンセプトのないビジネス開発になっていないだろうか？例えば、以下の様な要件。- クラウドで事業を立ち上げる- ビックデータでで事業を立ち上げる- モバイルビジネスで・・・・・コンセプトがなく、ある技術、ソリューションを使うことが目的になっている。## STP### Segmentation様々な角度から市場を調査。ユーザ層や購買層を区分して、事業展開の切り口を整理する。### Targeting細分化した市場区分の中で、提供しようとしているサービスによって競争優位が気付けるセグメントはどこか？### Positioningターゲットとして選定したセグメントの中で、どのようなメリットを顧客に提出して競合との差別化を図るか？この章を呼んでいると、積ん読本になっていた「売れるもマーケ 当たるもマーケ マーケティング22の法則」を無性に読んでおきたくなって、やっと読みきった。マーケティング22の法則を図解してみた | じょーぶん部  ## 新たな存在価値と役割へのシフトお客様のCIO(Chief Information Officer / 最高情報責任者)### CIO Chief Information Officer / 最高情報責任者[CIOとは | 政府CIOポータル](https://cio.go.jp/what)[最高情報責任者 - Wikipedia](https://ja.wikipedia.org/wiki/%E6%9C%80%E9%AB%98%E6%83%85%E5%A0%B1%E8%B2%AC%E4%BB%BB%E8%80%85)## 作らない vs 正しく作るソフトウェアを「正しく作る」vs「作らない」どっちが正解？　サーバーワークス大石氏、ギルドワークス市谷氏対談 (1/4)：CodeZine（コードジン）  サーバワークス： 作らないギルドワークス：　正しく作る     システムインテグレーション崩壊 ~これからSIerはどう生き残ればいいか? posted with ヨメレバ   斎藤 昌義 技術評論社 2014-06-05       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     
---title: "コンサルタントの秘密〜コンサルタント業はなぜ大変か？〜"date: 2015-09-05T08:39:00+09:00comments: truecategory: ['Book']tags: ['book','consulting']published: trueslug: the-secrets-of-consultingimg: "https://images-na.ssl-images-amazon.com/images/I/418S5FJ6RHL._SL160_.jpg"---     コンサルタントの秘密―技術アドバイスの人間学 posted with ヨメレバ   G.M.ワインバーグ,木村 泉,ジェラルド・M・ワインバーグ 共立出版 1990-12       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     ## 本をから得たいこと- そもそも、コンサルタントとはどういうことか？- 問題解決する際に、気をつけるべきことは何か？- 自分に値段を付けるにはどうするか？{{% googleadsense %}}コンサルタント業は、当人の依頼によって、当人に影響を及ぼす仕事である。## コンサルタント業はなぜ大変か？1. 依頼主がどう言おうとも、問題は必ずある2. 一見どう見ようとも、それは常に人の問題である3. 「料金は時間に対して支払われるのであって、解答に対して支払われるのではない」ということを忘れないこと### 1. 問題は必ずある依頼主(マネージャー)は、自分に処理できない問題があることを公表せずに、助けて欲しいという願いがある。自分に処理できない問題があると公表することは、自分が無能であることを認めてしまうことに繋がってしまう。だから、コンサルタントを呼んだとしても、決して問題があるとは言わないことが多い。問題があるから、コンサルタントは呼ばれているのだから、依頼主がどう言おうとも、「問題は必ずある」のだ。依頼主が、「問題ではない」と思い込みたいがために、10%よりも多くの改善を約束してはいけない。それ以上、改善することは「問題があった」と周りに知らしめてしまうからである。10%未満の改善であれば人は、「問題なし」の範疇に押し込んでしまい、依頼主としては「問題ではない」と公言している真の問題が解決してハッピーである。もしも、10%以上の改善をしてしまった場合は、依頼主の手柄にするなど、決して気づかれないようにしなければならない。コンサルタントが10%以上の改善を行った場合、それは「問題があった」と認めざるを得なくなってしまい、依頼主の都合を無視することに繋がってしまう。よって、コンサルタントは、誰の手柄かに頓着してはいけない。### 2.人の問題人は、「技術的問題」とレッテルを張って、人為的なミスを隠そうとする。しかし、原因を辿って行くと、結局はマネージャー層が何かをしてしまったり、しなかったりすることにたどり着いたりする。結局問題とは、人の問題なのである。&gt; 依頼主が何をしていようとも、何かそれとは違うことを薦めなさい。人の問題は、少なくとも、想像力、見通しの欠如から生じることは間違いない。問題にあまりにも近い人は、最初にやってうまくいかなかったことをいつまでも繰り返したがる。そもそも、うまくいっていたらコンサルタントなんて呼ばれないため、依頼主がやっていることとは、異なることをやるべきである。### 3. 料金は時間に対して支払われるマネージャー vs コンサルタントの構図は常にある。問題の解答に対してお金を貰うことは、「問題がある」ということを前提として、「コンサルタント」が問題を解いたという状況にならなければならない。しかし、「1.問題は必ずある」でも述べられていたように、依頼主(マネージャー)は問題があると認めなくはないという背景がある。問題の解答に対してお金を貰うことは、ここに矛盾が生じてしまい、うまくいかなくなってしまう。よって、依頼主が問題を解いたことにして、コンサルタントは時間に対してお金をもらうのがうまくいくのである。コンサルタントとは、どこからともなく、ピンチに駆けつけ解決し、そして名乗らずにすっと姿を消していくサムライのようになるべきであって、水戸黄門のように毎度毎度、印籠を見せつけてはいけないのだ。## ラズベリージャムの法則「広げれば広げるほど薄くなる」皿を洗うという仕事を例に考えた場合に、自分で皿を洗う場合は、直接作業を行い、綺麗になったことを実感でき、出来栄えに対して満足感を得ることができる。皿洗いコンサルタントの場合、直接作業を行うことはなく、実際に皿洗いを行う人に対して、アドバイスを行う。自分一人が作業する時間に対して、たくさんの量の皿を洗うことが出来る。直接的満足度と、間接的影響は、以下のとおり。直接的満足度　皿洗い &gt; 皿洗いコンサルタント  間接的影響　　皿洗い &lt; 皿洗いコンサルタント  　　ジャムのように広げれば広げるほど、自分が影響を及ぼすことができる面積は大きくなっていくが、それを行うことによる直接的満足度は、どんどん薄くなっていく。なんとなく深いなと感じた。自分で、作業をする分には、満足感、達成感を得ることができるが、広げれば広げるほど、自分で作業をすることがなくなるため、作業から得られる満足感、達成感を感じることができなくなる。このような感覚は、普遍的なものなんだなとなんとなく納得した。## その他印象に残った言葉 - たいていのとき、世界のたいていの部分では、人がどれほどがんばろうとも意味のあることはなにも起こらない。- 第1番の問題を取り除くと、第2番が昇進する。- 失敗を容認出来ない人は、コンサルタントとして成功しない。- 問題が解ける人は、いい暮らしができる。だが、必要に応じて問題を無視できるひとこそ最高の暮らしができる。- 逆説敵だが、他人を助けようとすることは、まず自分を、しかも依頼主以上に助けることになる。- 自分の手助けをすることは、他人の手助けをすることよりももっと難しい。誰かの問題を解決する前に、自分のごたごたを整理すること。     コンサルタントの秘密―技術アドバイスの人間学 posted with ヨメレバ   G.M.ワインバーグ,木村 泉,ジェラルド・M・ワインバーグ 共立出版 1990-12       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     
---title: "人生はトレードオフ？！　〜コンサルタントの秘密〜"date: 2015-09-07T23:40:27+09:00comments: truecategory: ['Book']tags: ['book','consulting']published: trueslug: trade-offimg: https://images-na.ssl-images-amazon.com/images/I/418S5FJ6RHL._SL160_.jpg---{{% googleadsense %}}## 人生はトレードオフ## オレンジジューステスト「それはできますよ。で、それにはこれだけかかります。」最近家探しをしたので、何事もトレードオフだなと実感した。広い部屋を望めば、価格が犠牲になり高くなる。広い部屋と安い家賃を望めば、築年数が増えていく。何かを得るには、何かが犠牲になる。人生もトレードオフかな。     コンサルタントの秘密―技術アドバイスの人間学 posted with ヨメレバ   G.M.ワインバーグ,木村 泉,ジェラルド・M・ワインバーグ 共立出版 1990-12       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     
---title: "Amazonマーケットプレイスで本を出品してみた"date: 2015-10-03T10:25:48+09:00comments: truecategory: ['book']tags: ['Amazon','Book']published: trueslug: amazon-marketplace---引っ越しに伴い、本棚に寝ていた本を整理しました。今までは、ブックオフに持っていくということしか頭になかったのですが、色々調べてみるとAmazonマーケットプレイスやAmazon買い取りサービスなるものが存在して、比較的簡単に本を売却できそうだったので試してみることにしました。結論としては、BOOK OFFに持っていくより断然、高値で売ることが出来たのでHAPPYになりました。{{% googleadsense %}}## 結論- Amazonマーケットプレイスでの金銭のやり取りは、Amazonが間に入ってくれるので、金銭面でのトラブルの心配は少ない。- ブックオフに持っていくよりも高値で買い取ってもらえる。- 送付する作業はやはりめんどくさい。ある程度、売れそうな本だけAmazonマーケットプレイスで出品して、残りはAmazon買い取りサービスとBOOKOFFを利用して引き払うという以下の手順で進めた。1. 裁断して捨てる2. Amazonマーケットプレイス3. Amazon買い取りサービス4. BOOKOFF## Amazonマーケットプレイスの出品登録## Amazonマーケットプレイスでの裁断本の出品についてAmazonマーケットプレイスで、裁断本を出品するには、コンディションを「可」に設定して、裁断済みの本であることを明記すればよいとのこと。&gt; 製本状態でない商品もしくは製本されていない商品を出品される際は必ずコンディションを「可」で出品してください。また、製本状態にない商品、製本されていない商品であることをコンディション詳細の記入欄に明記してください。&gt; 製本状態でない商品を「良い」以上のコンディションで出品されている、もしくはコンディション詳細の記入欄に明記されていない場合は、Amazonの判断にて出品を取り下げる場合があることをご了承ください。&gt; [Amazon.co.jp ヘルプ: Amazonマーケットプレイス コンディション・ガイドライン](http://www.amazon.co.jp/gp/help/customer/display.html?nodeId=1085248)### 参考ページ[アマゾンマーケットプレイスで裁断済み書籍というのが売られていたので - しいたげられたしいたけ２](http://watto.hatenablog.com/entry/2014/09/28/194422)## 出品した本### 裁断本- SQLアンチパターン- SQL実践入門- Rubyによるクローラー開発技法 巡回・解析機能の実装と21の運用例- [改訂新版] 3分間ネットワーク基礎講座### 裁断していない本- アート・オブ・コミュニティ ―「貢献したい気持ち」を繋げて成果を導くには- Emacs実践入門　～思考を直感的にコード化し、開発を加速する- プログラマが知るべき97のこと- 本気で稼ぐための「アフィリエイト」の真実とノウハウ- ワーク・シフト ― 孤独と貧困から自由になる働き方の未来図〈2025〉- 伝え方が9割- How Google Works (ハウ・グーグル・ワークス) ―私たちの働き方とマネジメント- マニャーナの法則 明日できることを今日やるな- システムインテグレーション崩壊 ~これからSIerはどう生き残ればいいか? - 売れるもマーケ 当たるもマーケ―マーケティング22の法則## 所感どの本も出品して一週間以内に貰い手がついたことを考えると、Amazonの集客力は凄いと感じた。オークションとは異なり、お金のやり取りが発生しないのでそこは凄く楽だった。ブックオフに持って行ってもどうせ、足元をみられて安い金額でしか買い取ってもらえないのであったら、少しの手間でも、Amazonマーケットプレイスに出品するのもありだと思う。
---title: "Hugoソースコードリーディング〜Taxonomy〜"date: 2015-10-11T22:03:56+09:00comments: truecategory: ['Tech']tags: ['hugo']slug: hugo-taxonomypublished: trueimg: "https://farm6.staticflickr.com/5741/23486283416_07bf2b94bc.jpg"---## 目的Hugoにおける、categoryとtagの生成箇所を特定して、テーマ作成に役立てる。## 用語確認- Taxonomy 分類- Term 'Taxonomy'に含まれるキー- Value Termに割り当てられたコンテンツの一つ{{% googleadsense %}}## Taxonomy Templatedhttp://gohugo.io/taxonomies/templates/taxonomiesを利用する場合、2つ方法がある。1. list template2. taxonomy terms template### 1.list template`list template`は、複数のsingle html pageのコンテンツを描画する際に利用されるテンプレート。この`list template`は、自動的にすべてのtaxonomy pagesを作成する。### 2.taxonomy terms template`taxonomy terms template`は、それぞれに与えたテンプレートで、termsのリストを生成する。Taxonomyは、map[string]WeightedPages.Get(term)  .Count(term)###Channel とは&gt;- Channel は goroutine 間でのメッセージパッシングをするためのもの- メッセージの型を指定できる- first class value であり、引数や戻り値にも使える- send/receive でブロックする- buffer で、一度に扱えるメッセージ量を指定できるhttp://jxck.hatenablog.com/entry/20130414/1365960707&gt;Channel の close()close() は組み込みの関数で、用の済んだ channel を閉じることができます。そもそも channel の呼び出しは 2 つの値が受け取れます。`message, ok := &lt;-channel`この 2 つめの ok は、 channel が閉じられているかを表す bool。ok は、取っても取らなくても良い仕様になっている。## site.go```golang:layouts := s.appendThemeTemplates(			[]string{"taxonomy/" + t.singular + ".html", "indexes/" + t.singular + ".html", "_default/taxonomy.html", "_default/list.html"})```### 利用しているテンプレート- "taxonomy/" + t.singular + ".html"- "indexes/" + t.singular + ".html- "_default/taxonomy.html"- "_default/list.html"### RenderTaxonomiesLists``` func (s *Site) RenderTaxonomiesLists() error {	for singular, plural := range taxonomies {		for key, pages := range s.Taxonomies[plural] {			fmt.Println(key, pages, singular, plural)			taxes &lt;- taxRenderInfo{key, pages, singular, plural}		}	}```### categoryの場合- key: categoryのkey- pages: どのページに含まれているか- singular: category- plural: category### tagの場合- key: tagのkey- pages: そのtagのkeyが含まれているページの配列- singular: tag- plural: tags### site.go renderAndWritePage```:golang:site.gofunc (s *Site) renderAndWritePage(name string, dest string, d interface{}, layouts ...string) error {	renderBuffer := bp.GetBuffer()	defer bp.PutBuffer(renderBuffer)	err := s.render(name, d, renderBuffer, layouts...)	outBuffer := bp.GetBuffer()	defer bp.PutBuffer(outBuffer)	transformLinks := transform.NewEmptyTransforms()	if viper.GetBool("RelativeURLs") || viper.GetBool("CanonifyURLs") {		transformLinks = append(transformLinks, transform.AbsURL)	}	if viper.GetBool("watch") &amp;&amp; !viper.GetBool("DisableLiveReload") {		transformLinks = append(transformLinks, transform.LiveReloadInject)	}	var path []byte	if viper.GetBool("RelativeURLs") {		translated, err := s.PageTarget().(target.OptionalTranslator).TranslateRelative(dest)		if err != nil {			return err		}		path = []byte(helpers.GetDottedRelativePath(translated))	} else if viper.GetBool("CanonifyURLs") {		s := viper.GetString("BaseURL")		if !strings.HasSuffix(s, "/") {			s += "/"		}		path = []byte(s)	}	transformer := transform.NewChain(transformLinks...)	transformer.Apply(outBuffer, renderBuffer, path)	if err == nil {		if err = s.WriteDestPage(dest, outBuffer); err != nil {			return err		}	}	return err}```### bpって？bp "github.com/spf13/hugo/bufferpool"おそらく出力する際に、バッファリングしているのでは？## site.goRenderPages()の中で、go pageRenderer(s, pages, results, wg)を実施。newTaxonomyNodeで、すでにbaseが作られている。```func (s *Site) newTaxonomyNode(t taxRenderInfo) (*Node, string) {	key := t.key	n := s.NewNode()	if s.Info.preserveTaxonomyNames {		key = helpers.MakePathToLower(key)		// keep as is, just make sure the first char is upper		n.Title = helpers.FirstUpper(t.key)	} else {		n.Title = strings.Replace(strings.Title(t.key), "-", " ", -1)	}	base := t.plural + "/" + key	s.setURLs(n, base)	if len(t.pages) &gt; 0 {		n.Date = t.pages[0].Page.Date		n.Lastmod = t.pages[0].Page.Lastmod	}	n.Data[t.singular] = t.pages	n.Data["Singular"] = t.singular	n.Data["Plural"] = t.plural	n.Data["Pages"] = t.pages.Pages()	return n, base}```## 参考- [Introduction to Hugo](http://gohugo.io/overview/introduction/)- [spf13/hugo](https://github.com/spf13/hugo)
---title: "「「納品」をなくせばうまくいく」を読んで生存戦略を考える"date: 2015-10-25T14:25:07+09:00comments: truecategory: ['Tech']tags: ['SIer','システム','生存戦略']published: trueslug: sonicgarden-agileimg: "https://images-na.ssl-images-amazon.com/images/I/518SbiFdxAL._SL160_.jpg"---     「納品」をなくせばうまくいく ソフトウェア業界の“常識"を変えるビジネスモデル posted with ヨメレバ   倉貫 義人 日本実業出版社 2014-06-12       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     ## この本から何を得たいか？- 「納品のない受託開発」とはどういう開発か？- 「納品のない受託開発」に至った背景にはどういう考えがあったのか？- 納品のない受託開発をするポイントはどこか？- どういったマインドが必要になってくるのか？{{% googleadsense %}}## 一括請負の功罪&gt; 一括請負での受託開発は、顧客にとって負担が大きくて無駄も多く、開発会社を経営する立場からはリスクは大きい割に利益が出にくい上、現場で働くエンジニアたちを辛い労働環境に追いやっています。つまり、関係者の誰も幸福にしていないビジネスモデルだと分かります。一括請負ビジネスは、システムインテグレーション崩壊でも触れていたように、顧客と開発側で向かう方向が一致していない。顧客側は、とことん仕様を入れ込もうとするし、開発側は変更を抑えるように働きかける。お互い不幸になるビジネスモデルである。[「システムインテグレーション崩壊」を読んで生存戦略を考える | じょーぶん部](http://meganii.com/blog/2015/08/31/system-integrators-collapse/)システムインテグレーション崩壊 ~これからSIerはどう生き残ればいいか? では、顧客側・開発側のお互いが幸せになるビジネスモデルの１つの解として、Sonic Gardenの「納品のない受託開発」を紹介していた。## 納品のない受託開発ではどうなのか？納品のない受託開発では、以下３つをポイントとしている。- オーダーメイドの開発- 納品しない- 派遣しない派遣とは違って時間単位での契約ではなく、顧客の得る「成果と満足度」による契約をすること。ソフトウェア開発におけるエンジニアの仕事は、時間に換算できるものではない。時間単価で働くということは、その時間内は仕事場にいることが"価値"になってしまい、どれだけ効率化して早く仕事を仕上げたとしても意味がなくなってしまう。その中でも、コストを抑えるためにはどうしているか？## LCCから学ぶビジネスモデルLCCでは、低価格を実現するために以下を行なっている。1. 使用する飛行機の機種の統一をすることで、整備費、訓練費を削減2. 搭乗手続きのオンライン化3. 一人何役もこなす一方、納品のない受託開発では、このLCCのポイントを転用し、以下を実行することで低価格を実現している。1. 扱う技術の統一(Ruby on Rails, AWS/Herokuなど)2. クラウドを活用した自動化と合理化(AWS/Heroku)3. 幅広いスキルを備えたエンジニアの兼務(企画、プログラミング、保守・運用)いずれも効率化・生産性向上に繋がる。## ナレッジワーカーとしてのプログラマーこの「納品」のない受託開発をする上でのプログラマーは、ただ決まった仕様通りにコンピュータにデータを打ち込むだけの作業者では成り立たない。企画の段階から考えて、画面のデザイン、仕組みの設計、自らプログラミングして、クラウドの運用・保守まで、ソフトウェア・エンジニアリングに関わるすべての工程をこなせる人にならなければならない。このナレッジワーカーとして、スキルをあげるためには、経験を伴う教訓こそが最も効果的なフィードバックであるとのこと。### 人月を超えるには？一方、コンサルの秘密を読むと、成果ではなく時間でお金を取れといっている。これは、月額いくらというサブスクリプションででなければ、時間効率をしても「コンサルタントの秘密」では、成果に対してではなく時間に対してもらえとしている。これは、「納品のない受託開発」はサービス業ではあるが、目に見える形でのサービスを提供している(顧客が確認できる)ため、コンサルタントとは違っているのだろう。## 変化を抱擁する- Embrace Change (変化を抱擁せよ)- Fearless Change (自ら変わることを恐れてはならない)- Social Change 世の中に変わらないものなんてない。変化は必然で、それに対して頑なになるのではなく、いつでも変化に対応できるように、準備をしつつも自然体でいることが大事である。世の中が変わる、身の回りの環境が変わる、仕事内容が変わる。未来永劫同じことなんてないのだから、変化を受け入れつつ、対応できるように自分を変化させていきたい。「仕事は楽しいかね？」でいうところの、 **明日は今日とは違う自分になる** かな。[明日は今日とは違う自分になる～仕事は楽しいかね？～ - ギークを夢見るじょーぶん男子](http://d.hatena.ne.jp/meganii/20100829/1283051079)### どこを目指すか- 視点を上げる&gt; 顧客企業にとって、ソフトウェアは使い始めることで初めて価値が出る。要件定義をして、その通りに作ったとしても価値は生まれない。開発をしていると、どうしても開発者視点になってしまい、システムを完成させることが何よりの目的になってしまう。少し、視点を上げて、「テクノロジーを使って顧客ビジネス価値を高めること」というシステム・インテグレーションのあるべき姿を考えたい。- 巨大システム一括請負もなくならない&gt; 自分の仕事の対価は給料じゃないんですよ。顧客が払ってくれるお金です。そこの認識が甘いのに、業界云々語ったりSIオワコンだからって言ってWebサービス会社に移っても、多分あなたを包む閉塞感や問題は何も変わらない。最終的にはビジネスモデルとの相性であり、費用対効果というROIの問題にならざるを得ません。それが何を意味しているかというと、技術力があっても解決できない問題を解決してこそ、その技術力が活かせるし生きてくるんですよ。そこに関心が向かないと。ピンハネをDISって終わりにするのは簡単。あれが悪いこれが悪いなんて誰でも言える。でもそれをひとつ上の観点から整理して何故こうなっているのかという話が出来ないと、業界の立ち位置は変わらないから良くならないし、エンジニアのキャリア設計を考える上でもマイナス。そのたたき台を提供していけたらと思っています。  [人月商売が悪だと思っている、イノセントなあなたへ](http://gothedistance.hatenadiary.jp/entry/20111212/1323676223)自分の頭で考えもせずに、人月はすべて悪だーと反応するのは、やめて、どういう構造になっているかをもって見定めるようにしたい。また、顧客側・開発側どちらにも言い分はあることを- 現実をモデル化する人になりたい最近、オブジェクト指向、UML、ドメイン駆動設計の書籍を読みなおして、思うこと。問題を適切に扱って、それをモデル化し、実装まで落とし込めるようになりたい。## 参考書籍- システムインテグレーション崩壊 ~これからSIerはどう生き残ればいいか?- エリック・エヴァンスのドメイン駆動設計- アジャイルソフトウェア開発の奥義 第2版 オブジェクト指向開発の神髄と匠の技
---title: "オープン・イノベーションとデザインシンキング"date: 2015-10-31T10:49:04+09:00comments: truecategory: ['Tech']tags: ['Design','Inovation']published: trueslug: open-inovation-and-design-thinkingimg: "https://images-na.ssl-images-amazon.com/images/I/41gQn8vzZoL._SL160_.jpg"---## そもそもイノベーションとは？シュンペーターいわく、イノベーションとは、新しいものを生産する、あるいは既存のものを新しい方法で生産すること。1. 創造的活動による新製品開発（プロダクト・イノベーション）2. 新生産方法の導入（プロセス・イノベーション）3. 新マーケットの開拓（マーケット・イノベーション）4. 新たな資源（の供給源）の獲得5. 組織の改革（組織イノベーション）今まで日本では、経済社会を根幹から変えるようなイノベーションは革新的な科学技術から生じることが多いという認識から、イノベーションを「技術革新」と訳す傾向があった。しかし、イノベーションは、分野融合による既存技術の組合せや経営の革新等からも起こり得ることから、新たな価値の創出による経済社会の変革の側面に焦点が当たるようになった。このような背景から、2008年に成立した研究開発力強化法では、「イノベーションの創出」を**「新商品の開発又は生産、新役務の開発又は提供、商品の新たな生産又は販売の方式の導入、役務の新たな提供の方式の導入、新たな経営管理方法の導入等を通じて新たな価値を生み出し、経済社会の大きな変化を創出することをいう」** と定義した。[第3章　第1節　低成長下でのイノベーション活動 - 内閣府](http://www5.cao.go.jp/j-j/wp/wp-je15/h03-01.html#c0301)どうやら、2006年のときには、イノベーションを「科学的発見や技術的発明を洞察力と融合し発展させ、新たな社会的価値や経済的価値を生み出す革新」と定義していたが、「技術革新」という技術だけにとらわれるのではなく、元々シュンペーターが提唱していたパラダイムシフトの喚起に寄る形になっている。[平成18年版 科学技術白書 コラム目次 07－文部科学省](http://www.mext.go.jp/b_menu/hakusho/html/hpaa200601/column/007.htm){{% googleadsense %}}## Open Innovation, Design Thinkingとは？- Open Innovation- Design Thinkingこの二つは、どんな概念なのか？どんなことを目指しているのか？それぞれをざっくりというのであれば、Open Innovationとは、優秀な人材は探すのではなく、見つけて来てもらう。そのためのプラットフォームを作ること。このプラットフォームを提供するか、このプラットフォームを登っていくかに２極化していく。このプラットフォームの争いである。Design Thinkingは、ユーザを徹底的に**観察**し、プロトタイプを作り、実践し、改善を短期間で繰り返すプロセスと、その根底にある、”人間中心”の価値観である。## Open Innovation完全自動工場では、二人の従業員がいる。一人は、プログラマーでクリエイティブな作業をする人。もう一人は、工場のロボットが出すゴミを回収する人。## Design ThinkingDesign Thinkingの本質は、「クライアントと一緒に新しい価値を生んでいくための手段」にすぎないこと。プロトタイピング、ブレーンストーミングなどは、tool set、お客さんと共にゴールに到達するための道具にすぎない。デザイン・シンキングを目的化しないこと！### Design Thinkingの３つのCore- Insight, observation, and empathy- Prototypes- Storytelling### Balance Technology with Humanテクノロジーと人間性のバランスを取ること！言ってることとやっていことが本当かどうかは、分からない。デスクに座っているのではなく、外へ出て、お客さんと直接話しをすること。### Treat Life as an Experimentもっと人生を実験だと思って、過ごしてみること！ダイソンでは、5128もの試作品を作ったそうだ。お客さんに対して、使ってもらって指摘をもらって、再度試作品を改善していく。### Leverage the power of storytelling相手に伝えるときには、物語として伝えること！&gt;特徴は、ユーザーを徹底的に観察し、プロトタイプを作り、実践し、改善を短期間で繰り返すプロセスと、その根底にある、“人間中心”という価値観にある。[なぜ今、デザイン思考が注目を集めているのか？ - Build Insider](http://www.buildinsider.net/enterprise/designthinking/01)## 日本人以外は、日本人を世界一クリエイティブだと思っている&gt; Globally, Japan is regarded the most creative country, **except by the Japanese**[Adobe State of Create Global Benchmark Study](http://www.adobe.com/aboutadobe/pressroom/pdfs/Adobe_State_of_Create_Global_Benchmark_Study.pdf)unlockingされているだけだという。## 参考- 日立社会イノベーション講演 - [平成18年版 科学技術白書 コラム目次 07－文部科学省](http://www.mext.go.jp/b_menu/hakusho/html/hpaa200601/column/007.htm)- [【日本千思万考】イノベーションとは技術革新のみに非ず　「世界を変える」の野望持つ若者が日本再生のカギ握る（1/5ページ） - 産経WEST](http://www.sankei.com/west/news/150119/wst1501190007-n1.html)- [CiNii 論文 -  オープン・イノベーションとプラットフォーム・ビジネス(&lt;特集&gt;「オープン・イノベーション」の再検討)](http://ci.nii.ac.jp/naid/110008440956/)     実践 デザイン・シンキング posted with ヨメレバ   日経デザイン 日経BP社 2014-12-12       Amazon  Kindle  楽天ブックス                   	  	  	   図書館     
---title: "Azureのリモートデスクトップ周りの調査"date: 2015-11-17T08:04:04+09:00comments: truecategory: ['Tech']tags: ['RD','Azure']published: trueslug: remote-desktop-protocolimg: "https://farm6.staticflickr.com/5828/22680623077_383e4a6595_z.jpg" ---## Gateway異なるネットワーク・プロトコルを使用する2つのネットワークを接続する任意のコンピュータ## Remote Desktop Gateway- 承認されたユーザが、インターネット接続が可能な任意のコンピュータから企業ネットワーク上のリモートコンピュータに接続できるようにする。- RDP(Remote Desktop Protocol)とHTTPSプロトコルを利用する### 利点- VPN接続なしに、インターネットから企業ネットワークへのリモートデスクトップ接続ができる- FWを経由してリモートコンピュータに接続可能- コンピュータ上で実行中の他のプログラムと、ネットワーク環境を共有できる。これにより、企業ネットワークの代わりにISP接続を使用してリモート接続でデータを送受信できる{{% googleadsense %}}## 参考-[ターミナル サービス ゲートウェイ サーバーとは](http://windows.microsoft.com/ja-jp/windows-vista/what-is-a-terminal-services-gateway-server)     Azure仮想マシンと仮想ネットワーク  from Kuninobu SaSaki  
---title: "NetBIOSとは？"date: 2015-11-23T21:06:57+09:00comments: truecategory: ['Tech']tags: ['Windows']published: trueslug: netbios---{{% googleadsense %}}## NetBIOSとは？昔　Windowsネットワークのベースになっているもの。  　　NetBIOS名でやりとりをしていた。今　NetBIOS over TCP/IP  TCP/IPの上でNetBIOSのAPIを出来るようにした。  ⇛　Active DirectoryでDNSを導入  ## Unix系は？ ⇛　TCP/IP昔　hostsファイルに、IPアドレスとホスト名を記述していた。  　　ひとつひとつのコンピュータに定義しなければいけなかった。今　DNSによるホスト名とIPアドレスの変換NetBIOSとは、NetBEUI(プロトコル・スタック)+NetBIOS(API)という過去の技術を継承するために残っているもの。## 参考- [NETBIOS名とホスト名の違い | Windowsインフラ管理者への道](http://ebi.dyndns.biz/windowsadmin/2009/02/10/netbios%e5%90%8d%e3%81%a8%e3%83%9b%e3%82%b9%e3%83%88%e5%90%8d%e3%81%ae%e9%81%95%e3%81%84/)
---title: "ドメインサービスとは？"date: 2015-11-25T20:34:53+09:00comments: truecategory: ['tech']tags: ['domain','DDD']published: trueslug: domain-servicesimg: "https://images-na.ssl-images-amazon.com/images/I/619Gh1s721L._SL160_.jpg"---## ドメインサービスとは？Windows Communication Foundation(WCF), Silverlight周りで出てくるドメインサービスとは一体なにものだろうか。ドメイン駆動設計(DDD)の文脈から読み解いてみる。「サービス」と聞くと、粒度の粗いコンポーネント(リモートクライアントから複雑な業務システムを利用できるようにするもの)を想像するかもしれないが、ドメインサービスは違う。また、アプリケーションサービスも頭に思い浮かぶかもしれないが、それも違う。アプリケーションサービスには、ビジネスロジックを組み込みたくないが、ドメインサービスにはビジネスロジックを組み込んでおきたい。&gt;時には単純に「物」や「値」にはできないこともある。- ドメインにおける重要なプロセスや変換処理が、エンティティや値オブジェクトの自然な責務でない場合、その操作は、サービスとして宣言される独立したインターフェースとしてモデルに追加すること- モデルの言語を用いてインターフェースを定義し、操作名が必ずユビキタス言語の1部になるようにすること- サービスには状態を持たせないこと{{% googleadsense %}}## ある操作が既存のエンティティや値オブジェクトに属するものでないとみなせる条件は？- 重要なビジネスロジックを実行する- ドメインオブジェクトを、ひとつの構成から別の構成に変換する- 複数のドメインオブジェクトからの入力にもとづいて値を算出するe.g. 何かの操作で複数の集約(合成)が必要になる。       何かのメソッドをエンティティや値に持たせるのが単に不格好やりすぎ注意！ やり過ぎると、*ドメインモデル貧血症* になる。     実践ドメイン駆動設計[Kindle版] posted with ヨメレバ   ヴァーン・ヴァーノン 翔泳社 2015-03-19       Kindle  Amazon[書籍版]                               	  	  	          
---title: "WBSの作り方"date: 2015-12-05T07:29:39+09:00comments: truecategory: ['Tech']tags: ['IT','Work','WBS']published: trueslug: work-breakdown-structureimg: "https://images-na.ssl-images-amazon.com/images/I/51AEd5mQUNL._SL160_.jpg"---WBSとは？WBSを作る上での注意点は？仕事上、見ることはあったがいざ作ろうと思うと、何に気をつければよいか分からない。{{% googleadsense %}}## WBSとは？Work Breakdown Structureの略。WBSは、プロジェクトの責任範囲(スコープ)を可視化したものである。## プロジェクトマネジメントにおけるWBSの位置付け&gt; ・プロジェクトの『スコープ』はどうなっているのか。WBSを見せろ。  &gt; ・このプロジェクトの『クリティカル・パス』は何か？ アクティビティ・ネットワークの上で示せ。 主要なリスクは何か？  &gt; ・現在までのPV, AC, そしてEVはいくらか。完成時のCost EACを予測せよ！  &gt; [海外プロジェクト・マネジメントにおけるシステムズ・アプローチとは　〜化学工学会展望講演（9/09）から : タイム・コンサルタントの日誌から](http://brevis.exblog.jp/23678577/)プロジェクトの3大制約は、- スコープ- スケジュール- コストこれに対応するのが、- WBS- クリティカル・パス- EV## P-WBSとF-WBS### P-WBS(Product WBS)成果物単位でWBSを作成する。### F-WBS(Functional WBS)作業プロセス単位でWBSを作成する。     世界を動かすプロジェクトマネジメントの教科書　～グローバルなチャレンジを成功させるOSの作り方[Kindle版] posted with ヨメレバ   佐藤知一 技術評論社 2015-09-17       Kindle  Amazon[書籍版]                               	  	  	          ## 参考- [ＷＢＳのつくり方 : タイム・コンサルタントの日誌から](http://brevis.exblog.jp/1587847)- [海外プロジェクト・マネジメントにおけるシステムズ・アプローチとは　〜化学工学会展望講演（9/09）から : タイム・コンサルタントの日誌から](http://brevis.exblog.jp/23678577/)
---title: "統計学が最強の学問である[実践編]"date: 2015-12-06T16:48:49+09:00comments: truecategory: ['Book']tags: ['book','statistics','統計学']published: trueslug: statistics-is-literacy-for-the-next-generation-professionalimg: "https://images-na.ssl-images-amazon.com/images/I/51vZ69hPFHL._SL160_.jpg"---     統計学が最強の学問である［実践編］[Kindle版] posted with ヨメレバ   西内 啓 ダイヤモンド社 2014-11-04       Kindle  Amazon[書籍版]                               	  	  	          {{% googleadsense %}}統計学の活用方法には、以下の3パターンある。- 人間の行動の因果関係を洞察する- 現状の把握- 今後の予測ビジネスに必要なのは、人間を洞察するための統計学### 洞察とは？営業の仕事の場合、売り上げに繋がりやすい訪問先と繋がりにくい訪問先の違いはなにか。人事の仕事なら、自社の利益に繋がる人材と繋がらない人材の違いを明らかにする調達なら、価格交渉に成功する状況としない状況の違い平均値、割合という現状把握のための手法からスタートして、データからいかにその背後の因果関係を洞察するかという目的のための統計学を説明する1. 平均と割合、標準偏差 という最も基本的な統計学の道具の説明データを足してその数で割るという当たり前の計算過程ではなく、なぜそうした計算を行ったけっか得られる平均が、洞察の統計学で重要になるかを理解する2. グループ間で平均値や割合に偶然の誤差ではないレベルの差があるかどうかという統計的仮設検定の考え方たとえば、既存店舗と新店舗の平均客単価100円の違いは、意味のある違いなのか？3. グループ間の違いだけでなく、ある値が増えれば増えるほど別の値は増える傾向にあるのか、それとも逆に減る方向にあるのか、関連性を分析するための回帰分析## 「洞察」の統計的に必要な3つの知識1. 平均値や割合など統計指標の本質的な意味の理解2. 「データを点ではなく幅で捉える」という考え方3.  「何の値を何ごとに集計すべきか」という考え方**平均値と割合というのは本質的にはまったく同じである**### 量的変数- 年齢、収入、購買金額といった数で表される情報。- 「平均値」で集計- 「量として大きいか小さいか」という情報### 質的変数- 性別、職業、商品ジャンルといった数ではなく文字で表される情報- それぞれの分類に該当するものの「割合」を集計する- 「大小ではなく、そもそもの質が異なる」という情報### なぜ平均値と割合が本質的に全く同じことなのだろうか。e.g. 100人に対する調査で60人が男性というデータが得られた場合。このとき、男性の割合は、60%「男性である度合い」は？（調査の結果自分が男性であると回答した場合、1。そうでなければ、0という値。）(1という値 60人分 +  0という値 40) / 100 = 0.6　「男性である度合い」の平均値&gt; 割合と平均値というまったく別物の集計方法が存在しているわけではなく、数の形で表現できない質的変数は、それぞれの分類についての1か0かという形で表現される「該当するか度合い」という量的変数を考え、その平均値を計算している。p26## データを点ではなく幅で捉えるという考え方点とは、平均値や割合平均値や割合を計算することは、物体を1点で支えることができる重心を求めることと同義であり、これにより、データが何千、何万とあっても、この重心を見ることでわかりやすい目安を得ることができる。ただし、これには落とし穴があり、データがどのように散らばっているかを理解することが出来ない。よって、このように点ではなく、「おおよそデータはどこからどこまでの範囲に存在しているかという」幅で考えるべき！## 何の値を何事に集計すべきか**最終的にコントロールしたい結果(アウトカム)とそれに影響を与えうる原因の候補**という観点を持つべき。### アウトカム(成果指標)「最終的にコントロールしたい結果」のこと。売り上げとか、PVとかデータ分析を価値につなげるには、最大化したり、最小化したりすべきゴールとなる項目が何なのかを考えなければならない### 説明変数アウトカムの違いに影響するかもしれない、あるいは、その違いを説明できるかもしれない要因のこと。説明変数の優先順位で意識すべきこと- その因果関係が「当たり前すぎる」ものでないこと- アウトカムへの影響が明らかになったとしてその原因のコントロールが容易であること- いままでにあまり注目して分析されたことがないこと## 平均値の話**平均値とは最小二乗方法に基づき、観測値に含まれるズレを最も小さくすると考えられる良い推定値である**よく、平均年収○○万円みたいな統計情報が出てくるのを見かける。その度に、一部の富裕層が、全体の平均年収を引き上げてるんだろうなぁとか、思う人もいるかもしれない。「平均値だけを見ても意味ないよ！」って思う人もいるかもしれない。でも、本書を読むと、平均値を取り上げるからくりが読めてくる。それは、「現状把握」と「因果関係の洞察」で意味が変わってくるからである。現状把握の統計学においては、中央値(メディアン)、最頻値(モード)を併せて使うべきだが、「因果関係の洞察」では、平均値で計算すべきであるということが分かってくる。(なぜそうなるかは、本書を読んで欲しい。説明しろと言われると説明できない程度の理解)### 中央値真ん中の順位の値### 最頻値一番頻度の高い値4分位点の考えを用いて、もう少しデータの分布の状況を把握することもできるかが、依然として、並べ替えるのが大変、数式展開が難しく、総量の差異を計算するのが難しいという点は依然として残っている。そこで、「分散」の考え方が出てくる。「ズレの二乗の合計値」のかわりに「ズレの二乗の平均値」を使ってデータのバラつきを表現してやればいい。分散の√を計算して得られた値のことを**標準偏差**という。標準偏差とは、「標準的な平均値からの偏り」データのバラつきがどのようなものであれ、平均値-2SD(標準偏差の2倍)〜平均値+2SDまでの間に必ず全体の4分の3以上のデータが存在することが証明されている正規分布に従うデータであれば、この「4分の3以上」というボリュームはもっと大きくなり、平均値±2SD(正確には1.96SD)の範囲に95%のデータが存在する。[[こつこつ勉強]統計学入門#1 | じょーぶん部](http://meganii.com/blog/2014/11/04/statistics/)
---title: "CIOとは何者？"date: 2015-12-08T19:55:40+09:00comments: truecategory: ['Tech']tags: ['IT']published: trueslug: what-is-cioimg: "https://images-na.ssl-images-amazon.com/images/I/51w%2BZNeyQuL._SL160_.jpg"---{{% googleadsense %}}     CIO(最高情報責任者)の新しい役割 posted with カエレバ   岩崎 尚子 かんき出版 2008-04-08       Amazon  楽天市場     ## 読む目的は？以下の概要を押さえるため。- CIOってそもそも何の略？- 何をする人なの？## CIO (Chief Information Officer)とは？- 最高情報責任者、あるいは、最高情報統括責任者と訳される- ICT(Information and Communication Technology)関連の業務全般を統括する責任者である。本書では、「組織において、情報管理、情報システムの統括を含む三略の立案と執行を主たる任務とする役員であり、変革のリーダー」というしている。CIOについて調べていると、「政府CIOポータル」なるサイトがあり、そのサイトにおける定義としては、以下のようなものであった。&gt;戦略パートナー経営陣の一員として、経営戦略を展開させるための、ITの観点を持った積極的な参加者戦術の実行者戦略を実行する上でのコントロールタワーとして実行する責任者ニーズに応える支援者関係者の問題を把握し、ビジネス志向の支援を実施[CIOとは | 政府CIOポータル](https://cio.go.jp/what)要するに、ITに対して明るく、経営戦略を立てる人なのかなと。CXXという名称には、その他にもいろいろあって、CEO Chief Executive Officer 最高経営責任者COO Chief Operation Officer 最高執行責任者CFO Chief Financial Officer 最高財務責任者という略称があり、それぞれの分野の幹部であることを示している。## CIOの責務では、CIOの責務にはどのようなものがあるかというと、本書では以下のように定義されている。- 株主やステークホルダーに対して、適切なIT投資が行われているかどうか論理的に説明すること- 財務を中心にIT内部統制の観点からガバナンスを強化していくこと## CIOが誕生した理由### トヨタCIOの場合- 物理的なネットワークやデータセンターの充実- 業務のアプリケーションや開発、生産、物流、調達などの分野の業務を標準化し、情報システム部門のアプリケーションを統一する製造業では、まず上記２つの流れを明確にしなければならない。「情報の清流化」が求められている。### 「情報の清流化」どういうこと？- 生の情報やデータを、誰が見てもわかりやすいような使い勝手の良い物に直すこと。(CIOだけが数多い情報を見ていても意味が無い)- 情報の重要性を見極め、取捨選択し、ユーザ(使う側)が効率的に利用できる形にして渡すことグローバリゼーションによる標準化と、重要なノウハウ部分のローカリゼーション## 東京証券取引所CIOの場合グローバル化によるビジネスモデルの変化と、トランザクション数の大幅##CIOに必要な最重要コンピタンス1. 機能的な政策や組織の構築2. リーダーシップと管理能力3. 最適なプロセス・変革の管理方法4. 情報資源戦略の計画の立て方5. IT業績評価のモデル・手法6. 効果を生み出すプロジェクト・マネジメント7. IT投資の資本計画と評価方法8. 情報セキュリティの強化手法と情報保護9. エンタープライズ・アーキテクチャ10. 調達11. 技術経営と評価方法12. 新領域とイノベーションITに対する知識と、経営の知識、そして、業務のこと理解している。イノベーターであること。## 参考     CIO(最高情報責任者)の新しい役割 posted with カエレバ   岩崎 尚子 かんき出版 2008-04-08       Amazon  楽天市場     自分は、図書館でたまたま見つかったCIOについて書かれた本を読んだだけなので、情報としては古いかもしれない。Amazonのレビューを読む限りでは、以下の「図解 CIOハンドブック」の方をオススメしている方がいたので、見てみるもの良いかもしれない。     図解 CIOハンドブック 改訂4版[Kindle版] posted with ヨメレバ   野村総合研究所 システムコンサルティング事業本部 日経ＢＰ社 2013-08-28       Kindle  Amazon[書籍版]                               	  	  	          
---title: "Capyabara + PhantomJS(poltergeist)のRubyスクリプトをcronで流したい"date: 2016-01-16T22:34:08+09:00comments: truecategory: ['Tech']tags: ['cron']published: trueslug: how-to-run-bundle-exec-with-cron---Capyabara + PhantomJS(poltergeist)のRubyスクリプトをcronで流したいと思った時のお話。シェルにログインして実行すると、上手く動作するのに、cronからは動かない。結論から言うと、自分の環境では、- `.bash_profile`にphantomjsのPATHを明記($HOME/pahtomjs/bin直下にバイナリ生成済み)する- `bash -lc` でログインして、実行するdirectoryまで行き、実行することで、cronで実行できた。cronの使い方も分からないが、PATH関係も疎いので{{% googleadsense %}}## 最終形```# Get the aliases and functionsif [ -f ~/.bashrc ]; then        . ~/.bashrcfiexport PATH="$PATH:$HOME/bin"export PATH="$HOME/phantomjs/bin:$PATH"export PATH="$HOME/.rbenv/bin:$PATH"eval "$(rbenv init -)"``````00 06 * * * /bin/bash -lc 'cd /home/app/appname/current/; bundle exec ruby script.rb 1&gt;&gt; /home/app/appname/current/script.log 2&gt;&gt; /home/app/appname/current/error.log'```## 参考- [cronでrbenvのrubyを使う３つの方法 - sonots:blog](http://blog.livedoor.jp/sonots/archives/33204053.html)- [cron力をつけよう！全てのcrontab入門者に贈る9個のテクニック · DQNEO起業日記](http://dqn.sakusakutto.jp/2012/06/cron_crontab9.html)- [-e オプションは、環境変数 VISUAL もしくは EDITOR で指定されているエディターを使って、現在の crontab を編集するのに使われる。編集終了後、 変 更された crontab は自動的にインストールされる。  ](http://www.server-memo.net/tips/crontab.html)
---title: "Lets's Encryptでブログの常時SSL化にチャレンジ"date: 2016-01-17T22:44:45+09:00comments: truecategory: ['Tech']tags: ['https', 'SSL', 'Lets Encrypt']published: trueslug: lets-encrypt-always-on-sslimg: "https://images-na.ssl-images-amazon.com/images/I/511NShYrT8L._SL160_.jpg"---管理画面とか、APIのエンドポイントを作るためになんとなく、httpsにしておきたいと常々思ってたので、無料で証明書を発行できるLets's Encryptを利用して、これを機にブログも常時SSL化を目指した。基本的には、提供されるLet's Encryptのコマンドを叩いて、画面の指示に従っていけば、証明書を発行することが出来た。こんなことなら、もっと早く着手すればよかったと思うぐらいである。その中でもハマった点は、Pythonのバージョンと、443のポートの開け忘れで、手順も含めて、忘れないようにメモしておく。Lets's Encryptの使い方は、以下のサイトを参考にした。- [How It Works - Let's Encrypt - Free SSL/TLS Certificates](https://letsencrypt.org/howitworks/)- [Let's Encrypt の使い方 - Let's Encrypt 総合ポータル](https://letsencrypt.jp/usage/)- [無料SSL証明書の Let’s Encrypt が公開されたので実際に試してみた | Webセキュリティの小部屋](http://www.websec-room.com/2015/12/04/2380){{% googleadsense %}}## 環境- CentOS6.4## ハマったところ### PythonのバージョンCentOS 6で標準インストールされているPythonのバージョンは、`2.6.6`と、Let’s Encryptのコマンドが要求するバージョンより古いため、実行すると以下のようなエラーが発生した。`--debug`のオプションを付けることで、無理やり実行させることも出来るみたいだが、おとなしくバージョンを上げて対応した。```./letsencrypt-auto --helpWARNING: Python 2.6 support is very experimental at present...if you would like to work on improving it, please ensure you have backupsand then run this script again with the --debug flag!```意外と、yumからpython27の情報がなかった。(みんなビルドしてるみたい)そのなかでも、欲しい情報が以下のページに載っていたので、参考にして、Python27をインストールした。[CentOS6 で Let's Encrypt #letsencrypt - @bayashi Diary](http://bayashi.net/diary/2015/1124)```yum install centos-release-SCLyum install python27 python27-python-toolsscl enable python27 bash```### SSLのポート(443)を空けていないため通信出来ない以下のエラーが出た。これは、443ポートを開けていないため、エラーになっている模様。```./letsencrypt-auto certonly -a standalone -d meganii.comUpdating letsencrypt and virtual environment dependencies......Requesting root privileges to run with virtualenv: /root/.local/share/letsencrypt/bin/letsencrypt certonly -a standalone -d meganii.comVersion: 1.1-20080819Version: 1.1-20080819Failed authorization procedure. meganii.com (tls-sni-01): urn:acme:error:connection :: The server could not connect to the client to verify the domain :: Failed to connect to host for DVSNI challenge, meganii.com (tls-sni-01): urn:acme:error:connection :: The server could not connect to the client to verify the domain :: Failed to connect to host for DVSNI challengeIMPORTANT NOTES: - The following errors were reported by the server:   Domain: meganii.com   Type:   urn:acme:error:connection   Detail: Failed to connect to host for DVSNI challenge```443のポートを開けるようにiptablesに設定を追加した。(以下は、ansibleのコマンド)### /etc/sysconfig/iptables```- name: add iptables rule for https  lineinfile: dest=/etc/sysconfig/iptables regexp="{{ https_port }}" line="-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport {{ https_port }} -j ACCEPT" insertbefore="^# add end" state=present- name: iptables restart  command: /etc/init.d/iptables restart```[【Let’s Encrypt】エラー表示「The server could not connect to the client to verify the domain」 | 鯖缶備忘録](http://blog.ctwnet.com/black/?p=231)## 作業内容ハマった点を先に記載し、作業順序とは逆転したのだが、作業内容は以下のとおり。### 1. リポジトリからダウンロード```git clone https://github.com/letsencrypt/letsencrypt```### 2. テスト以下のコマンドを実行すると、環境のチェックがされ、問題なければヘルプの情報が表示される。自分のCentOSの環境だと、Pythonのバージョンが古いため、警告が出た。```./letsencrypt-auto --help```#### エラーメッセージ```./letsencrypt-auto --helpWARNING: Python 2.6 support is very experimental at present...if you would like to work on improving it, please ensure you have backupsand then run this script again with the --debug flag!```上記の「ハマった点 Python27」のインストール手順で、Python27をインストールした。以下root権限で作業してます。```yum install centos-release-SCLyum install python27 python27-python-toolsscl enable python27 bashpython -VPython 2.7.5```Pythonのバージョンが上がったことを確認した後、再度以下のコマンドを実施すると、警告は出るがヘルプが出るようになった。(`scl enable`の動きと、Pythonのバージョンについては要確認)```./letsencrypt-auto --help```### 3. Let's Encryptクライアントの実行次に、以下のコマンドを実行する。 `--email {自分のemailアドレス}`、`-d {対象ドメイン}`という指定方法である。```./letsencrypt-auto certonly --standalone --email email@mail.com -d meganii.com```途中でWebサーバを停止させるように指示があるため、nginx(Webサーバ)を停止させ、再度同じコマンドを実行する。(このタイミングで、ポート443を空けておらず、いくらnginxを再起動させても、正常に動作しなかった)```service nginx stop``````./letsencrypt-auto certonly --standalone --email email@mail.com -d meganii.comIMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at   /etc/letsencrypt/live/meganii.com/fullchain.pem. Your cert will   expire on 2016-04-14. To obtain a new version of the certificate in   the future, simply run Let's Encrypt again. - If you like Let's Encrypt, please consider supporting our work by:   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate   Donating to EFF:                    https://eff.org/donate-le```これで、`/etc/letsencrypt/live/meganii.com/`の下に以下のファイルが作られる。これらの証明書を利用して、Nginxの設定を行う。```cert.pem       #サーバ証明書chain.pem      #中間証明書fullchain.pem  #サーバ証明書＋中間証明書privkey.pem    #サーバ秘密鍵```## 4. nginxの設定nginxの設定は、以下のブログを参考にした。[Let's EncryptでHTTPSサーバを建てたついでにSSL LabsでA+評価をめざす - sonickun.log](http://sonickun.hatenablog.com/entry/2015/12/19/212517)上記ブログの手順をもとに、DH鍵を生成する。```openssl dhparam -out dhparam.pem 2048openssl dhparam -text -in dhparam.pem -noout```### default.confの設定最終的に、下記の設定でNginxを走らせた。```## The default server#server {  listen       80 default_server;  server_name  meganii.com;  return       301 https://meganii.com$request_uri;}server {    listen 443 ssl http2;    listen [::]:443 ssl http2;    server_name  meganii.com;    ssl_certificate      /etc/letsencrypt/live/meganii.com/fullchain.pem;    ssl_certificate_key  /etc/letsencrypt/live/meganii.com/privkey.pem;    ssl_session_timeout  10m;    ssl_prefer_server_ciphers  on;    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;    ssl_ciphers "EECDH+ECDSA+AESGCM EECDH+aRSA+AESGCM EECDH+ECDSA+SHA384 EECDH+ECDSA+SHA256 EECDH+aRSA+SHA384 EECDH+aRSA+SHA256 EECDH+aRSA+RC4 EECDH EDH+aRSA RC4 !aNULL !eNULL !LOW !3DES !MD5 !EXP !PSK !SRP !DSS !RC4";    ssl_dhparam /etc/nginx/ssl/dhparam.pem;    add_header Strict-Transport-Security "max-age=15768000; includeSubdomains";    #charset koi8-r;    #access_log  logs/host.access.log  main;    location / {        root   /home/web/www/meganii.com;        index  index.html index.htm;    }    error_page  404              /404.html;    location = /404.html {        root   /usr/share/nginx/html;    }    # redirect server error pages to the static page /50x.html    #    error_page   500 502 503 504  /50x.html;    location = /50x.html {        root   /usr/share/nginx/html;    }    gzip on;    gzip_disable "msie6";    gzip_comp_level 6;    gzip_min_length  1100;    gzip_buffers 16 8k;    gzip_proxied any;    gzip_types       text/plain application/xml text/css text/js text/xml application/x-javascript text/javascript application/javascript application/json    application/xml+rss;}```下記は、httpでアクセスしてきた場合、httpsにリダイレクトする設定である。rewriteする方法もあるが、公式ページに "This is a wrong"と書いてあるので、推奨する方法を採用した。```server {    listen       80;    server_name  www.example.org  example.org;    if ($http_host = example.org) {        rewrite  (.*)  http://www.example.org$1;    }    ...}This is a wrong, cumbersome, and ineffective way. The right way is to define a separate server for example.org:```[Converting rewrite rules](http://nginx.org/en/docs/http/converting_rewrite_rules.html)## 参考- [Let's Encrypt の使い方 - Let's Encrypt 総合ポータル](https://letsencrypt.jp/usage/)- [無料SSL証明書の Let’s Encrypt が公開されたので実際に試してみた | Webセキュリティの小部屋](http://www.websec-room.com/2015/12/04/2380)- [CentOS6 で Let's Encrypt #letsencrypt - @bayashi Diary](http://bayashi.net/diary/2015/1124)- [Let's EncryptでHTTPSサーバを建てたついでにSSL LabsでA+評価をめざす - sonickun.log](http://sonickun.hatenablog.com/entry/2015/12/19/212517)     nginx実践入門 (WEB+DB PRESS plus) posted with ヨメレバ   久保 達彦,道井 俊介 技術評論社 2016-01-16       Amazon  Kindle  楽天ブックス                   	  	  	          
---title: "El Capitanへのアップグレード時AppStoreに接続できなくなった場合(さらにキーチェーンアクセスでも対処できなかった時)の対処法"date: 2016-01-23T20:51:43+09:00comments: truecategory: ['Tech']tags: ['Mac']published: trueslug: el-capitan-upgrade-error---今朝、El Capitanのアップグレードしたのだが、いつものごとくエラーが出たので対処方法をまとめておく。## 起きた現象- App Storeにアクセスできない- 通信が遅いApp Storeから気軽にアップデートを行い、意外とすんなりいけたかと思ったがやはり問題が生じた。調べてみると、SSL証明書が壊れるケースがあり、今回もそれに該当した。解決方法としては、「Keychan Access.app」で、VeriSign関連の証明書を削除すればよいらしいのだが、自分の環境の場合、GUIから対象の証明書を選択しただけで、アプリが落ちてしまい対処できなかった。※以下の証明書を選択するとアプリが固まってしまった。```VeriSign Class 3 Public Primary Certification Authority - G3VeriSign Class 3 Public Primary Certification Authority - G5```大概のことは、ターミナル(terminal)からできるだろうと思い調べたら対処方法があったので共有したい。{{% googleadsense %}}## 対処方法### 1. 該当証明書の存在確認下記コマンドで、VeriSignの証明書を検索する。```security find-certificate -c "VeriSigh" -Z -a```### 2. SHA-1値取得「1. 該当証明書の存在確認」で、削除したいリストが出ていることを確かめた上で以下のコマンドを実行して、一意となるSHA-1値を取得する。```security find-certificate -c "VeriSigh" -Z -a | grep SHA-1```### 3. 削除以下のコマンドを実行し、取得したSHA-1の値を指定して削除する。```sudo security delete-certificate -Z {取得したSHA-1の値} /Users/meganii/Library/Keychains/login.keychain```※ `/Users/meganii/Library/Keychains/login.keychain`の部分は、`security list-keychains`で取得できるlogin.keychainの値### 4. 再起動最後は、再起動すれば、App Storeにも接続することができた。## �後は、毎度おなじみ Homebrew 周り```brew doctorPlease note that these warnings are just used to help the Homebrew maintainerswith debugging if you file an issue. If everything you use Homebrew for isworking fine: please don't worry and just ignore them. Thanks!Warning: The /usr/local is not writable.You should probably change the ownership and permissions of /usr/localback to your user account.  sudo chown -R $(whoami) /usr/localWarning: Some directories in /usr/local/share/man aren't writable.This can happen if you "sudo make install" software that isn't managedby Homebrew. If a brew tries to add locale information to one of thesedirectories, then the install will fail during the link step.You should probably `sudo chown -R $(whoami)` them:    /usr/local/share/man/mannWarning: The /usr/local directory is not writable.Even if this directory was writable when you installed Homebrew, othersoftware may change permissions on this directory. For example, upgradingto OS X El Capitan has been known to do this. Some versions of the"InstantOn" component of Airfoil or running Cocktail cleanup/optimizationsare known to do this as well.You should probably change the ownership and permissions of /usr/localback to your user account.  sudo chown -R $(whoami):admin /usr/localWarning: Unbrewed dylibs were found in /usr/local/lib.If you didn't put them there on purpose they could cause problems whenbuilding Homebrew formulae, and may need to be deleted.Unexpected dylibs:    /usr/local/lib/libnghttp2.14.dylib    /usr/local/lib/libtcl8.6.dylib    /usr/local/lib/libtk8.6.dylibWarning: Unbrewed header files were found in /usr/local/include.If you didn't put them there on purpose they could cause problems whenbuilding Homebrew formulae, and may need to be deleted.Unexpected header files:    /usr/local/include/fakemysql.h    /usr/local/include/fakepq.h    /usr/local/include/fakesql.h    /usr/local/include/itcl.h    /usr/local/include/itcl2TclOO.h    /usr/local/include/itclDecls.h    /usr/local/include/itclInt.h    /usr/local/include/itclIntDecls.h    /usr/local/include/itclMigrate2TclCore.h    /usr/local/include/itclTclIntStubsFcn.h    /usr/local/include/mysqlStubs.h    /usr/local/include/nghttp2/nghttp2.h    /usr/local/include/nghttp2/nghttp2ver.h    /usr/local/include/odbcStubs.h    /usr/local/include/pqStubs.h    /usr/local/include/tcl.h    /usr/local/include/tclDecls.h    /usr/local/include/tclOO.h    /usr/local/include/tclOODecls.h    /usr/local/include/tclPlatDecls.h    /usr/local/include/tclThread.h    /usr/local/include/tclTomMath.h    /usr/local/include/tclTomMathDecls.h    /usr/local/include/tdbc.h    /usr/local/include/tdbcDecls.h    /usr/local/include/tdbcInt.h    /usr/local/include/tk.h    /usr/local/include/tkDecls.h    /usr/local/include/tkPlatDecls.hWarning: Unbrewed .la files were found in /usr/local/lib.If you didn't put them there on purpose they could cause problems whenbuilding Homebrew formulae, and may need to be deleted.Unexpected .la files:    /usr/local/lib/libnghttp2.laWarning: Unbrewed .pc files were found in /usr/local/lib/pkgconfig.If you didn't put them there on purpose they could cause problems whenbuilding Homebrew formulae, and may need to be deleted.Unexpected .pc files:    /usr/local/lib/pkgconfig/libnghttp2.pc    /usr/local/lib/pkgconfig/tcl.pc    /usr/local/lib/pkgconfig/tk.pcWarning: Unbrewed static libraries were found in /usr/local/lib.If you didn't put them there on purpose they could cause problems whenbuilding Homebrew formulae, and may need to be deleted.Unexpected static libraries:    /usr/local/lib/libnghttp2.a    /usr/local/lib/libtclstub8.6.a    /usr/local/lib/libtkstub8.6.aWarning: Your Xcode (6.4) is outdatedPlease update to Xcode 7.2.Xcode can be updated from the App Store.```### 対応- 以下のコマンドを実行```sudo chown -R $(whoami) /usr/local/usr/local/share/man/mann```- XCodeのバージョンアップ## 参考- [El CapitanのSSL問題、Keychainもフリーズする場合の対処法 | 踊る犬.net](http://blog.odoruinu.net/2016/01/14/how-to-solve-el-capitan-ssl-problem-with-freezing-keychain/)
---title: "Electronでデスクトップアプリ作成"date: 2016-01-25T07:15:22+09:00comments: truecategory: ['Tech']tags: ['electron','React.js']published: trueslug: electron-tutorialimg: "https://farm2.staticflickr.com/1653/24649661356_a4251f1e29_n.jpg"---  Electronを使って自分用のデスクトップアプリを作りたいと思い、調べてみた。{{% googleadsense %}}## JavaScriptの開発環境を整えるnode.jsのバージョンをみると、未だに 0.1系だった。2016/01/25現在、Node.jsの最新バージョンは、`v5.5.0` !!!![Node.js](https://nodejs.org/en/)JavaScriptの進化はすごい！！と思ったら、Node.jsとio.jsの争いがあったみたいで、Node.jsは1系の次は2,3を飛ばしてv4になってみたい。### nodebrewその前に、Homebrewで入れていたNode.jsを削除する。```brew uninstall node```nodeのバージョンを管理するために、nodebrewを導入する。[hokaccha/nodebrew: Node.js version manager](https://github.com/hokaccha/nodebrew)```curl -L git.io/nodebrew | perl - setup````.bash_profile`にパスを通す```export PATH=$HOME/.nodebrew/current/bin:$PATH```bashに適用する```source ~/.bashrc```### Node.jsのインストールバージョンを指定してインストールする。```nodebrew install-binary v.5.5.0```Node.jsとnpmが最新化された。```node -vv5.5.0npm -v3.3.12```## Electronのインストールとアプリ起動以下の通りコマンドを叩けば、最初のElectronアプリが起動する。```# Clone the Quick Start repository$ git clone https://github.com/atom/electron-quick-start# Go into the repository$ cd electron-quick-start# Install the dependencies and run$ npm install &amp;&amp; npm start```ただ、ここからどうやっていじっていくか途方にくれた。そもそも、JavaScriptの書き方が分からない。基本的な文法は抑えているつもりだけど、実際にJavaScriptで何か作り上げた経験がないので、でも、どうせなら最新のJavaScriptの流れにも追いついておきたい。最新ホットな話題といえば、React.jsかなと安易に考え、とりあえず、React.jsのチュートリアルをやってみた。[チュートリアル | React](https://facebook.github.io/react/docs/tutorial-ja-JP.html)## React.jsを利用したQiitaの記事一覧を取得して表示するElectronアプリまず参考にしたのが、以下のQiitaのコード。[JavaScript - RailsエンジニアがElectronを触ってみた - Qiita](http://qiita.com/ysk_1031/items/9b9b0c485a8a68ee73a8)```          Electron Sample                                    Qiita Item Reader                            var QiitaBox = React.createClass({          getInitialState: function(){            return {data: []};          },          componentDidMount: function() {            $.ajax({              url: "http://qiita.com/api/v2/items",              dataType: 'json',              cache: false,              success: function(data) {                this.setState({data: data});              }.bind(this),              error: function(status, err) {                console.error(status, err.toString());              }.bind(this)            });          },          render: function() {            return (              &lt;div className="qiitaBox"&gt;                &lt;QiitaList data={this.state.data} /&gt;              &lt;/div&gt;            );          }        });        var QiitaList = React.createClass({          render: function() {            var itemNodes = this.props.data.map(function(item) {              return (                &lt;QiitaItem key={item.id}&gt;                  {item.title}                &lt;/QiitaItem&gt;              );            });            return (              &lt;div className="qiitaList"&gt;                {itemNodes}              &lt;/div&gt;            );          }        });        var QiitaItem = React.createClass({          render: function() {            return (              &lt;div className="qiitaItem"&gt;                {this.props.children}              &lt;/div&gt;            );          }        });        ReactDOM.render(          &lt;QiitaBox /&gt;,          document.getElementById('content')        );             ``````'use strict';const electron = require('electron');// Module to control application life.const app = electron.app;// Module to create native browser window.const BrowserWindow = electron.BrowserWindow;const ipcMain = electron.ipcMain;// Keep a global reference of the window object, if you don't, the window will// be closed automatically when the JavaScript object is garbage collected.let mainWindow;function createWindow () {  // Create the browser window.  // mainWindow = new BrowserWindow({width: 800, height: 600});  mainWindow = new BrowserWindow({width: 800, height: 600, 'node-integration': false});  // and load the index.html of the app.  mainWindow.loadURL('file://' + __dirname + '/index.html');  // Open the DevTools.  mainWindow.webContents.openDevTools();  // Emitted when the window is closed.  mainWindow.on('closed', function() {    // Dereference the window object, usually you would store windows    // in an array if your app supports multi windows, this is the time    // when you should delete the corresponding element.    mainWindow = null;  });}var onlineStatusWindow;app.on('ready', function() {  onlineStatusWindow = new BrowserWindow({ width: 0, height: 0, show: false });  onlineStatusWindow.loadURL('file://' + __dirname + '/online-status.html');});ipcMain.on('online-status-changed', function(event, status) {  console.log(status);});// This method will be called when Electron has finished// initialization and is ready to create browser windows.app.on('ready', createWindow);// Quit when all windows are closed.app.on('window-all-closed', function () {  // On OS X it is common for applications and their menu bar  // to stay active until the user quits explicitly with Cmd + Q  if (process.platform !== 'darwin') {    app.quit();  }});app.on('activate', function () {  // On OS X it's common to re-create a window in the app when the  // dock icon is clicked and there are no other windows open.  if (mainWindow === null) {    createWindow();  }});```## jQueryが読み込まれない件以下のエラーが出るのだが、jQeuryの読み込みに問題があるみたい。```Uncaught ReferenceError: $ is not defined```以下のように、node-integrationをfalseにすればエラーはなくなる。（その他のnode.jsのライブラリも読み込まれなくなる模様）```mainWindow = new BrowserWindow({width: 800, height: 600, 'node-integration': false});```[Electron で jQuery をスマートに読み込む方法 | phiary](http://phiary.me/electron-jquery-script-tag-load/)## Electronで作られたアプリケーションの一覧[sindresorhus/awesome-electron](https://github.com/sindresorhus/awesome-electron)
---title: "[Effective JavaScript]クロージャ"date: 2016-01-30T16:14:46+09:00comments: truecategory: ['Tech']tags: ['JavaScript', 'Effective Javascript']published: trueslug: effective-javascript-closureimg: "https://images-na.ssl-images-amazon.com/images/I/517tJs%2B%2B%2BnL._SL160_.jpg"---     Effective JavaScript　JavaScriptを使うときに知っておきたい68の冴えたやり方[Kindle版] posted with ヨメレバ   Devid Herman 翔泳社 2013-04-13       Kindle  Amazon[書籍版]                               	  	  	          いい加減、JavaScriptも使えるようになっておきたいので、お勉強。やっぱりよく分からないクロージャについて。{{% googleadsense %}}## 項目１１　クロージャと仲良くしよう### ポイント１ JavaScriptでは現在の関数の外側で定義された関数を参照できる内側の`make`関数は`magicIngredient`を参照しているが、これは外側の`makeSandwich`関数の中で定義されているもの。```function makeSandwich() {  var magicIngredient = "peanut butter";  function make(filling) {    return magicIngredient + " and " + filling;  }  return make("jelly");;}console.log(makeSandwich());console.log(makeSandwich());```これがクロージャーだーって言って身構えてパッと見るとよくわからないが、処理を追っていけば、## ポイント２　関数は、その外側の関数がリターンした後になっても、まだ外側の関数内で定義された変数を参照できる- 関数は、次のように、後で呼び出された時、内側の関数を返す形式で書くことができる```function sandwichMaker() {  var magicIngredient = "peanut butter";  function make(filling) {    return magicIngredient + " and " + filling;  }  return make;}var f = sandwichMaker();console.log(f("jelly"));```JavaScriptの関数値は、呼び出された時に必要となる情報を含む。その関数を囲むスコープの中で定義されている変数を参照する可能性があれば、それらの変数も内部的に保存する。このmake関数は、自分のコードでmagicIngredientとfillingという、２つの外側の変数を参照するクロージャーである。以下の関数式には名前がない（anonymous）。名前をつける必要がないのはこの関数を、新しい関数値を生成するために評価するためだけに使っており、直接呼び出すつもりがないためである。```function sandwichMake(magicIngredient) {  function make(filling) {    return magicIngredient + " and " + filling;  };  return make;}var hamAnd = sandwichMake("ham");console.log(hamAnd("cheese"));  //ham and cheeseconsole.log(hamAnd("mustard"));  //ham and cheesevar tukeyAnd = sandwichMake("turkey");console.log(tukeyAnd("Swiss"));   //turkey and Swissconsole.log(tukeyAnd("Provolone"));   //turkey and Provolone```## ポイント３　クロージャは外側の変数を更新できる- クロージャは、外側の変数へのリファレンスを保存するのであって、値をコピーするわけではない- したがって、変数の更新は、それをアクセスする、すべてのクロージャに反映される```function box() {  var val = undefined;  return {    set: function(newVal) { val = newVal; },    get: function() { return val; },    type: function() { return typeof val; }  };}var b = box();console.log(b.type());  // undefindedb.set(98.6);console.log(b.get());   // 98.6console.log(b.type());  // number```これも、そういうもんなんだと思えば、身構える必要もないのかと。実際の利用例をもっと見てみたい。## ポイント- 関数は、その外側のスコープで定義された変数を参照できる- クロージャは、自分を作成した関数よりも長生きすることができる- クロージャは内部で、外側の変数へのリファレンスを保存する。その変数は、読むことも更新することもできる     Effective JavaScript　JavaScriptを使うときに知っておきたい68の冴えたやり方[Kindle版] posted with ヨメレバ   Devid Herman 翔泳社 2013-04-13       Kindle  Amazon[書籍版]                               	  	  	          
---title: "Nightmare.jsでAmazonアフィリエイトのレポートを取得する"date: 2016-02-01T22:52:47+09:00comments: truecategory: ['Tech']tags: ['Nightmare','JavaScript']published: trueslug: how-to-get-amazon-affiliate-reports-with-nightmarejsimg: 'https://images-na.ssl-images-amazon.com/images/I/61DHJGf1uSL._SL160_.jpg'---この本を読んで、Ruby, Capybaraから取得することはできていたが、そもそもCapybaraは、PhantomJS/PoltergeistというJavaScriptライブラリのラッパーであり、JavaScriptから直接操作するにはどんな方法があり、どんな書き方になるのかを知りたかったので、調べてみました。これを機会に、JavaScriptを書けるようになりたいとも願いつつ。。。     Rubyによるクローラー開発技法　巡回・解析機能の実装と21の運用例[Kindle版] posted with ヨメレバ   るびきち SBクリエイティブ 2015-03-02       Kindle  Amazon[書籍版]                               	  	  	          {{% googleadsense %}}## Nightmareとは？Nightmare.jsは、ブラウザの挙動を自動化できるJavaScriptライブラリです。以前は、PhantomJSのラッパーだったみたいだが、現在は内部的にElectronを利用するようになった。[segmentio/nightmare: A high-level browser automation library.](https://github.com/segmentio/nightmare)```npm install nightmare```## Amazon アフィリエイトの前日のレポートを取得するまずは、完成品をどうぞ。```var Nightmare = require('nightmare');var vo = require('vo');vo(function* () {  var nightmare = Nightmare({ show: false });  var link = yield nightmare	  .goto('https://affiliate.amazon.co.jp/')		.type('input#username', 'USERID')		.type('input#password', 'PASSWORD')		.click('#signin &gt; input[type="image"]')		.wait('#mini-report')		.evaluate(function () {			return document.querySelector('#mini-report &gt; div.line-item-total &gt; div.data').textContent;		});	yield nightmare.end();  return link;})(function (err, result) {  if (err) return console.log(err);  console.log(result);});```## サンプルコードを動かす```npm install nightmare vonode --harmony yahoo.js```JavaScript初心者な自分にとっては、まず下記のサンプルコードが動かせなかったし、何が原因かわからなかった。よくよくJavaScriptの背景と現状を追ってみると、'function* ', 'yield'などのコードを含むのは、ES2015(ES6)のバージョンの書き方であり、Node.jsのバージョンが古いと動かせないことがわかった。Node.jsのバージョンをv5.5.0に上げて、再実行したところ、Electronが立ち上がり、yahoo.comに検索しに行くのを確認できる。```var Nightmare = require('nightmare');var vo = require('vo');vo(function* () {  var nightmare = Nightmare({ show: true });  var link = yield nightmare    .goto('http://yahoo.com')    .type('input[title="Search"]', 'github nightmare')    .click('.searchsubmit')    .wait('.ac-21th')    .evaluate(function () {      return document.getElementsByClassName('ac-21th')[0].href;    });  yield nightmare.end();  return link;})(function (err, result) {  if (err) return console.log(err);  console.log(result);});```### Genaratar function* って？ここ数日の自分の理解だと、「非同期処理を同期的に記述する」ための記述方法であるという理解。`yield`によって処理を途中で止めることができる。(もう少し理解がまとまったら、追記したい)## 参考- [Nightmareがv2(Electronベース)になり、使いやすく感動したのでLIGブログのPV/UUデータ取得を自動化してみた。 - Qiita](http://qiita.com/n0bisuke/items/8a7a52321380e5cf0379)- [ChatOps + NightmareでメトリクスグラフとBIレポートをSlackに投げるようにした - Glide Note - グライドノート](http://blog.glidenote.com/blog/2015/10/01/nightmare-screenshots/)- [Nightmare.jsでQiitaのコントリビューション数をスクレイピング - Qiita](http://qiita.com/n0bisuke/items/75b238ec88c96aa0dee8)- [Web scraping with Nightmare.js | azurelogic.com](https://azurelogic.com/posts/web-scraping-with-nightmare-js/) (PhantomJSの時の例)## 参考図書     JS+Node.jsによるWebクローラー/ネットエージェント開発テクニック posted with ヨメレバ   クジラ飛行机 ソシム 2015-08-31       Amazon  Kindle  楽天ブックス                   	  	  	               Rubyによるクローラー開発技法　巡回・解析機能の実装と21の運用例[Kindle版] posted with ヨメレバ   るびきち SBクリエイティブ 2015-03-02       Kindle  Amazon[書籍版]                               	  	  	               Effective JavaScript posted with ヨメレバ   David Herman 翔泳社 2013-02-19       Amazon  Kindle  楽天ブックス                   	  	  	          
---title: "D3.jsチュートリアル"date: 2016-02-06T12:46:18+09:00comments: truecategory: ['Tech']tags: ['JavaScript','d3js']published: trueslug: d3js-tutorial---以前から着手してみたかったd3.jsによる可視化の方法を学ぶために、ドットインストールにちょうど良い教材があったためそれを見ながら、確認していく。[D3.js入門 (全17回) - プログラミングならドットインストール](http://dotinstall.com/lessons/basic_d3js){{% googleadsense %}}## D3.jsとは？データ・ドリブン・ドキュメント(Data Driven Documents)の頭文字で、D3.js。&gt; 「データに基づいてドキュメントを操作するための JavaScript ライブラリである。データを描画する場合は、存在するデータごとに、「どこに」「どうやって」描画するかを１つ１つのデータに対して指定しなければならない。例えば、for loopで存在するデータ分だけ指定するなど。しかし、d3.jsは、Loopの記述をすることなく、データを描画することができる。それは、データ自身が、どこに描画されるかという情報を持っているからである。触ってみた感じだと、jQueryっぽくDOMを操作しながら、Dataを起点として可視化を行うことができる。データが追加、削除されたからといって、コードを修正するのではなく、再描画するだけ。## update, enter, exit関数とは？dataを使った瞬間に仮装領域が作られる。- update: 対応する要素がある場合 -&gt; text, style- enter : 対応する要素が足りない場合 -&gt; append- exit  : 対応する要素が余った場合　-&gt; removeたまにサンプルで、上記の関数(update, enter, exit)を利用しているコードがあったのだが、このレッスンを受けるまでは意味が分からなかった。しかし、このレッスンをデータセットと一致しない場合の処理を記述していただけであった。## d3.jsを利用して、どんなことがしたいのか？- GoogleMapsの地図上にデータをマッピングする- 売上データなどを可視化する## 参考- [D3.js入門 (全17回) - プログラミングならドットインストール](http://dotinstall.com/lessons/basic_d3js)- [D3.js入門 – 「データ・ドリブン」という特徴について ｜ Developers.IO](http://dev.classmethod.jp/ria/html5/d3-js_data_driven/)
---title: "D3.jsで東京の地価データを可視化する"date: 2016-02-07T19:42:50+09:00comments: truecategory: ['Tech']tags: ['D3.js', 'JavaScript']published: trueslug: d3js-tokyo-landprice-heatmapimg: "https://farm2.staticflickr.com/1680/24844125586_c74f952e38_s.jpg"---  {{% googleadsense %}}[d3js tutorial | じょーぶん部](https://meganii.com//blog/2016/02/06/d3js-tutorial/)で、一通りD3.jsのイメージを掴みつつ、次は、東京の地価データの可視化に挑戦する。方法については、下記のページを参考にした。[Ars longa, vita brevis: 東京の地価公示データを眺める](http://kshigeru.blogspot.jp/2013/07/tokyo-landprice.html)## 環境準備[D3.js と TopoJSON で地図を作る](http://ja.d3js.node.ws/blocks/mike/map/)を元に、環境を準備する。### Geospatial Data Abstraction Library （地理空間データ抽出ライブラリ）�のインストール```brew install gdal```## データを取得する地価公示データは、以下のページからダウンロードする。[国土数値情報　地価公示データの詳細](http://nlftp.mlit.go.jp/ksj/gml/datalist/KsjTmplt-L01-v2_3.html)今回は、`L01-15_13_GML.zip`をダウンロードし、解凍すると以下のファイル```KS-META-L01-15_13.xml  L01-15_13.dbf  L01-15_13.prj  L01-15_13.shp  L01-15_13.shx  L01-15_13.xml```## orginfoで中身を確認する```ogrinfo -al L01-15_13.shp | head -n 8INFO: Open of `L01-15_13.shp'      using driver `ESRI Shapefile' successful.Layer name: L01-15_13Geometry: PointFeature Count: 2162Extent: (139.136421, 27.094612) - (142.203304, 35.828359)Layer SRS WKT:``````ogrinfo -sql "SELECT L01_006, L01_019 FROM 'L01-15_13'" L01-15_13.shp```例えばこんな以下のような形で取得できる。```OGRFeature(L01-15_13):2122  L01_006 (String) = 273000  L01_019 (String) = 東京都　江戸川区西瑞江５丁目１４番４６  POINT (139.878173 35.67957)```  &gt; 次に、行政区域コード (L01_017) で制限をかけます。 東京都 (都道府県コードは13) の場合、 13101 から23区が始まり、13201 から市が始まり、13301 から村が始まります。 離島は 13320 より大きいものになります。 したがって、島嶼部を除くためには行政区域コードが 13320 より小さいものを指定します。 コード体系の詳細は Wikipedia の 全国地方公共団体コード を参照してください。whereで抽出しながら、GeoJSON形式に変換して、geojsonファイルに書き出す。```ogr2ogr -f GeoJSON -where "L01_017 &lt; '13320'" tokyo-landprice-2015.geojson L01-15_13.shp```## d3.jsで表示する  ```          Tokyoの地価                                   var width = 960,          height = 600;      var g = d3.select('#main').append('svg')                    .attr('width', width)                    .attr('height', height)                    .append('g');      d3.json("tokyo-landprice-2015.geojson", function(err, tokyo) {        if (err) {          console.log("file not found.");          return;        }        var projection = d3.geo.mercator()                                .scale(60000)                                .center(d3.geo.centroid(tokyo))                                .translate([width / 2, height /2]);        var path = d3.geo.path().projection(projection);        g.selectAll("path")            .data(tokyo.features)            .enter()            .append("path")            .attr("d", path)            .style("fill", function(tokyo) {              if (tokyo.properties.L01_006 &gt; 1000000) {                return "#ff0000";              } else if (tokyo.properties.L01_006 &lt;= 1000000 &amp;&amp; tokyo.properties.L01_006 &gt; 800000) {                return "#ff6600"              } else if (tokyo.properties.L01_006 &lt;= 800000 &amp;&amp; tokyo.properties.L01_006 &gt; 500000) {                return "#ff9900"              } else if (tokyo.properties.L01_006 &lt;= 500000 &amp;&amp; tokyo.properties.L01_006 &gt; 200000) {                return "#ffcc00"              } else if (tokyo.properties.L01_006 &lt;= 200000 &amp;&amp; tokyo.properties.L01_006 &gt; 100000) {                return "green"              } else {                return "blue";              }            });      });      ```## 次にやりたいこと- 数十年分のデータを次々に描画して移り変わりを確認する- 地図上にマッピングする## 参考- [D3.js - Data-Driven Documents](https://d3js.org/)- [国土数値情報　地価公示データの詳細](http://nlftp.mlit.go.jp/ksj/gml/datalist/KsjTmplt-L01-v2_3.html)- [Ars longa, vita brevis: D3.js と GeoJSON でポリゴンを描く](http://kshigeru.blogspot.jp/2013/03/d3-geojson-polygon.html)- [Ars longa, vita brevis: 東京の地価公示データを眺める](http://kshigeru.blogspot.jp/2013/07/tokyo-landprice.html)
---title: "JavaScript Ninjaの極意 「関数の呼び出し」"date: 2016-02-07T12:42:51+09:00comments: truecategory: ['Tech']tags: ['JavaScript']published: trueslug: javascript-ninjaimg: "https://images-na.ssl-images-amazon.com/images/I/51hWBKh7tdL._SL160_.jpg"---## 関数の呼び出し- 関数として呼び出す- メソッドとして呼び出す- コンストラクタとして呼び出す- 関数のapplay()またはcall()メソッドを介して呼び出す{{% googleadsense %}}this　-&gt; 呼び出しコンテキスト## 参考- JavaScript Ninjaの極意- Effective JavaScript     JavaScript Ninjaの極意 ライブラリ開発のための知識とコーディング (Programmer's SELECTION)  楽天で買う   
---title: "slack-apiを利用してRubyからSlackへメッセージとファイルをポストする方法"date: 2016-02-10T07:17:11+09:00comments: truecategory: ['Tech']tags: ['Slack']published: trueslug: post-to-slack---Slackで、Rubyからメッセージとファイルをポストする方法についてのメモ。以下の`slack-api`を利用する。[aki017/slack-ruby-gem: A Ruby wrapper for the Slack API](https://github.com/aki017/slack-ruby-gem){{% googleadsense %}}ファイルの組み立て方(?)が分からなかったのでFaradayにお任せした。```require 'slack'require 'faraday'Slack.configure do |config|  config.token = "USER SLACK TOKEN"end## channelにメッセージをPostするSlack.chat_postMessage(  channel: '#general',  username: 'kenchan',  text: 'point')## channelにファイルをアップロードするSlack.files_upload(  file: Faraday::UploadIO.new('stamp.png', 'image/png'),  channels: '#general',  initial_comment: 'file upload')```
---title: "a random walk down wall street"date: 2016-02-11T22:08:28+09:00comments: truecategory: ['Book']tags: ['Money','株式']published: trueslug: a-random-walk-down-wall-streetimg: "https://images-na.ssl-images-amazon.com/images/I/51UMwuX4tjL._SL160_.jpg"---結構分厚い本なので、つまみ食い的に読んだ際のメモ。理解していない部分も多いため、随時更新していくつもり。本書の前半戦は、株式の歴史を説明しているので流し読みした。{{% googleadsense %}}## 「投資」と「投機」投資とは、- 配当や金利、賃貸料などかなり確実性の高い収入で利益を上げること- 長期間保有して値上がり益を得ることを目的とした金融資産の購入どのような期間で投資リターンを考えるか、リターンが合理的に予測できるかという点で、投機とは異なる。## テクニカル分析とファンダメンタル分析### テクニカル分析- チャートを読む(すなわち、他のプレーヤーの心理を読む)- 90%が心理的で10%が合理的な判断で株価は動くと信じている砂上の楼閣(さじょうのろうかく)理論に基づいて的確な売り買いのタイミングを予測する。&gt; 見かけはりっぱであるが、基礎がしっかりしていないために長く維持できない物事のたとえ。また、実現不可能なことのたとえ。### ファンダメンタル分析- ファンダメンタル価値理論を銘柄選択に生かす- 90%合理的で、10%心理的企業の成長率や他の様々な要素を予測し、それらに基づいて株式の本質価値を判断する。## 前半戦で度々出てきた投機ブームから身を守るためには？1. 期待成長率2. 支払配当額3. リスクの度合い4. 金利水準ただし、数学的に正しくても、その理論の元になるファンダメンタル値が実は曖昧なため将来を予測することは難しい。本当に儲かるのなら人に教えないで自分たちだけでやれば良いのに、やらないのはそういうこと。## 成功するためのルール1. 今後５年以上の利益成長率が市場平均以上の銘柄を買うこと要は、「成長株」を見つけること。2. 株価がファンダメンタル価値以上になっている銘柄には手を出さない株式の本質価値を正確に知ることは不可能だが、おおよそ妥当かどうかは判断できる。3. 投資家が「砂上の楼閣」を作れるようなストーリーが描ける銘柄かまとめると、成長が期待でき、かつ低PERの銘柄を探そう。もしも成長が実現したら、利益成長と株価収益率の上昇による２重のボーナスが得られる。逆に、将来の成長がすでに織り込み済みの高PERの銘柄には注意。利益減少と株価収益率の低下による２重の損失になる。最後の３点目は、必ずしも周りが合理的な判断で投資を行っているわけではないため、信用するだけのストーリーを持っているかどうかを判断する。## ランダム・ウォーク**株価のチャートが次にどう動くかは、過去の動きに基づく限り全く予想不可能である。**ただ１つの例外は、利益や配当の成長に沿って長期的には上昇トレンドを描くことである。これにより、テクニカル戦略よりも、バイ・アンド・ホールド戦略の方が高いパフォーマンスが得られる。結局のところ、株式においても銀の弾丸は存在しない。もしも必ず儲かる方法があるのであれば、人に教えたりせずに、自分で実施しているのだから。でも、それでも誰かが株を買ったり売ったりすることで儲かる人がいる。証券会社だけでなく、転職業界だって、誰かが転職することで儲かる人がいるし、アフィリエイト界隈だって、誰かありがたがってアフィリエイトで儲かるノウハウを欲する人がいる限り、儲かる仕組みなんだろうな。                                   ウォール街のランダム・ウォーカー　&lt;原著第10版&gt;―株式投資の不滅の真理       posted with ヨメレバ           バートン・マルキール 日本経済新聞出版社 2011-06-18                     Amazon                      Kindle                      楽天ブックス                   
---title: "ElectronでAmazonアフィリエイトリンクビルダーを作った"date: 2016-02-20T17:51:18+09:00comments: truecategory: ['Tech']tags: ['Electron', 'JavaScript']published: trueslug: electron-amazon-link-builderimg: 'https://farm2.staticflickr.com/1467/25143519475_14929051ec_z.jpg'---[Electronでデスクトップアプリ作成 | じょーぶん部](https://meganii.com//blog/2016/01/25/electron-tutorial/)に引き続き、Amazonアフィリエイトリンクビルダーのデスクトップアプリを作った。{{% googleadsense %}}## 動機Amazonのアフィリエイトリンクビルダーには、ヨメレバ、カエレバのようなブックマークレットもあるが、現時点でAmazonのリンクがhttpsに対応していないため、せっかくhttps化をしてもchromeのURLバーが緑色にならない。[Lets's Encryptでブログの常時SSL化にチャレンジ | じょーぶん部](https://meganii.com/blog/2016/01/17/lets-encrypt-always-on-ssl/)これは困るということで、せっかくなのでElectronでデスクトップアプリを作ってみた。React.jsとか使ってオシャレに作りたかったのだけど、JavaScript初心者にはまずそもそも素のJavaScriptが何をしているのかがわかってなかったので、一度愚直に作った。## 外観    ## コード正直、JavaScriptの書き方がまだよくわかってない。コールバックの書き方や、関数定義が正しいか怪しいが、ひとまず動くところまではできた。メインプロセス(main.js)とレンダラープロセス(index.htmlのscript)を意識して書く。レンダラープロセスは、画面の描画に関する記述、メインプロセスは、ファイル処理や主な処理に関する記述と役割が分かれている。Amazon Product Advertising APIは、`node-apac`というライブラリを利用した。[dmcquay/node-apac: node-apac - Node.js client for the Amazon Product Advertising API, including support of Request Signatures](https://github.com/dmcquay/node-apac)少しハマった点は、Endpointの修正と、AWS IDとAWS Secretの取得の部分である。```var opHelper = new OperationHelper({  endPoint:   'webservices.amazon.co.jp',  awsId:      'YOUR AWS ID',  awsSecret:  'YOUR AWS SERCET',  assocId:    'YOUR Amazon ASSOCIATE ID',});```Endpointは、デフォルトだとUSのAmazonを指しているため、`webservices.amazon.co.jp`を指定する。### IAMユーザを作成してProduct Advertising APIを利用する方法AWS IDと、AWS Secretを取得するためにはまず、[Product Advertising API](https://affiliate-program.amazon.com/gp/advertising/api/detail/main.html)でDeveloper登録をする必要がある。    登録完了後は、AWS Security Credentials Consoleから、Access Key ID と Secret Keyを取得する。ここでハマったのは、現在推奨されるのはIAMで特定のユーザを作成して、権限を適切に与えた状態にすることを求められる。    そうか、では、Product Advertising API用にユーザを作って、ユーザを作成してProduct Advertisingのポリシーをアタッチすればよいのだなと思い、やってみたのだが、Product Adverting APIなんて存在しない。。。  AWS Developer Forums: Support for IAM Users in Product ...のフォーラムを読むと、`AdministratorAccess`のポリシーを設定してあげれば良いとのこと。(Admin権限を与えるんじゃ意味ないのではと思ったが)�よって、IAMを利用する場合は、`AdministratorAccess`のポリシーをアタッチして、keyを取得すれば良い。### index.html```          LinkBuilder                                     Amazon Link Builder                                                Link Builder                                                               検索条件                                                   検索する                                                                                                    const ipcRenderer = require('electron').ipcRenderer;      // send message to main process      var sendQuery = function() {        var filelds = document.getElementById('search-word').value;        ipcRenderer.send('asynchronous-message-amazon', filelds);      }      // from main process      ipcRenderer.on('asynchronous-reply-amazon', function(event, arg) {        for (var i = 0; i &lt; arg.length; i++) {          // create div          var div = createItemElement(arg[i]);          div.className = "col-sm-6 col-md-3"          document.getElementById('content').appendChild(div);        }      });      ipcRenderer.on('asynchronous-reply-createUrl', function(event, result) {          document.getElementById('linkbox').textContent = result;      });      // &lt;div class="item"&gt;      //  &lt;label&gt;&lt;input type='checkbox' onclick='handleClick(this);'&gt;Checkbox&lt;/label&gt;      //  &lt;a href="http://hoge"&gt;&lt;img src="hoge" /&gt;&lt;/a&gt;      // &lt;/div&gt;      var createItemElement = function(item) {        var createRakutenLink = function(item){          var isbn = item.ItemAttributes[0].ISBN;          if (isbn !== undefined) {            ipcRenderer.send('asynchronous-message-rakuten', isbn);          }        };        var handleClick = function() {          console.log('handleClick');          // send message          // on message          // contentは、main process側で作成する          ipcRenderer.send('asynchronous-message-createUrl', item);        };        var div = document.createElement('div');        div.className = "thumbnail";        div.textContent = item.ASIN;        // create image        var a = document.createElement('a');        a.href = item.DetailPageURL;        var img = document.createElement('img');        // http://ecx.images-amazon.com/images/I/51XdQhacD-L._SL75_.jpg        // https://images-na.ssl-images-amazon.com/images/I/51UMwuX4tjL._SL160_.jpg        var url = "";        url += item.MediumImage[0].URL;        img.src = url.replace(/http:\/\/ecx\.images-amazon\.com\/images\//, 'https://images-na.ssl-images-amazon.com/images/');        a.appendChild(img);        // create label        var checkbox = document.createElement('input');        checkbox.type = 'checkbox';        checkbox.onclick = handleClick;        div.appendChild(checkbox);        div.appendChild(a);        return div;      };                  ```### main.js```'use strict';const electron = require('electron');// Module to control application life.const app = electron.app;// Module to create native browser window.const BrowserWindow = electron.BrowserWindow;const ipcMain = electron.ipcMain;const util = require('util');const OperationHelper = require('apac').OperationHelper;const XMLHttpRequest = require("xmlhttprequest").XMLHttpRequest;// Keep a global reference of the window object, if you don't, the window will// be closed automatically when the JavaScript object is garbage collected.let mainWindow;function createWindow () {  // Create the browser window.  mainWindow = new BrowserWindow({    width: 1200,    height: 800,    'min-width': 500,    'min-height': 200,    'accept-first-mouse': true,    'title-bar-style': 'hidden'  });  // and load the index.html of the app.  mainWindow.loadURL('file://' + __dirname + '/index.html');  // Open the DevTools.  // mainWindow.webContents.openDevTools();  // Emitted when the window is closed.  mainWindow.on('closed', function() {    // Dereference the window object, usually you would store windows    // in an array if your app supports multi windows, this is the time    // when you should delete the corresponding element.    mainWindow = null;  });}// This method will be called when Electron has finished// initialization and is ready to create browser windows.app.on('ready', createWindow);// Quit when all windows are closed.app.on('window-all-closed', function () {  // On OS X it is common for applications and their menu bar  // to stay active until the user quits explicitly with Cmd + Q  if (process.platform !== 'darwin') {    app.quit();  }});app.on('activate', function () {  // On OS X it's common to re-create a window in the app when the  // dock icon is clicked and there are no other windows open.  if (mainWindow === null) {    createWindow();  }});// ---my code----------ipcMain.on('asynchronous-message-amazon', function(event, arg) {  var opHelper = new OperationHelper({    endPoint:   'webservices.amazon.co.jp',    awsId:      'YOUR AWS ID',    awsSecret:  'YOUR AWS SERCET',    assocId:    'YOUR Amazon ASSOCIATE ID',  });  opHelper.execute('ItemSearch', {    'SearchIndex': 'Books',    'Keywords': arg,    'ResponseGroup': 'Images,ItemAttributes,Offers'  }, function(err, results) {      var items = results.ItemSearchResponse.Items[0].Item;      event.sender.send('asynchronous-reply-amazon', items);  });});// create rakuten affiliateUrlipcMain.on('asynchronous-message-rakuten', function(event, arg) {  console.log('start');  var url = 'https://app.rakuten.co.jp/services/api/BooksBook/Search/20130522?format=json&amp;affiliateId={YOUR_AFF_ID}&amp;applicationId={APP_ID}&amp;isbn=' + arg;  getRequsest(url, function(result){    console.log(result.Items[0].Item.affiliateUrl);    event.sender.send('asynchronous-reply-rakuten', result);  });});ipcMain.on('asynchronous-message-createUrl', function(event, arg) {  console.log('start asynchronous-message-createUrl');  var item = arg;  console.log(item.ItemAttributes[0].ISBN);  // rakuten  var url = 'https://app.rakuten.co.jp/services/api/BooksBook/Search/20130522?format=json&amp;affiliateId={YOUR_AFF_ID}}&amp;applicationId={YOUR_APP_ID}&amp;isbn=' + item.ItemAttributes[0].ISBN;  getRequsest(url, function(result){    var url = "";    url += item.MediumImage[0].URL;    var src = url.replace(/http:\/\/ecx\.images-amazon\.com\/images\//, 'https://images-na.ssl-images-amazon.com/images/');    console.log(result.Items[0].Item.affiliateUrl);    var content =   ' '                  +   ' '                  +     ''                  +     ''                  +   ' '                  +   ' '                  +     ' '                  +       ''                  +         item.ItemAttributes[0].Title                  +       ''                  +     ' '                  +     ' '                  +       '楽天で買う'                  +     ' '                  +   ' '                  + ' ';      event.sender.send('asynchronous-reply-createUrl', content);  });});// to get requestvar getRequsest = function(url, callback) {  if (!url) { return; }  var xhr = new XMLHttpRequest();  xhr.open('GET', url, true);  xhr.timeout = 30000;  xhr.ontimeout = function() {    console.log('time out');  };  xhr.onerror = function() {    console.log('error');  };  xhr.onreadystatechange = function() {    if (this.readyState !== 4) { return; }    if (this.status === 200) {      if (typeof callback === 'function') {        try {          var result = JSON.parse(this.responseText);          callback(result);        } catch (e){          console.log(e);        }        return;      }    }  };  xhr.send();};```## 参考     Effective JavaScript  楽天で買う    
---title: "「プログラマになりたいあなたへの手紙」を読んだ過去の自分から今の自分へ。"date: 2016-02-22T21:45:54+09:00comments: truecategory: ['Tech']tags: ['life','プログラミング']published: trueslug: become-a-programmerimg: "https://farm5.staticflickr.com/4015/4639772572_c536c5b1dc_o.jpg"---「プログラマになりたいあなたへの手紙」という記事に対して感想を書いていたことをふと思い出し、読み返した。[プログラマになりたいあなたへ - ギークを夢見るじょーぶん男子](http://d.hatena.ne.jp/meganii/20090401/1238552061)  2009年は、ちょうど就活をしていた時期。そこから考えると、今年2016年は、ずいぶん遠いところまで来た気がする。時は過ぎたが、自分の中身は変わったのだろうか。{{% googleadsense %}}## あなたの不安こそ、最強の武器結城さんが書いた[プログラマになりたいあなたへの手紙 - あなたの不安こそ、最強の武器：ITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20090324/327117/?ST=develop&amp;rt=nocnt)。この「あなたの不安こそ、最強の武器」がやはり今でも印象的だった。[ギークを夢見るじょーぶん男子](http://d.hatena.ne.jp/meganii/)に書きなぐっていたことも、今考えると、自分の中の不安、考えを吐き出せていたのかもしれない。記事の中で、結城さんは次のように言っている。&gt;45歳になっても不安はなくなりません。新しい不安がやってきます。でも，大丈夫。私は知っているからです。　この不安が，最強の武器になることを。7年前も不安だったかもしれない。でも、自分自身、今も何を目指すべきか、どこへ進むべきか、今も不安だらけ。&gt;そこで大事なのは，自分自身が本当に理解しているかどうかをチェックして進むことです。ほかの人が言ったから，ではなく，自分で学んで，考えて，やってみて，こう理解したからという姿勢になることです。いざ不安なことを書き残そうとすると、なんとなく気恥ずかしい気持ちになって、書くのを諦めてしまう。箇条書きしかできずに、少しまとまった文章を書こうとすると途端に手が止まってしまう。でも、その時その時の、不安に思っていたことをもうちょっと文字に起こしていきたい。きっとまた読み返すときに振り返ることができるから。他の人が言ったからそうではなくて、自分でやってみて、まだまだ学んでいきたい。## �世の中、すごいプログラマだけではない。もっと平均的でいいんだ！読み返して、次に連想したのは、Rebuild.fmのエモい回での「世の中、すごいプログラマだけではない。もっと平均的でいいんだ！」という言葉だ。[Rebuild: Aftershow 91: With PHP, Everything Is Acceptable (Naoya Ito)](http://rebuild.fm/91a/)もともとは、PyConの基調講演が元ネタだそうだ。一部のスーパープログラマーと、全然プログラムが書けない人の両極端ではなく、プログラマの能力も自然界の法則通りに正規分布する。新しいフレームワークを作ったり、ライブラリを作る人ようなスゴイプログラマーだけじゃなくて、もっと普通な人が多くいる。自分もその中の一人だという。**だから、もっと平均的でいいんだよ!**前に出て発表する人も実はそこまでスゴイわけではない。ただ話すのが少し得意だったり、話すのが好きなだけだったりする。また、Rebuildの話の中で出てきた「作りたいものを作って、使ってくれる人に価値を届けるという一番シンプルな動機」は、大事にしたい。今の自分でも、今の場所、Web上でも何かしら役に立つことがある。一つ一つの目の前の課題を解決していきたい。- [rebuild.fm 91のafter showのエモい話を聞いて | Code And Passion Take Me Anywhere](http://blog.imaizu.me/2015/05/rebuildfm-91after-show.html)- [ぐだぐだ言ってないでコードを書けよ、自分！ - 「Webサービスのつくり方」 | じょーぶん部](https://meganii.com/blog/2014/09/04/create-web-service/)## こんなことやっていきたい- 過去の自分が読みたくなる記事を書くこと- 自分が手の届く範囲に、価値を届ける- 「不安を武器」に、もう一度書きなぐってみよう情熱プログラマー、プログラマが知るべき９７のことを読み直してみようかな。     プログラマが知るべき97のこと  楽天で買う        情熱プログラマー ソフトウェア開発者の幸せな生き方  楽天で買う   
---title: "Electron + Mithril.jsでFlickrアプリを作成する"date: 2016-02-28T22:13:24+09:00comments: truecategory: ['Tech']tags: ['electron','Mithril.js']published: trueslug: electron-mithriljs-flickr-appimg: "http://www.oreilly.co.jp/books/images/picture978-4-87311-744-7.gif"---{{% googleadsense %}}  以前、Angular.jsで作成したFlickrアプリを、Electron + Mithril.jsで焼き直した。Angular.jsは重厚長大な感があり、個人で使う分にはちょっと過剰すぎる気がする。どうせなら、VirtualDOMの概念も合わせて学びたかったので、まずReact.jsのチュートリアルをしたのだが、JavaScript初心者が使う分には、ES6, Babel, JSXなどなど、新しく学ぶ概念が多すぎる気がして挫折した。他に何かシンプルなフレームワークはないか、探していたところ、ElectronとMithril.jsの組み合わせの記事をQiitaで見かけたので試してみた。- [Electron と Mithril でソースリーディングを助けるアプリをつくってみた - Qiita](http://qiita.com/hakomo/items/d472605578e0a3f602b4)- [Electron + Mithrilで、ふつうのデスクトップアプリを作る - Qiita](http://qiita.com/shibukawa/items/e1836a8c98413448f746)結論から言うと、自分にとってはこのぐらいがまずちょうどいいので使ってみようと思った。Railsを覚えるのは辛いけど、まずはSinatraを使うぐらいのノリ。それでいて、素のJavaScirpt操作や、jQueryを使ってのDOM操作をしなくても良いのは気持ちが良い。## Mithril.js[Mithril　http://mithril-ja.js.org/ ](http://mithril-ja.js.org/)- シンプルなAPI- 軽い- VirtualDOM- コンポーネント指向## コード index.html```          Electron Flickr                    Flickr        �        �                    const API_KEY = "YOUR_FLICKR_KEY";      const USER_ID = "YOUR_USER_ID";      var photos = m.prop([]); //default value      var textContext = m.prop();      var linkComponent = {        controller: function() {          textContext("");        },        view: function(ctrl) {          return m("textarea", {name: "linktextarea", class: "form-control", rows: 5}, textContext());        }      }      var resultComponent = {        controller: function() {          this.createLink = function(index) {            var item = photos().photos.photo[index];            var link = '&lt;p&gt;&lt;a href="https://www.flickr.com/photos/' + item.owner + '/' + item.id + '" title="' + item.title + 'by meganii, on Flickr"&gt;&lt;img class="img-responsive" src="https://farm' + item.farm + '.staticflickr.com/' + item.server +'/' + item.id + '_' + item.secret + '_z.jpg" alt="' + item.title + '"&gt;&lt;/a&gt;&lt;/p&gt;\n';            textContext(textContext() + link);          };          m.request({            dataType: "jsonp",            callbackKey: "jsoncallback",            url: "https://api.flickr.com/services/rest/?method=flickr.photos.search&amp;api_key=" + API_KEY + "&amp;user_id=" + USER_ID+ "&amp;sort=date-posted-desc&amp;format=json"          }).then(photos);        },        view: function(ctrl) {          return m("ul",[              photos().photos.photo.map(function(item, index) {                 return m("li", [                   m("input[type=checkbox]", {onclick: m.withAttr("value", ctrl.createLink), value: index } ),                   m("img", {src: "https://farm" + item.farm + ".staticflickr.com/" + item.server + "/" + item.id + "_" + item.secret + "_z.jpg"})                 ])              })          ])        }      }      m.mount(result, resultComponent);      m.mount(link, linkComponent);      ```## Flickr APIFlickrへリクエストを投げる時に少し躓いたのでメモ。Flickrは、jsonp形式のため、単純に、以下のようにリクエストを送るのでは上手くいかない。```m.request({method: "GET", url: "/path/to/resource"})```以下のように、`dataType: "jsonp"`, 'callbackKey'を指定する。```m.request({    dataType: "jsonp",    callbackKey: "jsoncallback",    url: "http://api.flickr.com/services/feeds/photos_public.gne?tags=monkey&amp;tagmode=any&amp;format=json"});```ようやく、よく分からないAngular.jsから、比較的見通しが立ってきたElectron + Mithril.jsに切り替えることができた。## 目標「自分専用Markdownエディターを作る」最終的には、自分専用Markdownデスクトップアプリを、Electronで作成することが目標だ。Kobitoは便利で使ってるのだけど、そのままEvernoteに連携して欲しかったり、リンク作成の機能がまとまってると嬉しい。実装したい機能は、こんな感じ。Kobitoをベースに自分専用の機能を盛り込みたい。- Markdownエディター(オートプレビュー)- Flickr連携(アップロード、リンク作成)- Evernote連携(自動保存)- Amazonリンク作成- ASP一括検索- git push     Effective JavaScript  楽天で買う   
---title: "Adsense広告をレスポンシブデザインでPCビュー2つ横並び、モバイル1つにする方法"date: 2016-04-11T23:28:02+09:00comments: truecategory: ['Tech']tags: ['Adsense','Web Design']published: trueslug: display-none-google-adsenseimg: "https://images-na.ssl-images-amazon.com/images/I/41AmQGGOU-L._SL160_.jpg"---Adsenseのレスポンシブ広告は、レスポンシブデザインの時に便利で使っているが、レクタングル広告を横に２つ並べた場合、モバイルで問題になることが多い。どういうことかというと、PCで横に２つ並べた時、そのままのデザインでモバイルビューにすると縦に２つレクタングル広告が並ぶことにある。そうすると、画面全体が広告が広告で埋まってしまうことになり、Google Adsenseのポリシー違反になる。では、どうすればいいか？{{% googleadsense %}}結論から言うと、**「Adsenseのレスポンシブ広告を選択し、メディアクエリでモバイルの場合は、`display: none`で表示にする」** ことで対応できる可能性が高い。気になる点は、以下のようにGoogleのポリシー違反にあたらないか、`display: none`で隠した広告は、１つの広告としてカウントされるのかといったところであろう。## 気になる点・疑問点1. `display: none`で広告コードを改変するのは、Google Adsenseのポリシー違反に当たらないか？2. `display: none`でコンテンツを隠すのはGoogleのペナルティを受けないか？3. Google Adsenseは１ページ当たり３つまでしか広告を表示できないが、`display: none`で非表示にした広告は１つとしてカウントされるのか？１つ目のGoogle Adsenseのポリシー違反に当たらないか？という疑問に対しては、Google Adsenseのガイドラインを見ることで安心できる。[レスポンシブ広告コードを修正する方法 - AdSense ヘルプ](https://support.google.com/adsense/answer/6307124#hide)&gt; 現在のレスポンシブ広告コードではご希望どおりの広告ユニットを作成できていない場合は、レスポンシブ サイトの要件を満たすように広告コードを修正してください。次の例に従うと、広告コードを正しく修正することができます。  &gt; 重要:&gt; - CSS メディアクエリのご使用や広告コードの変更の経験が初めての場合は、画面の幅ごとに正確な広告ユニットサイズを指定する場合の例を使って修正してください。&gt; - CSS メディアクエリのご使用や広告コードの変更に精通されている場合は、レスポンシブ広告コードの高度な機能の例を使って修正してください。基本的に広告コードを変更することはNGだけど、レスポンシブ広告コードについては上記ページの指示に従う限り問題ないとの認識。２つ目のGoogleのペナルティを受けないか？という疑問に対しては、まずGoogle公式のページに「隠しテキストと隠しリンク」について言及している箇所があるため、見てみる。[隠しテキストと隠しリンク - Search Console ヘルプ](https://support.google.com/webmasters/answer/66353)&gt;Google の検索結果でのランキングを操作するためにコンテンツに隠しテキストや隠しリンクを含めることは、偽装行為と見なされることがあり、Google のウェブマスター向けガイドライン（品質に関するガイドライン）への違反にあたります。&gt; ただし、隠しテキストがすべて偽装行為と見なされるわけではありません。たとえば、サイトで JavaScript、画像、Flash ファイルといった検索エンジンにとってアクセスしにくい技術が使用されている場合、そのようなアイテムについて説明テキストを使用するとサイトのアクセシビリティが向上することがあります。また、スクリーン リーダー、モバイル ブラウザ、プラグインなしのブラウザ、低速接続環境でアクセスする多くの人間のユーザーもそのようなコンテンツを表示できないため、その場合も説明テキストがあれば役立ちます。サイトのアクセシビリティは、ブラウザで JavaScript、Flash、画像をオフにしたり、Lynx（リンク先は英語）などのテキスト ブラウザを使用したりすることで確認できます。確かに、意図的にランキングを操作するために、隠しテキストとして大量のキーワードを埋め込んだりすることは違反になるが、PCとモバイルでデザインを変えることは問題ないと受け取ってもよいと(個人的には)読み取れる。そのあたり、問題あるかないかについては、以下のページでも言及されているので目を通してみるとよい。- [[SEO] レスポンシブWebデザインで display:none の利用はGoogleペナルティになりますか？ ::SEM R (#SEMR)](http://www.sem-r.com/seo/20121127114806.html)- [display:noneを利用してテキストを非表示にするのはスパム？ | 正しいSEO相談室 | Web担当者Forum](http://web-tan.forum.impressrd.jp/e/2007/01/23/560)- [『display:noneの利用 = 検索エンジンスパム』 ではない- Google Wysz ::SEM R (#SEMR)](http://www.sem-r.com/0702/20071012073357.html)３つ目の`display: none`で非表示にした広告は１つとしてカウントされるのかという疑問に対しては、残念ながら、１つとしてカウントされてしまう。PCでも、モバイルでもAdsenseの広告枠３つを必ず出したいのであれば、PCとモバイルでビューを分けないといけないが、レスポンシブデザインからすると、本末転倒になってしまう。ここは、割り切りが必要かと思う。## 参考[【css】スマホ構築にも便利！displayの値オススメ5つ | Webマーケティング ブログ｜アドブログ](http://adgocoo.com/blog/smartphone/20150529-handy-css-display-kwus/)     Google AdSense 成功の法則 57  楽天で買う        ブログ飯 個性を収入に変える生き方  楽天で買う   
---title: "Hugo-ZenをベースにHugoのデザインを変えてみた"date: 2016-04-17T19:57:49+09:00comments: truecategory: ['Tech']tags: ['hugo','design']published: trueslug: hugo-zen---春になったので、BlogのデザインをHugoをベースに変えてみました。前々から、自分で構造を把握したい、jQueryに依存するBootstrapをやめたいって思っていたので、Hugoの中でもミニマムなテーマであるHugo-Zenをベースに構築しました。{{% googleadsense %}}## hugo-zen[Hugo Zen: これから Hugo を始める人向けのミニマムなテーマを作りました - rakuishi.com](http://rakuishi.com/archives/hugo-zen/)[GitHub - rakuishi/hugo-zen: Hugo Zen is a minimal hugo theme.](https://github.com/rakuishi/hugo-zen)気に入ったポイントは、以下の点。- ごちゃごちゃしてなく、シンプル！- Skeletonという軽量のCSSフレームワークを利用 http://getskeleton.com/- jQuery不要一旦、シンプルに構築できたので、ここから気になるところをちょっとずつ変えていきます。## faviconの生成[様々なファビコンを一括生成。favicon generator](http://ao-system.net/favicongenerator/)上記のWebサービスを利用してファビコンを作成してみました。これだけ用意しないと対応できないなんて何か間違ってる気がしなくもないけど、おとなしく追加しました。[綺麗なfavicon（ファビコン）作成の基本的なコツ・アイデアまとめ | 株式会社LIG](http://liginc.co.jp/web/design/material/16853) によると、16px × 16px 、32px × 32px のふたつをマルチアイコンにすればO.K.という話もあったので、試してみたい。## 関連記事をどうするか問題Wordpressのような動的に記事を生成する機構に比べて、静的サイトは関連記事をどう表示するかが結構悩みどころだったりします。前のデザインだと、同じカテゴリの記事を表示するというシンプルな方法だったので、まずは同じように設置しました。理想は、機械的に記事同士の相関を判断して出力してほしいので、Hugo(Golang?)で実現するか、JavaScriptを書いてなんとか実現するかやってみたい。## 残りやりたいこと- 関連記事をうまいこと出す- サイドバーを充実させる- AMP対応- 常時SSL対応(img)- 静的ファイルの最適化
---title: "サグラダ・ファミリア建設とシステム開発"date: 2016-04-21T23:03:37+09:00comments: truecategory: ['Tech']tags: ['book']published: trueslug: antoni-gaudiimg: "https://images-na.ssl-images-amazon.com/images/I/31zTkBNcyuL._SL160_.jpg"---いつまで経っても終わらないシステム開発の代名詞として、「サグラダ・ファミリア」が出てくることがあります。しかし、そもそも、サグラダ・ファミリアは、いわゆるデスマーチプロジェクトだったのでしょうか？「ガウディの伝言」を読んで、どきっとしたことがあったのでそのメモを残しておきます。{{% googleadsense %}}## サグラダ・ファミリアとガウディについてサグラダ・ファミリアは、スペイン、バルセロナにある教会であり、初代建築家フランシスコ・ビリャールによって、1882年に着工したのち、2代目建築家として着任したのが、ガウディ(antoni gaudi)である。サグラダ・ファミリアは、100年以上たった今もまだ完成はしておらず、2026年の完成が予定されている。[未完のサグラダ・ファミリア、ＩＴ駆使で工期150年短縮　　：日本経済新聞](http://www.nikkei.com/article/DGXMZO79896760Z11C14A1000000/)## ガウディの仕事の進め方一般的に建物を建てる際には、建築士がどういうデザインで作成するか、どういう構造でつくるかを明確に決めた上で、図面に起こす。それをもとに、実際に作業する人がものをつくっていくという流れになるかと思います。しかし、つくる建物が三次元にも関わらず、二次元の図面に表現するのには限界があります。建築士の思いも100%図面に書ききれるかというと、そんなわけありません。建築士は建築士で、つくってみて分かってくることもあるはずです。ここで、システム開発に無理やり当てはめて考えてみます。システム開発の難しさを表した図として、下記の図がよく出てきます。簡単にいうと、システム開発において、まず顧客が自分が本当に望むものを上手く説明できない、またその話をいろんな人がそれぞれの考えて動いたため、全然違うものが出来上がってしまうというシステム開発の難しさを風刺した絵になっています。![システム開発の難しさ](/images/system_development.jpg)[図引用][プロジェクト・マネージャの「やってはいけない」 - ［姿勢編］理由無き要求は機能化してはいけない：ITpro](http://itpro.nikkeibp.co.jp/article/COLUMN/20080828/313626/)このような認識の相違を生まないために、ガウディは図面に頼らなくても、自分が立体で発想したイメージを、そのまま立体で、実際に建物を作る職人たちに伝えるコミュニケーションの手段を持っていました。それは、模型による伝達です。それはどのようなものか？ 直弟子から推測されるガウディの仕事の進め方として、本書では以下のように紹介されていました。ガウディは、建物全体と各部の精巧な石膏模型をつくり(というよりも模型を作りながら建物の構造やデザインを考え)、それで職人たちに指示を出していました。例えば、10分の1のスケールの模型であった場合、職人たちはそこから直接プロポーションを読み取り、10倍したものを作っていきます。図面が邪魔であるとまでは言いませんが、それをあまりにも重要視し過ぎると、ものをつくる人間たちの創造的な力を奪ってしまうことがあります。もともと、平面に描かれた図面から未知の立体を完全に創造するのは容易ではありません。**ものをつくる人間をダメにする確実な方法は、全体を考えさせず、細かい作業をひたすら義務としてやらせることです。** そうするともう、現場での新しい発想が生まれてこなくなるだけでなく、いかに手を抜くかということばかり考える人が現れ、図面通り100%のものすらできなくなります。作業を急かせば急かすほどどんどんずさんなものが出来上がります。そこで、ガウディは、職人たちの中に入っていき、その模型を見せて、「石でこんなものを作れないか？」と提案します。その模型は建物のほんの一部だったとしても、ガウディが作ったものであるため、美しい模型でした。その素晴らしい模型を目の前に置かれると、造形のプロたちは、自分たちの技術でつくってみたい気にさせられ、やる気になる。そのときに湧いてくる一人一人の意欲と、職人たちの頭に描かれる三次元的な構図こそ最大の図面だと、おそらくガウディは考えていたのでしょう。ガウディがさらに、特徴的だったのは、建物をつくりながら、模型をどんどん修正していったことです。付け加えたり、取り去ったり、模型の形を毎日のように少しずつ変えていく。職人たちは、日々変わっていく模型を介してガウディとコミュニケートしていくうちに、ガウディの考えを理解し、またその形をつくるためのコツのようなものが分かってきます。最初は、不可能に思えていた一見複雑な形でも、自分たちの手で作り上げられるという確信を深めていきます。ガウディは、職人たちに夢を与えながら100%以上の力を引き出していた。ガウディに学びながら、自分で形の作り方を考えているうちに、職人たちの方で面白い形を思いつくこともあります。ガウディは、そういった職人たちからのアイデアをそのままではないにしろ、そこから考えを発展させ、建物の表現をよりよくしていました。現場での発見を大切にし、常により良いものを求めていくという考え方が長い間受け継がれてきました。サグラダファミリアは、ガウディの時代から図面よりも模型を重視し、現場で一人一人が創造力を働かせながら建設されていた。このあたりのくだりは、ドメインモデルをベースに発展させていく、ドメイン駆動設計(DDD)の考えに通じるものがあるんじゃないかなと。(全然DDDは理解していないし、実践もできてないのだが)常に模型(モデル)がそこにあり、それを改良させながら建設(開発)を進めていく。**「諸君、明日はもっと良いものをつくろう」** 自分もその精神で、仕事をしたい。     エリック・エヴァンスのドメイン駆動設計 (IT Architects’Archive ソフトウェア開発の実践)  楽天で買う        ガウディの伝言 (光文社新書)  楽天で買う   
---title: "「犬も歩けばBAR(バル)に当たる」スペイン・バルセロナ旅行記2016"date: 2016-05-05T12:38:27+09:00comments: truecategory: ['Travel']tags: ['Spain','旅行記']published: trueslug: spain-barcelonaimg: "https://farm8.staticflickr.com/7747/26731528562_c396450288_t.jpg"---2016/04/28-05/03のGWを利用して、情熱とバルの街バルセロナへ夫婦で旅行に行ってきました。{{% googleadsense %}}## 今日も元気に建設中「サグラダ・ファミリア」2026年に完成予定のサグラダ・ファミリアは、当日も元気に建設中でした。サグラダ・ファミリアと言えば、[サグラダ・ファミリア建設とシステム開発 - SIS Lab](https://meganii.com/blog/2016/04/21/antoni-gaudi/)でも少し触れたように、アントニオ・ガウディの作品です。ガウディは、模型をベースにこのサグラダ・ファミリアを設計し、それを職人に伝えて建設を行なっていたといいます。サグラダ・ファミリアの地下の博物館には、たくさんの模型が展示されていました。建物外部も圧巻ですが、建物内部もステンドグラスや、そのステンドグラスから差し込む光によって建物を支える支柱が照らされ、とても幻想的な空間でした。巨大なステンドグラスは、最初観た時、ファイナルファンタジーの世界に来たようなそんな気分になりました。サグラダ・ファミリアの入場チケットと、グエル公園の入場チケットは事前にベルトラ経由でHISのオプショナルツアーを申し込んでいました。前もって印刷しておいたバウチャーチケットをおみやげ屋OLIMARで入場チケットと引き換えてもらいました。おみやげ屋の場所と、チケットの受け取りに若干不安はありましたが、場所も音楽堂の通り沿いであるとわかり、またチケットの受け取りも陽気なおばさんが対応してくださってなんとかなりました。陽気なおばさんは、サグラダ・ファミリアへの道順を身振り手振りで教えてくれました。゜:*★スペインのオプショナルツアー予約VELTRA★*:°## 「犬も歩けばBARに当たる」タイトルにも書いたように、ちょっと歩けばすぐにBAR(バル)に出くわしました。日本のコンビニ並にあちこちに点在しています。見る限りあまりチェーン店でBAR(バル)を展開しているのではなく、個人のお店でやってるところが多いように感じられました。逆に観光客向けにしていないようなところも多いので、若干入りづらいお店も多かったのも事実です。店の前に英語と料理の写真が乗ったメニューが置いてあるところは、入りやすく頼みやすかったです。私達も、空腹に耐えかね、なんとか良さそうなBAR(バル)を見つけて入り、パエリアとタパスにありつくことが出来ました。ちょっとだけ勇気を振り絞って、えいやっとお店に入ることが大事ですね。## ドラゴン？！とグエル公園よくガイドブックには、色とりどりのタイルで形どられたトカゲ？っぽい生き物が載っているかと思います。実は、あれはドラゴンだったということを、行ってみて初めて知りました。(一見するとトカゲですよね？)そして、そのドラゴンがいろんなところに配置されているのかな？とも思っていましたが、実際には入り口に１体いるだけということも判明しました。[Visit of the monumental precinct | Park Güell Barcelona](http://www.parkguell.cat/en/park-gueell/visit-of-the-monumental-precinct/)HISのガイドさんも1時間ぐらいあれば十分見て回れますよと言っていたが、確かにそのぐらいで満喫できました。## 情熱のフラメンコまず、まず、まず、お店が分かりづらい!!!! 3往復ぐらいはしたかもしれません。海沿いからLAMBLAS通りを北へ登っていく道すがらにあるはずのため、簡単にわかると思っていたが甘かった。海沿いから駅まで、駅からある建物まで、二分探索の要領でやっとのことたどり着きました。(同じ場所に向かうであろう日本人観光客に２度ほど遭遇したので同じく迷っていたと思います)まずは、ディナーで腹ごしらえ。ビュッフェで、タパス、ピンチョスを堪能しました。おいしくてついつい食べ過ぎてしまいますよね。ディナーの後は、お待ちかねのフラメンコショーです。ディナー会場から、部屋を移り、ステージへ。CAVA(カバ、スパークリングワイン)を振る舞われ、待つこと数分、ダンサーとギターの人がステージ上に現れました。ダンサーは、メインの女性が1人、男女の2ペアで4人。その後ろに、ギター2人、コーラスみたいな声を掛ける人が3人でした。パカパカパーン(擬音にすると味気ない)と、迫力のある革靴によるタップ音で始まったフラメンコショー。男性の踊りは、すさまじいスピードから繰り出される激しいタップ音と、ダイナミックな動きでした。一方、女性の踊りは、衣装をなびかせ回転したり、一瞬の間の所作(予備動作、後動作。歌舞伎で言う見得を切る感じ)が美しかったです。ダンスパートが終わり、ギターの弾き語り部分では、ウトウトしてしまったことは内緒です。(まったくもって、サグラダ・ファミリア、グエル公園を歩き切った後にフラメンコショーの予定をいれるべきではなかったと後悔)## 歩いて回れるバルセロナの街並みバルセロナに着いた初日は、ホテルを出た瞬間どっちにいけばよいか分からなくなったが、サグラダ・ファミリア、グエル公園と歩き、またフラメンコショーの場所を探す中でだいぶ道が分かるようになりました。ホテルは、Urgell駅とRocafort駅の間ぐらいにあり、ホテルからサグラダ・ファミリア、グエル公園は歩いていくことができました。意外とバルセロナの街は、歩いて回れます。ただ、往復する元気は残っていなかったので、帰りはタクシーを利用しました。今回の旅行では、地下鉄は使いませんでしたが、タクシーは日本と比べると安いので、疲れたら乗って変えるのもありです。また、空港へ行く際は、カタルーニャ広場から出ている空港行きバスを利用するのがよいです。タクシーだと30ユーロぐらいかかるが、バスだと5.9ユーロでした。バスだと、寝てれば着くので非常に楽です。であっという間のスペイン・バルセロナ旅行であった。スペインはスペインで、違う地方にも行ってみたいです。２人で一ヶ月ぐらいのんびりとヨーロッパを巡るような旅もしてみたいね。
---title: "Electronvがv1.0.0になったのでMithril.jsと合わせてAmazonアフィリエイトリンクビルダーを作った"date: 2016-05-11T22:05:30+09:00comments: truecategory: ['Tech']tags: ['electron', 'mithril.js', 'JavaScript']published: trueslug: electron-mithril-amazon-linkbuilderimg: "https://farm8.staticflickr.com/7085/26951293955_748076b816_q.jpg"---Electronが[Electron 1.0](http://electron.atom.io/blog/2016/05/11/electron-1-0)になったということで、以前作ったAmazon LinkbuilderをMithril.jsで置き換えてみました。(Electron v1.0.0がなったことはあまり関係ありません。。。){{% googleadsense %}}以前の記事「[ElectronでAmazonアフィリエイトリンクビルダーを作った - SIS Lab](https://meganii.com/blog/2016/02/20/electron-amazon-link-builder/)」で、Electronと素のJavaScriptでAmazonアフィリエイトリンクビルダーを作成しました。Amazonから商品を検索するAmazon Product Advertising APIの使い方と、そのJavaScriptラッパーの`node-apac`の使い方は、この記事を参照してください。## Mithril.jsElectron + Mithril.jsの組み合わせは、[Electron + Mithril.jsでFlickrアプリを作成する - SIS Lab](https://meganii.com/blog/2016/02/28/electron-mithriljs-flickr-app/) のときに試しました。使うAPIもコアとなるのは5つ、全部合わせても10数個とシンプルなため、個人的には、VirtualDOM入門にはとっつきやすいと感じました。世間的には、React.jsなんでしょうけどね。素のJavaScriptを、書き直しました。Model, Controller, ViewModel, Viewの使い方がまだイマイチ分かっていませんが、動くところまではいきました。## 作成したプログラム[meganii/electron-amazon-linkbuilder: Amazon Affiliate Link Builder built on Electron with Mithril.js](https://github.com/meganii/electron-amazon-linkbuilder)package.json を以下の通り、1.0.0以上を指定すればよいみたい。(おそらくなので、あまり分かっていない)```diff}, "homepage": "https://github.com/meganii/electron-amazon-linkbuilder#readme", "devDependencies": {-    "electron-prebuilt": "^0.36.0",+    "electron-prebuilt": "^1.0.0",   "mithril": "^0.2.4",   "config": "^1.20.0",   "apac": "1.5.0"```## 参考(さっそく、作ったAmazonアフィリエイトリンクビルダーで商品リンクを作りました笑)     JavaScript Ninjaの極意 ライブラリ開発のための知識とコーディング (Programmer's SELECTION)  楽天で買う        JavaScript 第6版  楽天で買う   
---title: "lets encrypt certbot"date: 2016-05-15T21:02:12+09:00comments: truecategory: ['Tech']tags: ['https', 'SSL', 'Lets Encrypt']published: trueslug: lets-encrypt-certbot---[Lets's Encryptでブログの常時SSL化にチャレンジ - SIS Lab](https://meganii.com/blog/2016/01/17/lets-encrypt-always-on-ssl/)の方法で新しいドメインを認証しようとすると、モジュールが古いから新しいモジュールを利用してねと怒られました。{{% googleadsense %}}改めて、[Getting Started - Let's Encrypt - Free SSL/TLS Certificates](https://letsencrypt.org/getting-started/)を見ながら、クライアントソフトを入れなおして、再度発行を行いました。## クライアントソフトをインストール```git clone https://github.com/certbot/certbotcd certbot./certbot-auto --help```certbotになったみたいです。裏で、botちゃんが動いて証明書を発行していることを想像しました。## 証明書発行```sudo service nginx stop # webサーバを止めるcertbot certonly --standalone -d meganii.com```これで、問題なく証明書を発行できました。cronなどで、定期的に更新している人は、設定を変えないといけない可能性があるので注意してください。
---title: "MacでVirtualbox、Vagrantをインストールするときにいつまで経っても検証が終わらない場合の対処法としてコマンドラインからインストールする"date: 2016-05-16T20:50:35+09:00comments: truecategory: ['Tech']tags: ['El Capitan','Mac']published: trueslug: install-virtualbox-and-vagrant-in-el-capitanimg: "https://farm8.staticflickr.com/7385/26774309130_925fdae08f_t.jpg"---久々に、vagrantを触ろうと思い、どうせならバージョンアップしてから使おうと思い、Virtualboxから入れ直そうとしたらちょっとハマった時の話です。{{% googleadsense %}}## 環境- El Capitan Version 10.11.4※ VirtualboxとVagrantのバージョンはメモしていませんでした## 事象dmgファイルをダウンロードして、Vagrant.pkgやVirtualbox.pkgをダブルクリックしたところ、以下のようにチェックが終わらない現象になった。## 原因[virtualbox.org • View topic - [INSTALL] Verifying "VirtualBox.pkg"... never clears -- El Cap 10.11.4](https://forums.virtualbox.org/viewtopic.php?f=8&amp;t=77122)を見ると、System Integrity Protection(SIP)絡みでインストールが弾かれるみたい。System Integrity Protection(SIP)については、以下のページが参考になった。[OS X 10.11 El CapitanのSystem Integrity Protection(SIP)についてちょっと詳しく](http://rcmdnk.github.io/blog/2015/10/10/computer-mac/)## 対処方法対処方法として、「1.SIPを無効化する」か、「2.`sudo installer`でインストールする」方法がありそう。ここでは、「2.`sudo installer`でインストールする」の方法で、[VirtualBoxのインストール(MacOS X El Capitan) - Qiita](http://qiita.com/tniizawa/items/33eb015296ea171ed25f)を参考にして、CUIでインストールしました。### 手順1.マウント```hdiutil mount VirtualBox-5.0.18-106667-OSX.dmg```2.パッケージインストール```sudo installer -pkg /Volumes/Vagrant/Vagrant.pkg -target /Volumes/Macintosh\ HD```3.アンマウント```hdiutil mount VirtualBox-5.0.18-106667-OSX.dmg```## 結論上記の手順でインストールすれば、すんなりとインストールすることができました。El Capitanにしてから、ちょくちょくこのSIPに悩まされるのでもうちょっと理解するようにしたい。
---title: "MariaDBの日本語文字化けを解消するための設定"date: 2016-05-29T15:55:28+09:00comments: truecategory: ['Tech']tags: ['MariaDB', 'DB']published: trueslug: mariadb-utf8img: 'https://images-na.ssl-images-amazon.com/images/I/51pj9W0WxzL._SL160_.jpg'---Ruby on RailsからMariaDBを利用した時に、文字化けが発生したのでMariaDBの設定内容を見直した。## 前提MariaDBのバージョン```Server version: 10.1.10-MariaDB MariaDB Server```{{% googleadsense %}}## 文字化けするcharacter_set_server, character_set_databaseが、latin1になっているのが原因で、新規作成したデータベース、テーブルの文字latin1になっていた。```MariaDB [(none)]&gt; show variables like 'char%';+--------------------------+----------------------------+| Variable_name            | Value                      |+--------------------------+----------------------------+| character_set_client     | utf8                       || character_set_connection | utf8                       || character_set_database   | latin1                     || character_set_filesystem | binary                     || character_set_results    | utf8                       || character_set_server     | latin1                     || character_set_system     | utf8                       || character_sets_dir       | /usr/share/mysql/charsets/ |+--------------------------+----------------------------+```### 各設定の説明|設定値                    |	説明               ||:------------------------|:------------------------------------------------------------------------||character_set_client	    |クライアント =&gt; サーバーにメッセージを送る際に使われるキャラセット                 ||character_set_connection	|クライアントが送ったクエリをサーバーが解析する際、このキャラセットに従ってunescapeする||character_set_database	  |DBのdefaultキャラセット。"LOAD DATA INFILE"文はこの指定に従う||character_set_filesystem	|ファイルシステムの文字コード||character_set_results	  |サーバー =&gt; クライアントに結果を送信するときに使われるキャラセット||character_set_server	    |サーバーのdefaultキャラセット||character_set_system	    |ファイル名をこのキャラセットで扱う。utf8固定||character_sets_dir	      |キャラセットファイルの置いてあるディレクトリ|参考: [MySQL/MariaDB　文字コードの設定 - takafumi blog](http://takafumi-s.hatenablog.com/entry/2015/04/03/010720)## 設定一般的には、`/etc/my.cnf`に`/etc/my.cnf.d`ディレクトリにある設定ファイルを読み込む設定を書いておき、詳細設定は、`/etc/my.cnf.d`の各設定ファイルに書く。今回、自分の設定ファイルを確認すると、`/etc/my.cnf`に`my.cnf.d`ディレクトリを読み込む設定がされていなかったため、追加した。### /etc/my.cnf```diff[mysqld]datadir=/var/lib/mysqlsocket=/var/lib/mysql/mysql.sockuser=mysql# Disabling symbolic-links is recommended to prevent assorted security riskssymbolic-links=0port=3306[mysqld_safe]log-error=/var/log/mysqld.logpid-file=/var/run/mysqld/mysqld.pid+!includedir /etc/my.cnf.d```### /etc/my.cnf.d/server.cnf続いて、`/etc/my.cnf.d/server.cnf`に文字コードの設定を追記した。```sudo vim /etc/my.cnf.d/server.cnf``````diff# this is read by the standalone daemon and embedded servers[server]# this is only for the mysqld standalone daemon[mysqld]+character-set-server=utf8 #added[galera][embedded][mariadb]```MariaDBを再起動し、設定を反映させる。```sudo /etc/init.d/mysql restart```## utf-8```MariaDB [(none)]&gt; show variables like 'char%';+--------------------------+----------------------------+| Variable_name            | Value                      |+--------------------------+----------------------------+| character_set_client     | utf8                       || character_set_connection | utf8                       || character_set_database   | utf8                       || character_set_filesystem | binary                     || character_set_results    | utf8                       || character_set_server     | utf8                       || character_set_system     | utf8                       || character_sets_dir       | /usr/share/mysql/charsets/ |+--------------------------+----------------------------+```これで新規作成されるデータベース、テーブルの文字コードは、utf8になった。## 参考- [MariaDBの日本語の文字化けを解消する - Qiita](http://qiita.com/aiiro/items/1c160f5cb70c0850e8ce)- [MySQL/MariaDB　文字コードの設定 - takafumi blog](http://takafumi-s.hatenablog.com/entry/2015/04/03/010720)     Ruby on Rails 4 アプリケーションプログラミング  楽天で買う        MariaDB&amp;MySQL全機能バイブル  楽天で買う   
---title: "CasperJSでAmazonログイン"date: 2016-05-30T07:04:55+09:00comments: truecategory: ['Tech']tags: ['CasparJS']published: trueslug: casperjs-amazon---CasperJSで、Amazonに自動ログインするサンプル。PhantomJSを直接触るよりは書きやすい.{{% googleadsense %}}```var casper = require("casper").create({  verbose: true,  logLevel: 'debug',  pageSettings: {       loadImages:  false,         // The WebPage instance used by Casper will       loadPlugins: false,         // use these settings       userAgent: 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_7_5)'  }});casper.start("https://affiliate.amazon.co.jp/", function () {    this.fillSelectors("#identitybox &gt; div &gt; form", {        "input[name='username']": "AMAZON_ID",        "input[name='password']": "AMAZON_PW"    }, true);    this.click('#signin &gt; input[type="image"]');});casper.then(function() {  console.log(this.evaluate(function() {    return document.querySelector('#mini-report &gt; div.line-item-total &gt; div.data').textContent;  }));});```## 参考[Casper.JSのススメ - yuukigoodman blog](http://blog.yuukigoodman.net/entry/2013/08/17/005440)
---title: "google-api-ruby-clientからGoogle Adsense Management APIを操作する方法"date: 2016-06-05T09:58:34+09:00comments: truecategory: ['Tech']tags: ['Google','Ruby', 'api']published: trueslug: ruby-google-api-clientimg: "https://c8.staticflickr.com/8/7305/27394115551_0612eb23fb_t.jpg"---## 何をしたいか？- `google-api-ruby-client`を利用して、Google Adsenseの収益情報を取得したい## 概要(何が書いてあるか)- [https://github.com/google/google-api-ruby-client](https://github.com/google/google-api-ruby-client)のサンプルを参考に、プロジェクトの作成の仕方から、認証情報の作り方、Adsense用のコード## どこにハマったか？- `google-api-ruby-client`のversion 0.9以降の方法がなかなか見つからず試行錯誤した- 特に、認証周りがよく分からず、苦労した最終的には、googleのサンプルコードをベースに作成することでレポート取得ができることができた。{{% googleadsense %}}## 手順googleのサンプルをベースにAdsense用のコードを作成する。(「Adsense用コード」参照)[https://github.com/google/google-api-ruby-client](https://github.com/google/google-api-ruby-client)以下の手順で'google-api-samples'コマンドを実行する。1. プロジェクトの作成2. API Managerで利用したいAPI(ここではAdsense Management API)を有効化3. 利用するAPIに応じた認証を作成4. '.env'ファイルに「3.」で作成した認証情報を設定5. google-api-samples コマンドを実行し認証以下、README.md より抜粋。&gt;Depending on which particular samples you want to run, differentsteps may be required. Some samples, like Pub/Sub, require a service account,others like Drive, Calendar, and YouTube require an OAuth Client ID. And insome cases like Translate, only an API key is needed.&gt;* Create a project at https://console.developers.google.com* Go to the `API Manager` and enable the APIs you'd like to try* Go to `Credentials` and create the appropriate type of credential for the sample    * For keys, use 'Server key' as the type    * For OAuth Client IDs, use 'Other' as the type    * For service accounts, use the 'JSON' key type  ## 1. プロジェクトの作成[https://console.developers.google.com](https://console.developers.google.com) からプロジェクトを作成する。    ## 2. API Managerで利用したいAPI(ここではAdsense Management API)を有効化    ## 3. 利用するAPIに応じた認証を作成                ## 4. '.env'ファイルに「3.」で作成した認証情報を設定'dotenv'は、プロジェクト直下の`.env`を環境変数としてロードする。先ほど、作成した認証情報の`Client ID`と`Client sercret`を書く。```.envGOOGLE_CLIENT_ID=CLIENT_IDGOOGLE_CLIENT_SECRET=CLIENT_SECRETGOOGLE_APPLICATION_CREDENTIALS=hogehoge.jsonGOOGLE_CREDENTIAL_STORE=credentials.yaml```## 5. 5. google-api-samples コマンドを実行し認証google-api-samples コマンドを実行して出力されたURLにアクセスして、認証を行う。## Adsense用コードGoogle Analyticsのサンプルコードを参考に、Adsense用のプログラムを作成した。```# This software includes the work that is distributed in the Apache License 2.0require 'google/apis/adsense_v1_4'require 'base_cli'module Samples  class Adsense &lt; BaseCli    Adsense = Google::Apis::AdsenseV1_4    desc 'show_report ACCOUNT_ID', 'Show report for the given adsense account ID'    method_option :start, type: :string, required: true    method_option :end, type: :string, required: true    def show_report(account_id)      adsense = Adsense::AdSenseService.new      adsense.authorization = user_credentials_for(Adsense::AUTH_ADSENSE)      result = adsense.generate_account_report(account_id,                                                options[:start],                                                options[:end],                                                :metric =&gt; 'EARNINGS')      puts result    end  endend```## 参考### dotenv環境変数を読み込ませる。- [bkeepers/dotenv: Loads environment variables from `.env`.](https://github.com/bkeepers/dotenv)- [Dotenv使ってみた - Qiita](http://qiita.com/ogawatti/items/e1e612b793a3d51978cc)### thorコマンドラインインターフェース(CLI)のツールキット- [erikhuda/thor: Thor is a toolkit for building powerful command-line interfaces.](https://github.com/erikhuda/thor)- [Ruby の CLI ツールの作成を支援する、 thor gem の基本について。 #thor #ruby](http://qiita.com/tbpgr/items/10a5c236cfb528c76ef5)## Next Action- OAuthの認証周りの考え方がいまいち完全に理解していないため、まとめる。- ダッシュボード化を検討していて、以下のサンプルが面白そう [ButecoOpenSource/dashboard: Status Dashboard](https://github.com/ButecoOpenSource/dashboard)
---title: "腰痛におすすめの「やわこ」でのセルフマッサージ"date: 2016-06-25T22:04:38+09:00comments: truecategory: ['Life']tags: ['セルフマッサージ']published: trueslug: self-massage-tool-yawakoimg: "https://c5.staticflickr.com/8/7289/27861183956_a050a81ea2_t.jpg"---腰が痛い時って、太ももの付け根や、お尻から腰にかけての筋肉が固まっているときだったりしないでしょうか？自分も、腰痛持ちのため、なんとなく腰がずーんと重いときには、いろいろと試してみました。例えば、机に座っているときに、消しゴムを太ももの付け根に置き、ツボを押すように自重をかけたり、背もたれと腰の間に消しゴムを挟んでぐいーっと押し込んでみたり。これが意外と気持ちよく、たまにやっていました。しかしあるとき何かの番組で、テニスボールでのストレッチが紹介されていました。このテニスボールでのストレッチ、試してみると、なるほど、消しゴムより断然よいです笑。それ以降、テニスボールでグリグリやっていたのですが、寝そべって腰に当てるときにボールが転がっていってしまい、うまくポイントに当てられないことが多々ありました。{{% googleadsense %}}## いいとこ当たって押しほぐし「やわこ」そこで、前々から気になってた「やわこ」をLOFTで購入しました。テニスボールが二つくっついている形をしています。## 使用感「これは地味にいい！」というのが素直な感想です。「やわこ」は、硬式テニスボールが少し空気が抜けて、手で簡単に潰せるぐらいの固さです。個人的には、この「やわこ」の柔らかさぐらいが痛すぎず、ちょうど気持ちの良い固さです。私の使い方は、アルミマットに寝転びながら「やわこ」を腰から背中、肩のあたりにちょっとずつ動かしながら自分で気持ちの良い部分を探しながら、ちょうどよい強さで押していきます。この「ちょうどよい」強さというのがポイントで、マッサージを受けると強すぎたり、逆にもっと押して欲しいなど力の加減を伝えるのが難しいです。でも、「やわこ」を使ったセルフマッサージなら、自分の気持ちの良い部分を、好きな力の加減でグリグリできるので、快適です。## 注意点「やわこ」ではまだ炎症を起こしたことはないですが、昔テニスボールを使ってゴリゴリとやっていたところ、むしろ炎症を起こしたことがありました。そのときは、気持ちがよいと思ってぐりぐりやっていたのですが、一晩寝て起きると、極度の筋肉痛みたいな感じで、しばらく動けませんでした。。。何事もやり過ぎには要注意です。初めは、少しずつ試すのがよいでしょう。固さは、柔らかめな「やわこ」と、固めの「かたお」の2種類から選ぶことができます。「やわこ」がテニスボールぐらいの柔らかさ、「かたお」は軟式野球ボールぐらいです。テニスボールマッサージを始めた人は、「やわこ」を買うのが無難だと思います。腰痛にお悩みの方は、一度試してみてはいかがでしょうか？     La・VIE(ラ・ヴィ) やわこ 3B-4705 ストレッチ ボール posted with カエレバ    La・VIE(ラ・ヴィ)        Amazon  楽天市場  Yahooショッピング          La・VIE(ラ・ヴィ) かたお 3B-4706 ストレッチ ボール posted with カエレバ    La・VIE(ラ・ヴィ)        Amazon  楽天市場  Yahooショッピング          キャプテンスタッグ キャンプマット シルバーキャンピングマット180×60cm S ブルー M-7381 posted with カエレバ    キャプテンスタッグ(CAPTAIN STAG) 2012-03-09       Amazon  楽天市場  Yahooショッピング     
---title: "Lets's Encryptの証明書期限切れへの対応と、ドメイン紐付けの適正化"date: 2016-07-09T08:06:50+09:00comments: truecategory: ['Tech']tags: ['https', 'SSL', 'Lets Encrypt']published: trueslug: invalid-ssl-certificateimg: "/images/le-logo-standard.png"---この[meganii.com](https://meganii.com)は、Lets's Encryptで証明書を発行しています。しばらくは、仕組みがよく分かっていないので手動で更新しようと、3ヶ月に一回は更新するようにしていたのですが、ついに昨日、証明書の期限切れでアクセス出来ない状態になりました。。。(なんというお間抜けな話)慌てて、certbotを実行させ、更新しようとしたのですが、前回の更新が上手くいっていなかったみたいでrenewできませんでした。古い証明書を消して、新規で発行すればできたのでそのメモを残しておきます。{{% googleadsense %}}## 失敗その1 なぜかhttpdが起動している```$ sudo service nginx stop$ ./certbot-auto renew --dry-runRequesting root privileges to run certbot...  /home/xxxxx/.local/share/letsencrypt/bin/letsencrypt renew --dry-run  /home/xxxxx/.local/share/letsencrypt/lib/python2.6/site-packages/cryptography/__init__.py:26: DeprecationWarning: Python 2.6 is no longer supported by the Python core team, please upgrade your Python. A future version of cryptography will drop support for Python 2.6  DeprecationWarning-------------------------------------------------------------------------------Processing /etc/letsencrypt/renewal/meganii.com.conf--------------------------------------------------------------------------------------------------------------------------------------------------------------The program httpd (process ID 15164) is already listening on TCP port 80. Thiswill prevent us from binding to that port. Please stop the httpd programtemporarily and then try again. For automated renewal, you may want to use ascript that stops and starts your webserver. You can find an example athttps://letsencrypt.org/howitworks/#writing-your-own-renewal-script.Alternatively you can use the webroot plugin to renew without needing to stopand start your webserver.-------------------------------------------------------------------------------2016-07-08 22:51:05,774:WARNING:certbot.renewal:Attempting to renew cert from /etc/letsencrypt/renewal/meganii.com.conf produced an unexpected error: At least one of the (possibly) required ports is already taken.. Skipping.** DRY RUN: simulating 'certbot renew' close to cert expiry**          (The test certificates below have not been saved.)All renewal attempts failed. The following certs could not be renewed:  /etc/letsencrypt/live/meganii.com/fullchain.pem (failure)   DRY RUN: simulating 'certbot renew' close to cert expiry**          (The test certificates above have not been saved.)1 renew failure(s), 0 parse failure(s)IMPORTANT NOTES: - Your account credentials have been saved in your Certbot   configuration directory at /etc/letsencrypt. You should make a   secure backup of this folder now. This configuration directory will   also contain certificates and private keys obtained by Certbot so   making regular backups of this folder is ideal.```上記履歴は、一部抜粋しています。80portが開いているため、エラーとなっていました。httpdは、止めたはずと思っていたのですが何かのキッカケで起動状態にあったみたいです。`sudo service httpd stop`を実行して、サービスを止めます。## 失敗その2 なぜか前回更新時に、異なるドメインと紐付いてしまっていた後は、単純に`certbot-auto renew`を実行すればよいはずが、なぜかドメインが違うと怒られた。(おそらく前回更新したときに変なことをしたのだろう)```$ ./certbot-auto renew --dry-runRequesting root privileges to run certbot...  /home/xxxxx/.local/share/letsencrypt/bin/letsencrypt renew --dry-run  /home/xxxxx/.local/share/letsencrypt/lib/python2.6/site-packages/cryptography/__init__.py:26: DeprecationWarning: Python 2.6 is no longer supported by the Python core team, please upgrade your Python. A future version of cryptography will drop support for Python 2.6  DeprecationWarning-------------------------------------------------------------------------------Processing /etc/letsencrypt/renewal/meganii.com.conf-------------------------------------------------------------------------------2016-07-08 23:04:54,638:WARNING:certbot.renewal:Attempting to renew cert from /etc/letsencrypt/renewal/meganii.com.conf produced an unexpected error: Failed authorization procedure. xxxxxxxxxx.com (tls-sni-01): urn:acme:error:connection :: The server could not connect to the client to verify the domain :: Failed to connect to 192.64.147.141:443 for TLS-SNI-01 challenge. Skipping.** DRY RUN: simulating 'certbot renew' close to cert expiry**          (The test certificates below have not been saved.)The following certs could not be renewed:  /etc/letsencrypt/live/meganii.com/fullchain.pem (failure)** DRY RUN: simulating 'certbot renew' close to cert expiry**          (The test certificates above have not been saved.)1 renew failure(s), 0 parse failure(s)IMPORTANT NOTES: - The following errors were reported by the server:   Domain: recommented.com   Type:   connection   Detail: Failed to connect to 192.64.147.141:443 for TLS-SNI-01   challenge   To fix these errors, please make sure that your domain name was   entered correctly and the DNS A record(s) for that domain   contain(s) the right IP address. Additionally, please check that   your computer has a publicly routable IP address and that no   firewalls are preventing the server from communicating with the   client. If you're using the webroot plugin, you should also verify   that you are serving files from the webroot path you provided.```## 解決方法管理者権限で、以下のフォルダに格納されているエラーに関係していそうなフォルダを削除する。- `/etc/letsencrypt/live/`- `/etc/letsencrypt/archive/`- `/etc/letsencrypt/renewal/`例えば、`/etc/letsencrypt/live/`だと、meganii.com以外に、meganii.com-0001なんていうのもできていた。```$ su$ cd /etc/letsencrypt/live/rm -rf meganii.com/rm -rf meganii.com-0001/rm -rf xxxxxxx.com/```一通り、消し終わった後、以下の通り、新規発行を行なった。## 新規発行以下の通り、最終的にうまく発行できました。```$ ./certbot-auto certonly --standalone -d meganii.comRequesting root privileges to run certbot...  /home/xxxxx/.local/share/letsencrypt/bin/letsencrypt certonly --standalone -d meganii.com  /home/xxxxx/.local/share/letsencrypt/lib/python2.6/site-packages/cryptography/__init__.py:26: DeprecationWarning: Python 2.6 is no longer supported by the Python core team, please upgrade your Python. A future version of cryptography will drop support for Python 2.6  DeprecationWarningVersion: 1.1-20080819Version: 1.1-20080819IMPORTANT NOTES: - Congratulations! Your certificate and chain have been saved at   /etc/letsencrypt/live/meganii.com/fullchain.pem. Your cert will   expire on 2016-10-06. To obtain a new or tweaked version of this   certificate in the future, simply run certbot-auto again. To   non-interactively renew *all* of your certificates, run   "certbot-auto renew" - If you like Certbot, please consider supporting our work by:   Donating to ISRG / Let's Encrypt:   https://letsencrypt.org/donate   Donating to EFF:                    https://eff.org/donate-le$ sudo service nginx restartnginx を停止中:                                            [失敗]nginx を起動中:                                            [  OK  ]``` ※　xxxxxの部分は、差し替え## 参考[Certbot](https://certbot.eff.org/#centosrhel6-nginx)## 所感前回やったことは、このブログに書いたはず。でも、そういやアクセスできないじゃないか。と思いましたが、ローカルにMarkdownファイルがあるので安心して参照できました。下手にDBを持ってないので、こういうときに便利だなと実感しました。自動化しとかないとなぁ・・・。
---title: "http/2ベンチマークツール「h2load」をインストール"date: 2016-07-17T20:19:21+09:00comments: truecategory: ['Tech']tags: ['h2load','h2o']published: trueslug: install-h2loadimg: https://farm6.staticflickr.com/5624/21367186743_cbcb0e5268_m.jpg---![4 Good Reasons for Using HTTP/2](https://farm6.staticflickr.com/5624/21367186743_cbcb0e5268_z.jpg?zz=1 "4 Good Reasons for Using HTTP/2")[4 Good Reasons for Using HTTP/2 / Tsahi Levent-Levi](https://www.flickr.com/photos/86979666@N00/21367186743/ "4 Good Reasons for Using HTTP/2 / Tsahi Levent-Levi"){{% googleadsense %}}今、このブログは静的サイトジェネレータ`hugo`で作成したhtmlファイルを、`nginx`で公開しています。また、別のサイトは、`nginx`+`wordpress`で運営しています。今気になっているのは、`h2o`と呼ばれているWebサーバです。`nginx`から`h2o`に変えた場合、どのぐらい早くなるのか？そもそも、今の段階でどのぐらいのリクエストを捌けているのか？という疑問を解消するために、まずはベンチマークを取ろうと、ベンチマークツールを整備しました。## 各種ベンチマークツール- ab- wrk- h2load真っ先に思い浮かぶのは、`ab`コマンドです。昔もapacheとnginxの比較をしようとしたときに使いました。[abコマンド実行時のエラーを回避する \- SIS Lab](https://meganii.com/blog/2013/05/27/benchmark-apache/)`ab`コマンドよりも、モダンなのは、`wrk`らしいです。[HTTP ベンチマークツール wrk についてメモ \| Siguniang's Blog](https://siguniang.wordpress.com/2015/06/21/notes-on-wrk-http-benchmarking-tool/)[GitHub \- wg/wrk: Modern HTTP benchmarking tool](https://github.com/wg/wrk)`wrk`も便利そうなのですが、http/2プロトコルに対応していません。[Webサーバのベンチマークツールはh2loadが便利 \- 人間とウェブの未来](http://hb.matsumoto-r.jp/entry/2016/01/14/114048)[h2load を使おう \- あどけない話](http://d.hatena.ne.jp/kazu-yamamoto/20151225/1451287148)上記のサイトを参考に`h2load`が便利そうなので、インストールしてみます。brewともyumでもインストールはできないみたいなので、自前でビルドします。## `h2load`のインストールまず、ローカルのMacにインストールを試してみたのですが、うまくビルドまで辿り着きませんでした。次に、VirtualBoxのCentOS6.4に入れてみようとしたのですが、同じく行き詰まり、結局Ubuntuの環境を作ってインストールしました。メモ書きと共に残しておきますが、的はずれなことを書いているかもしれないので注意してください。## Ubuntu Server 14.04を vagrantで構築[Discover Vagrant Boxes \| Atlas by HashiCorp](https://atlas.hashicorp.com/boxes/search)でUbuntu Server 14.04を探して、vagrantからプロビジョニングします。Official Ubuntu Server 14.04 LTS (Trusty Tahr) builds```vagrant init ubuntu/trusty64; vagrant up --provider virtualbox```### ビルドに必要なパッケージのインストールと、spdylayのビルド```mkdir -p /usr/local/srccd /usr/local/srcgit clone https://github.com/tatsuhiro-t/spdylay #spdylayが必要なため#必要なパッケージをインストールsudo apt-get install autoconf automake autotools-dev libtool pkg-config zlib1g-dev libcunit1-dev libssl-dev libxml2-dev libevent-devcd spdylay/autoreconf -iautomakeautoconf./configuremakemake install```### nghttp2をビルド```cd /usr/local/src/git clone https://github.com/nghttp2/nghttp2     #h2loadはnghttp2に同梱されているためcd nghttp2/autoreconf -iautomakeautoconf./configuremakemake install```これでh2loadが利用可能になりましたが、`h2load`コマンドを叩くと以下のエラーが起きました。```h2load: error while loading shared libraries: libspdylay.so.7: cannot open shared object file: No such file or directory```これを解決するには、`ldconfig`コマンドを実行します。```ldconfig```### インストール完了```h2load -n100000 -c100 -m100 https://meganii.com/starting benchmark...spawning thread #0: 100 total client(s). 100000 total requestsTLS Protocol: TLSv1.2Cipher: ECDHE-RSA-AES128-GCM-SHA256Application protocol: h2progress: 10% doneprogress: 20% doneprogress: 30% doneprogress: 40% doneprogress: 50% doneprogress: 60% doneprogress: 70% doneprogress: 80% doneprogress: 90% doneprogress: 100% donefinished in 1057.51s, 94.56 req/s, 5.97MB/srequests: 100000 total, 100000 started, 100000 done, 98534 succeeded, 1466 failed, 0 errored, 0 timeoutstatus codes: 98534 2xx, 0 3xx, 0 4xx, 1466 5xxtraffic: 6.16GB (6617383053) total, 1.56MB (1634036) headers (space savings 90.77%), 6.16GB (6610382710) data                     min         max         mean         sd        +/- sdtime for request:      2.05s     305.07s      99.06s      53.36s    68.82%time for connect:   209.74ms       1.72s       1.23s    360.78ms    54.00%time to 1st byte:      1.02s       3.18s       1.70s    565.46ms    55.00%```## まとめただ単純にhttp/2プロトコルに対応したベンチマークツールを入れたいだけだったのに、かなり苦労しました。
---title: "さくらVPSのCentOS6.4にh2oをAnsibleでビルド＆インストール"date: 2016-07-18T21:44:52+09:00comments: truecategory: ['Tech']tags: ['h2o','http/2']published: trueslug: installing-h2o-with-ansibleimg: "/images/ansible.png"---前回[http/2ベンチマークツール「h2load」をインストール \- SIS Lab](https://meganii.com/blog/2016/07/17/install-h2load/)でhttp/2ベンチマークツールをインストールしたので、いよいよ`h2o`をインストールします。さくらVPSで運用しているCentOSは、Ansible経由で整備しているので今回もAnsibleのタスクを作成して、まずはローカルの開発環境でテスト、そしてさくらVPSのCentOSに適用します。Wordpressも、`h2o`で動かそうと思ったのですが、うまくリソースが取得できませんでした。下記の設定では、静的ジェネレータ`hugo`で作成するファイルだけ`h2o`で公開するときの設定です。{{% googleadsense %}}## Ansibleでのh2oインストール方針- ダウンロードしたソースコードは、`/tmp`に格納する- 実行ファイルは`/usr/local/bin`に格納する- h2oの設定ファイルは`/usr/local/etc/h2o/conf/`に格納する## Ansibleのロール設定```group_varsroles  - h2o    - tasks    - templateshostssite.yml```### tasks/main.yml```---- name: install cmake  yum: name=cmake state=present  sudo: yes- name: install package  yum: pkg={{ item }} state=present enablerepo=epel  with_items:    - openssl    - openssl-devel  sudo: yes- name: check h2o installed  command: test -x /usr/local/bin/h2o  register: h2o_present  ignore_errors: yes  changed_when: false- name: download h2o  get_url: url=https://github.com/h2o/h2o/archive/v{{h2o_version}}.tar.gz dest=/tmp/h2o.tgz  when: h2o_present|failed- name: expand h2o  command: tar xzf h2o.tgz chdir=/tmp creates=/tmp/h2o-{{h2o_version}}  when: h2o_present|failed- name: cmake h2o  command: cmake -DWITH_BUNDLED_SSL=on . chdir=/tmp/h2o-{{h2o_version}} creates=/tmp/h2o-{{h2o_version}}/Makefile  when: h2o_present|failed- name: make h2o  command: make chdir=/tmp/h2o-{{h2o_version}} creates=/tmp/h2o-{{h2o_version}}/h2o  when: h2o_present|failed- name: install h2o  command: make install chdir=/tmp/h2o-{{h2o_version}} creates=/usr/local/bin/h2o  when: h2o_present|failed  sudo: yes- name: Ensures conf dir exists  file: path=/usr/local/etc/h2o/conf/ state=directory- name: Copy h2o configuration  template: src=h2o.conf dest=/usr/local/etc/h2o/conf/h2o.conf- name: Ensures log dir exists  file: path=/var/log/h2o/ state=directory- name: Create access log file  file: path=/var/log/h2o/access.log state=touch- name: Create error log file  file: path=/var/log/h2o/error.log state=touch- name: Create pid log file  file: path=/usr/local/etc/h2o/h2o.pid state=touch mode=0777- name: add iptables rule for http  lineinfile: dest=/etc/sysconfig/iptables regexp="{{ httpd_port }}" line="-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport {{ httpd_port }} -j ACCEPT" insertbefore="^# add end" state=present- name: add iptables rule for https  lineinfile: dest=/etc/sysconfig/iptables regexp="{{ https_port }}" line="-A RH-Firewall-1-INPUT -m state --state NEW -m tcp -p tcp --dport {{ https_port }} -j ACCEPT" insertbefore="^# add end" state=present- name: iptables restart  command: /etc/init.d/iptables restart```### templates/h2o.conf```access-log: /var/log/h2o/access.logerror-log:  /var/log/h2o/error.logpid-file:   /usr/local/etc/h2o/h2o.pidhttp2-reprioritize-blocking-assets: ONgzip: ONexpires: 1 dayhosts:  "meganii.com:80":    listen:      port: 80    paths:      "/":        redirect: https://meganii.com/  "meganii.com:443":    listen:      port: 443      ssl:        certificate-file: /etc/letsencrypt/live/meganii.com/fullchain.pem        key-file:         /etc/letsencrypt/live/meganii.com/privkey.pem        minimum-version: TLSv1        cipher-suite: "AESGCM:HIGH:!3DES:!RSA:!aNULL:!eNULL:!MD5"        cipher-preference: server    paths:      "/":        file.dir: /home/web/www/meganii.com/```## h2oでWordpressを動かそうとしたときのメモ`h2o`と`php-fpm`の設定を下記の通り設定すれば、h2oでWordpressが動くことは動きました。でも、以下の不具合が出てしまい、うまく表示ができない状態になってしまいました。- 静的ファイル(css,js,img)の読込エラーで、レイアウトが崩れる- サブディレクトリで複数のブログを管理しているが、その管理画面の表示がうまくできない静的ファイルの読込エラーは、おそらくh2oとWordpressのファイル読取・実行権限が上手くいっていないことが考えられます。h2oはデフォルトでnobodyとして動くはずなので、`user: wordpress`としたのですが、ダメでした。どこを見なおせばよいのか。。また、管理画面の表示がうまくいないのは、nginxでいうところのRewriteの部分が影響しているとかんがえられる。これは、h2oでどのように書くのがよいのか要調査。```# Rewrite multisite '.../wp-.*' and '.../*.php'.if (!-e $request_filename) {        rewrite ^/[_0-9a-zA-Z-]+(/wp-.*) $1 last;        rewrite ^/[_0-9a-zA-Z-]+.*(/wp-admin/.*\.php)$ $1 last;        rewrite ^/[_0-9a-zA-Z-]+(/.*\.php)$ $1 last;}```### h2o.conf```user: wordpressfile.custom-handler:  extension: .php  fastcgi.connect:    port: /var/run/php-fpm/wordpress.sock    type: unix"domain.com:80":  listen:    port: 80  paths:    "/":      redirect: https://domain.com/"domain.com:443":  listen:    port: 443    ssl:      certificate-file: /etc/letsencrypt/live/domain.com/fullchain.pem      key-file:         /etc/letsencrypt/live/domain.com/privkey.pem      minimum-version: TLSv1      cipher-suite: "AESGCM:HIGH:!3DES:!RSA:!aNULL:!eNULL:!MD5"      cipher-preference: server  paths:    "/":      file.dir: /srv/wordpress      file.dirlisting: OFF      redirect:        url: /index.php/        internal: YES        status: 307```### /etc/php-fpm.d/wordpress.conf```[wordpress]listen = /var/run/php-fpm/wordpress.socklisten.owner = nginxlisten.group = nginxlisten.mode = 0660user = wordpressgroup = wordpresspm = dynamicpm.max_children = 10pm.start_servers = 1pm.min_spare_servers = 1pm.max_spare_servers = 3pm.max_requests = 500chdir = /srv/wordpress/php_admin_value[open_basedir] = /srv/wordpress/:/tmpphp_admin_value[error_log] = /var/log/php-fpm/www-error.log```### まとめ静的ファイルをホストするには、configファイルもシンプルで楽、たぶんデフォルトでうまいことやってくれるのが`h2o`だと思う。Wordpressをなんとか動かせるようにして、サーバープッシュなどの機能を有効にしてベンチマークを取りたい。ただ、やりたいことはただ単純にブログと簡単なアプリを公開したいだけなので、その目的を実現するためには、ネットで情報があるnginx + Wordpressの方が設定を探しやすいことは探しやすい。まあ、何事も勉強ということで。
---title: "Scotch Grain(スコッチグレイン)の革靴「シャインオアレイン」なら雨の日でも快適通勤！！"date: 2016-07-23T15:05:40+09:00comments: truecategory: ['Life']tags: ['革靴','レザー','scotch grain']published: trueslug: scotch-grain-shine-or-rain---１年ほど前に、初めてScotch Grain(スコッチグレイン)の革靴を買って以来、スコッチグレインの虜になってしまいました。晴れの日は、スコッチグレインの革靴を気分よく履いていけるのですが、雨の日は適当な履きつぶしても良いような靴を履いていくので、雨でテンションが下がっている中、さらに気分が上がりません。そこで、雨の日用スコッチグレインを欲しい欲しいと思っていたのですが、先月７月の会員限定セールでついに「シャインオアレイン」を買うことができました。{{% googleadsense %}}「シャインオアレイン」を雨の日に履いてみて、感じた嬉しいポイントは、次の３つです。## １．合皮やゴムではなく、ちゃんとした革靴合皮ではなく、撥水加工を施した本格レザーを使っているとのことです。&gt;甲革には、本革が持つしなやかな風合いと通気性を損なわずに、高い撥水性を実現した本格撥水レザーを採用。  [シャインオアレインⅢ :: Dark Brown :: 2726DBR（EEE）](http://www.scotchgrain-shop.com/category-260/dark-brown/2726dbr-3e.html)## ２．完全防水ではないが、防水してくれる！商品を購入するときにも説明を受けましたが、「完全防水」ではありません。でも、いままで適当な革靴だと浸水してくるような雨でも、この「シャインオアレイン」だと全然気になりませんでした。むしろ、スーツのパンツが濡れることで不快になるぐらいです。これは自分の場合、かなりストレス低減になりました。会社に着くなり、靴下までベトベトになり乾くまですごく不快でした。&gt;商品の防水性についてですが「シャインオアレイン」、「ファイバーグリップ」シリーズともに完全防水ではございません。撥水レザーシリーズは国産撥水カーフ＋合成底の組み合わせにより、高い防水性を実現した商品ですがスコッチグレインが採用しておりますグッドイヤーウェルト製法は“縫い靴”でございます。製法上縫い目などからの水の浸み込みは避けられないものとお考えください。  [シャインオアレインのお手入れについて : 東西店長 語り尽くし \| SCOTCH GRAIN](http://sgrain2.exblog.jp/20825856/)## ３．滑らない雨が降ると、駅の通路やマンホールの上などでスルッと滑るときはないでしょうか？僕は、恐る恐る忍び足で歩くことも多いです。でも、このシャインオアレインは、靴の裏がラバーになっていて、かなり滑りにくいです。調子に乗ってしまいそうなぐらいなので、逆に注意です笑。&gt;この製品の底材はSGソール(合成底)を使用しております。耐磨耗性・グリップ性に優れ、減りやすいつま先や化粧部分にはゴム硬度を硬めに、主な接地面にはしなやかに返るようにゴム硬度を変えたソールです。濡れた路面にも強いソール素材が最大特長。大変履きやすくて歩きやすい、雨にも強いソールです。  [シャインオアレインⅢ :: Dark Brown :: 2726DBR（EEE）](http://www.scotchgrain-shop.com/category-260/dark-brown/2726dbr-3e.html)&gt;廣川　駅の中って、滑りやすいじゃないですか。雨に強くてもそれだけでは安心できません。だからこのファイバーグリップを採用したんです。このシワ模様のところに、グラスファイバーが入ってるんですよ。このグラスファイバーの長さは3ミリくらいなんだけど、その細さはミクロレベル。そういうガラス繊維なんです。  [【雨の日】Scotch Grainのシャインオアレインは、豪雨にも負けない最強の日本製本革靴 \| MATCHA \- 訪日外国人観光客向けWebマガジン](http://mcha.jp/17602)## まとめ雨の日でも、少しばかり気分良く家を出ることが出来るので、多少高くても大満足の一品です。しっかりと手入れをして長持ちさせようと思わせてくれるのもGoodです。## 参考- [シャインオアレインのお手入れについて : 東西店長 語り尽くし \| SCOTCH GRAIN](http://sgrain2.exblog.jp/20825856/)
---title: "ワークスタイル改革とは何か？"date: 2016-07-30T08:14:23+09:00comments: truecategory: ['Tech']tags: ['ワークスタイル']published: trueslug: workstyleimg: "https://images-na.ssl-images-amazon.com/images/I/41nDcp8X7fL._SL160_.jpg"---## ワークスタイル改革はなぜ必要か### 現状世界- グローバリゼーション日本- 人口減少、労働力減少- 超高齢化社会- 長時間労働の問題企業- 人材を確保できないこのような状況を見ると、長時間働いて入れば、企業も業績が上がり、従業員も良い給料がもらえて幸せという時代は終わった。労働時間が価値に必ずしも比例しない社会になり、時間・場所に限らず「新たな価値を創造する」ことでしか存在できなくなった。日本の企業で、いままで通りのやり方では通用しないから「ワークスタイル改革」が必要とされ、また叫ばれている。{{% googleadsense %}}### 今後では、今後どうしていけばよいのか？企業- 働く時間や、場所に制限があるため今まで働けなかった人に来てもらう- 専業主婦(専業主夫)、すでに退職した人に労働力を提供してもらう- 海外から優秀な人を採用する人材を確保し、新たな価値を創造するためには、働く側の事情に配慮し、今まで時間・場所に制限があるため働くことができなかった、もしくは働きたくなかった人たちに来てもらう。つまり、「時間」・「場所」にとらわれない新しい働き方を導入する必要がある。## 時間・場所にとらわれない新しい働き方って？#### 導入を進めるには何をすればよいか？- 労務管理- カルチャー・文化を変える- ツールを導入する## 企業に勤めながらどんな働きができるようになるか？たとえば、- 取れない長期連休の代わりに、リゾートで働く- 育児のため時短勤務ではなく、在宅勤務で- 夏と冬は「長野」で働きます## 参考     強いチームはオフィスを捨てる: 37シグナルズが考える「働き方革命」  Amazonで買う  楽天で買う   
---title: "Hugoで関連記事を表示する方法"date: 2016-08-11T13:54:52+09:00comments: truecategory: ['Tech']tags: ['Python']published: trueslug: hugo-related-postimg: https://images-fe.ssl-images-amazon.com/images/I/51%2BfZJOKEKL._SL160_.jpg---静的サイトジェネレータを使っていて困るのは、関連記事の表示です。Jekyllのときもそうでしたが、Hugoにしてもこの悩みは同じでした。Wordpressを利用していれば、関連記事プラグインで簡単に表示させることも可能ですが、静的サイトジェネレーターを利用した場合に「これがベスト」という方法が分かりません。私が考える方法には、以下の4つあります。1. 手動で頑張る2. Hugoテンプレート3. JavaScript4. Hugo DataFiles{{% googleadsense %}}## 1. 手動で頑張るなんといっても人(自分自身)が頑張って関連記事を選択して、手作業で関連記事を貼っていくので、正確にはなりそうですが、労力が掛かります。デザインの変更にも強くありません。## 2. HugoテンプレートHugoのテンプレートを利用して、同じタグを持つページを関連記事として表示させるものです。(以下のように、Hugoのテンプレートを用いる)```{{ $page_link := .Permalink }}{{ $tags := .Params.tags }}{{ range .Site.Pages }}{{ $page := . }}{{ $has_common_tags := intersect $tags .Params.tags | len | lt 0 }}  {{ if and $has_common_tags (ne $page_link $page.Permalink) }}   {{ $page.Title }}   {{ end }}{{ end }}```タグを適切に運用して、割りきって使う分にはこの方法が一番楽です。ただし、タグを適切に運用しないと全然関係のない記事を「関連記事」として表示させてしまったり、タグのつけ忘れで表示できなかったりします。## 3. JavaScript例えば、[Zenback](https://zenback.jp/)のように、JavaScriptで関連記事を表示する方法です。現在(2016/08/11現在)、このブログでは、人気記事の表示に[Ranklet](https://ranklet.com/)を利用しています。このWebサービスは、Google Analyticsのデータを利用して、JavaScriptで動的にDOMを書き換えるものです。もしも自前で用意するのであれば、これらZenback, RankletのようにJavaScriptで制御することが可能です。(どのように実装すべきかはまた別の問題があります・・・)ただし、せっかく静的サイトジェネレーターを利用して、静的なサイトを目指しているところに、JavaScriptで動的に書き換えるのはいかがなものかという疑問はあります。## 4. Hugo DataFilesHugoには、DataFilesという機能があり、この機能を利用することで、自前でyamlなどを作成して、そのパラメータを呼び出すことができます。DataFilesに、ある記事に対する関連記事の情報をあらかじめ書いておくことで、buildする際に、そのパラメータを利用して関連記事を表示させることができます。静的ジェネレータのメリットを活かしつつ、関連記事を自動的に表示させることができるのでよさそうですが、どうやってパラメタファイルを作成するかが課題です。## 今後の方針現在は、「2. Hugoテンプレート」を利用していますが、「3. JavaScript」「4. Hugo DataFiles」の方法を実現させるためにも、機械的に関連記事を抽出する手段を確立することを目指します。まずは、どのような手法・アルゴリズムがあるのかを調べてみます。
